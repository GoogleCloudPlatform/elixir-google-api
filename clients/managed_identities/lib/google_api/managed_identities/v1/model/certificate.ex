# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ManagedIdentities.V1.Model.Certificate do
  @moduledoc """
  Certificate used to configure LDAPS.

  ## Attributes

  *   `expireTime` (*type:* `DateTime.t`, *default:* `nil`) - The certificate expire time.
  *   `issuingCertificate` (*type:* `GoogleApi.ManagedIdentities.V1.Model.Certificate.t`, *default:* `nil`) - The issuer of this certificate.
  *   `subject` (*type:* `String.t`, *default:* `nil`) - The certificate subject.
  *   `subjectAlternativeName` (*type:* `list(String.t)`, *default:* `nil`) - The additional hostnames for the domain.
  *   `thumbprint` (*type:* `String.t`, *default:* `nil`) - The certificate thumbprint which uniquely identifies the certificate.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :expireTime => DateTime.t() | nil,
          :issuingCertificate => GoogleApi.ManagedIdentities.V1.Model.Certificate.t() | nil,
          :subject => String.t() | nil,
          :subjectAlternativeName => list(String.t()) | nil,
          :thumbprint => String.t() | nil
        }

  field(:expireTime, as: DateTime)
  field(:issuingCertificate, as: GoogleApi.ManagedIdentities.V1.Model.Certificate)
  field(:subject)
  field(:subjectAlternativeName, type: :list)
  field(:thumbprint)
end

defimpl Poison.Decoder, for: GoogleApi.ManagedIdentities.V1.Model.Certificate do
  def decode(value, options) do
    GoogleApi.ManagedIdentities.V1.Model.Certificate.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ManagedIdentities.V1.Model.Certificate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
