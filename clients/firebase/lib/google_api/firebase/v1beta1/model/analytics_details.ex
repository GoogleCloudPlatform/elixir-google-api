# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Firebase.V1beta1.Model.AnalyticsDetails do
  @moduledoc """


  ## Attributes

  *   `analyticsProperty` (*type:* `GoogleApi.Firebase.V1beta1.Model.AnalyticsProperty.t`, *default:* `nil`) - The Analytics Property object associated with the specified
      `FirebaseProject`.
      <br>
      <br>This object contains the details of the Google Analytics property
      associated with the specified `FirebaseProject`.
  *   `streamMappings` (*type:* `list(GoogleApi.Firebase.V1beta1.Model.StreamMapping.t)`, *default:* `nil`) - For Android Apps and iOS Apps: A map of `app` to `streamId` for each
      Firebase App in the specified `FirebaseProject`. Each `app` and
      `streamId` appears only once.<br>
      <br>
      For Web Apps: A map of `app` to `streamId` and `measurementId` for each
      Firebase App in the specified `FirebaseProject`. Each `app`, `streamId`,
      and `measurementId` appears only once.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyticsProperty => GoogleApi.Firebase.V1beta1.Model.AnalyticsProperty.t(),
          :streamMappings => list(GoogleApi.Firebase.V1beta1.Model.StreamMapping.t())
        }

  field(:analyticsProperty, as: GoogleApi.Firebase.V1beta1.Model.AnalyticsProperty)
  field(:streamMappings, as: GoogleApi.Firebase.V1beta1.Model.StreamMapping, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Firebase.V1beta1.Model.AnalyticsDetails do
  def decode(value, options) do
    GoogleApi.Firebase.V1beta1.Model.AnalyticsDetails.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firebase.V1beta1.Model.AnalyticsDetails do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
