# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Firebase.V1beta1.Model.DefaultResources do
  @moduledoc """
  The default resources associated with a `FirebaseProject`.

  ## Attributes

  *   `hostingSite` (*type:* `String.t`, *default:* `nil`) - The default Firebase Hosting site name, in the format:
      <br><code><var>projectId</var></code>
      <br>Though rare, your `projectId` might already be used as the name for an
      existing Hosting site in another project (learn more about creating
      non-default,
      [additional sites](https://firebase.google.com/docs/hosting/multisites)).
      In these cases, your `projectId` is appended with a hyphen then five
      alphanumeric characters to create your default Hosting site name. For
      example, if your `projectId` is `myproject123`, your default Hosting site
      name might be:
      <br><code>myproject123-a5c16</code>
  *   `locationId` (*type:* `String.t`, *default:* `nil`) - The ID of the project's default GCP resource location. The location is one
      of the available
      [GCP resource
      locations](https://firebase.google.com/docs/projects/locations). <br>
      <br>This field is omitted if the default GCP resource location has not been
      finalized yet. To set your project's default GCP resource location,
      call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize)
      after you add Firebase services to your project.
  *   `realtimeDatabaseInstance` (*type:* `String.t`, *default:* `nil`) - The default Firebase Realtime Database instance name, in the format:
      <br><code><var>projectId</var></code>
      <br>Though rare, your `projectId` might already be used as the name for an
      existing Realtime Database instance in another project (learn more about
      [database
      sharding](https://firebase.google.com/docs/database/usage/sharding)). In
      these cases, your `projectId` is appended with a hyphen then five
      alphanumeric characters to create your default Realtime Database instance
      name. For example, if your `projectId` is `myproject123`, your default
      database instance name might be:
      <br><code>myproject123-a5c16</code>
  *   `storageBucket` (*type:* `String.t`, *default:* `nil`) - The default Cloud Storage for Firebase storage bucket, in the format:
      <br><code><var>projectId</var>.appspot.com</code>
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hostingSite => String.t(),
          :locationId => String.t(),
          :realtimeDatabaseInstance => String.t(),
          :storageBucket => String.t()
        }

  field(:hostingSite)
  field(:locationId)
  field(:realtimeDatabaseInstance)
  field(:storageBucket)
end

defimpl Poison.Decoder, for: GoogleApi.Firebase.V1beta1.Model.DefaultResources do
  def decode(value, options) do
    GoogleApi.Firebase.V1beta1.Model.DefaultResources.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firebase.V1beta1.Model.DefaultResources do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
