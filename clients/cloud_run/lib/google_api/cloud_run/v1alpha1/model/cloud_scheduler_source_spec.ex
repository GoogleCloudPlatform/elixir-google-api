# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.CloudSchedulerSourceSpec do
  @moduledoc """
  The desired state of the CloudSchedulerSource.

  ## Attributes

  *   `ceOverrides` (*type:* `GoogleApi.CloudRun.V1alpha1.Model.CloudEventOverrides.t`, *default:* `nil`) - CloudEventOverrides defines overrides to control the output format and
      modifications of the event sent to the sink.
  *   `data` (*type:* `String.t`, *default:* `nil`) - Data to send in the payload of the Event.
  *   `location` (*type:* `String.t`, *default:* `nil`) - Location to create the Scheduler job in.
  *   `project` (*type:* `String.t`, *default:* `nil`) - Project is the ID of the Google Cloud Project that the CloudPubSubSource
      Topic exists in. If omitted, defaults to same as the cluster.
  *   `pubsubSecret` (*type:* `GoogleApi.CloudRun.V1alpha1.Model.SecretKeySelector.t`, *default:* `nil`) - CloudPubSubSourceSecret is the credential to use to create
      Topic / PullSubscription resources. If omitted, uses Secret.
  *   `schedule` (*type:* `String.t`, *default:* `nil`) - Schedule in cron format, for example: "* * * * *" would be run
      every minute.
  *   `secret` (*type:* `GoogleApi.CloudRun.V1alpha1.Model.SecretKeySelector.t`, *default:* `nil`) - Secret is the credential to use to create the Scheduler Job.
      If not specified, defaults to:
      Name: google-cloud-key
      Key: key.json
  *   `sink` (*type:* `GoogleApi.CloudRun.V1alpha1.Model.Destination.t`, *default:* `nil`) - Sink is a reference to an object that will resolve to a domain name or a
      URI directly to use as the sink.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ceOverrides => GoogleApi.CloudRun.V1alpha1.Model.CloudEventOverrides.t(),
          :data => String.t(),
          :location => String.t(),
          :project => String.t(),
          :pubsubSecret => GoogleApi.CloudRun.V1alpha1.Model.SecretKeySelector.t(),
          :schedule => String.t(),
          :secret => GoogleApi.CloudRun.V1alpha1.Model.SecretKeySelector.t(),
          :sink => GoogleApi.CloudRun.V1alpha1.Model.Destination.t()
        }

  field(:ceOverrides, as: GoogleApi.CloudRun.V1alpha1.Model.CloudEventOverrides)
  field(:data)
  field(:location)
  field(:project)
  field(:pubsubSecret, as: GoogleApi.CloudRun.V1alpha1.Model.SecretKeySelector)
  field(:schedule)
  field(:secret, as: GoogleApi.CloudRun.V1alpha1.Model.SecretKeySelector)
  field(:sink, as: GoogleApi.CloudRun.V1alpha1.Model.Destination)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.CloudSchedulerSourceSpec do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.CloudSchedulerSourceSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.CloudSchedulerSourceSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
