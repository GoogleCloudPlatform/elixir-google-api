# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.Configuration do
  @moduledoc """
  Configuration represents the "floating HEAD" of a linear history of
  Revisions, and optionally how the containers those revisions reference are
  built. Users create new Revisions by updating the Configuration's spec. The
  "latest created" revision's name is available under status, as is the "latest
  ready" revision's name. See also:
  https://github.com/knative/serving/blob/master/docs/spec/overview.md#configuration

  ## Attributes

  - apiVersion (String.t): The API version for this call such as "v1alpha1". Defaults to `nil`.
  - kind (String.t): The kind of resource, in this case always "Configuration". Defaults to `nil`.
  - metadata (GoogleApi.CloudRun.V1alpha1.Model.ObjectMeta.t): Metadata associated with this Configuration, including name, namespace,
  labels, and annotations. Defaults to `nil`.
  - spec (GoogleApi.CloudRun.V1alpha1.Model.ConfigurationSpec.t): Spec holds the desired state of the Configuration (from the client). Defaults to `nil`.
  - status (GoogleApi.CloudRun.V1alpha1.Model.ConfigurationStatus.t): Status communicates the observed state of the Configuration (from the
  controller). Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiVersion => String.t(),
          :kind => String.t(),
          :metadata => GoogleApi.CloudRun.V1alpha1.Model.ObjectMeta.t(),
          :spec => GoogleApi.CloudRun.V1alpha1.Model.ConfigurationSpec.t(),
          :status => GoogleApi.CloudRun.V1alpha1.Model.ConfigurationStatus.t()
        }

  field(:apiVersion)
  field(:kind)
  field(:metadata, as: GoogleApi.CloudRun.V1alpha1.Model.ObjectMeta)
  field(:spec, as: GoogleApi.CloudRun.V1alpha1.Model.ConfigurationSpec)
  field(:status, as: GoogleApi.CloudRun.V1alpha1.Model.ConfigurationStatus)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.Configuration do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.Configuration.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.Configuration do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
