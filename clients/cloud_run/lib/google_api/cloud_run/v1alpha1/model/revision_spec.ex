# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.RevisionSpec do
  @moduledoc """
  RevisionSpec holds the desired state of the Revision (from the client).

  ## Attributes

  - concurrencyModel (String.t): ConcurrencyModel specifies the desired concurrency model
  (Single or Multi) for the Revision. Defaults to Multi.
  Deprecated in favor of ContainerConcurrency.
  +optional Defaults to `nil`.
  - container (GoogleApi.CloudRun.V1alpha1.Model.Container.t): Container defines the unit of execution for this Revision.
  In the context of a Revision, we disallow a number of the fields of
  this Container, including: name, ports, and volumeMounts.
  The runtime contract is documented here:
  https://github.com/knative/serving/blob/master/docs/runtime-contract.md Defaults to `nil`.
  - containerConcurrency (integer()): ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
  requests per container of the Revision. Values are:
  - `0` thread-safe, the system should manage the max concurrency. This is
   the default value.
  - `1` not-thread-safe. Single concurrency
  - `2-N` thread-safe, max concurrency of N Defaults to `nil`.
  - containers (list(GoogleApi.CloudRun.V1alpha1.Model.Container.t)): Containers holds the single container that defines the unit of execution
  for this Revision. In the context of a Revision, we disallow a number of
  fields on this Container, including: name and lifecycle. Defaults to `nil`.
  - generation (integer()): Deprecated and not currently populated by Cloud Run. See
  metadata.generation instead, which is the sequence number containing the
  latest generation of the desired state.

  Read-only. Defaults to `nil`.
  - serviceAccountName (String.t): Not currently used by Cloud Run. Defaults to `nil`.
  - servingState (String.t): ServingState holds a value describing the state the resources
  are in for this Revision.
  Users must not specify this when creating a revision. It is expected
  that the system will manipulate this based on routability and load.

  Populated by the system.
  Read-only. Defaults to `nil`.
  - timeoutSeconds (integer()): TimeoutSeconds holds the max duration the instance is allowed for
  responding to a request.
  Not currently used by Cloud Run. Defaults to `nil`.
  - volumes (list(GoogleApi.CloudRun.V1alpha1.Model.Volume.t)):  Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :concurrencyModel => String.t(),
          :container => GoogleApi.CloudRun.V1alpha1.Model.Container.t(),
          :containerConcurrency => integer(),
          :containers => list(GoogleApi.CloudRun.V1alpha1.Model.Container.t()),
          :generation => integer(),
          :serviceAccountName => String.t(),
          :servingState => String.t(),
          :timeoutSeconds => integer(),
          :volumes => list(GoogleApi.CloudRun.V1alpha1.Model.Volume.t())
        }

  field(:concurrencyModel)
  field(:container, as: GoogleApi.CloudRun.V1alpha1.Model.Container)
  field(:containerConcurrency)
  field(:containers, as: GoogleApi.CloudRun.V1alpha1.Model.Container, type: :list)
  field(:generation)
  field(:serviceAccountName)
  field(:servingState)
  field(:timeoutSeconds)
  field(:volumes, as: GoogleApi.CloudRun.V1alpha1.Model.Volume, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.RevisionSpec do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.RevisionSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.RevisionSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
