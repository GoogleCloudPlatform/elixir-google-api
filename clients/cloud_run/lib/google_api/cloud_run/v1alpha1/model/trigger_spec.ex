# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.TriggerSpec do
  @moduledoc """
  The desired state of the Trigger.

  ## Attributes

  - broker (String.t): Broker is the broker that this trigger receives events from. If not specified, will default to &#39;default&#39;.  Not currently supported by Cloud Run. Defaults to: `null`.
  - filter (TriggerFilter): Filter is the filter to apply against all events from the Broker. Only events that pass this filter will be sent to the Subscriber. If not specified, will default to allowing all events.  This must be specified in Cloud Run. Defaults to: `null`.
  - subscriber (SubscriberSpec): Subscriber is the addressable that receives events from the Broker that pass the Filter. It is required.  E.g. https://us-central1-myproject.cloudfunctions.net/myfunction or /namespaces/my-project/services/my-service. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :broker => any(),
          :filter => GoogleApi.CloudRun.V1alpha1.Model.TriggerFilter.t(),
          :subscriber => GoogleApi.CloudRun.V1alpha1.Model.SubscriberSpec.t()
        }

  field(:broker)
  field(:filter, as: GoogleApi.CloudRun.V1alpha1.Model.TriggerFilter)
  field(:subscriber, as: GoogleApi.CloudRun.V1alpha1.Model.SubscriberSpec)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.TriggerSpec do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.TriggerSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.TriggerSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
