# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.EventTypeSpec do
  @moduledoc """


  ## Attributes

  - broker (String.t): Refers to the Broker that can provide the EventType. Defaults to `nil`.
  - description (String.t): Description is a string describing what the EventType is about.
  +optional Defaults to `nil`.
  - schema (String.t): Schema is a URI with the EventType schema. It may be a JSON schema, a
  protobuf schema, etc.
  +optional Defaults to `nil`.
  - source (String.t): Source is a valid URI. Refers to the CloudEvent source as it enters into
  the eventing mesh. Defaults to `nil`.
  - type (String.t): Type is authoritative. This refers to the CloudEvent type as it enters
  into the eventing mesh. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :broker => String.t(),
          :description => String.t(),
          :schema => String.t(),
          :source => String.t(),
          :type => String.t()
        }

  field(:broker)
  field(:description)
  field(:schema)
  field(:source)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.EventTypeSpec do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.EventTypeSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.EventTypeSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
