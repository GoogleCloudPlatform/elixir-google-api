# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudBuild.V1.Model.Build do
  @moduledoc """
  A build resource in the Container Builder API.  At a high level, a Build describes where to find source code, how to build it (for example, the builder image to run on the source), and what tag to apply to the built image when it is pushed to Google Container Registry.  Fields can include the following variables which will be expanded when the build is created:  - $PROJECT_ID: the project ID of the build. - $BUILD_ID: the autogenerated ID of the build. - $REPO_NAME: the source repository name specified by RepoSource. - $BRANCH_NAME: the branch name specified by RepoSource. - $TAG_NAME: the tag name specified by RepoSource. - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or   resolved from the specified branch or tag.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"tags",
    :"buildTriggerId",
    :"createTime",
    :"finishTime",
    :"id",
    :"images",
    :"logUrl",
    :"logsBucket",
    :"options",
    :"projectId",
    :"results",
    :"secrets",
    :"source",
    :"sourceProvenance",
    :"startTime",
    :"status",
    :"statusDetail",
    :"steps",
    :"substitutions",
    :"timeout"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.Build do
  import GoogleApi.CloudBuild.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"options", :struct, GoogleApi.CloudBuild.V1.Model.BuildOptions, options)
    |> deserialize(:"results", :struct, GoogleApi.CloudBuild.V1.Model.Results, options)
    |> deserialize(:"secrets", :list, GoogleApi.CloudBuild.V1.Model.Secret, options)
    |> deserialize(:"source", :struct, GoogleApi.CloudBuild.V1.Model.Source, options)
    |> deserialize(:"sourceProvenance", :struct, GoogleApi.CloudBuild.V1.Model.SourceProvenance, options)
    |> deserialize(:"steps", :list, GoogleApi.CloudBuild.V1.Model.BuildStep, options)
  end
end

