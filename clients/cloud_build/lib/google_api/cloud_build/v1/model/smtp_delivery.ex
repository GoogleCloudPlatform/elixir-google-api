# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V1.Model.SMTPDelivery do
  @moduledoc """
  SMTPDelivery is the delivery configuration for an SMTP (email) notification.

  ## Attributes

  *   `fromAddress` (*type:* `String.t`, *default:* `nil`) - This is the SMTP account/email that appears in the `From:` of the email.
      If empty, it is assumed to be sender.
  *   `password` (*type:* `GoogleApi.CloudBuild.V1.Model.NotifierSecretRef.t`, *default:* `nil`) - The SMTP sender's password.
  *   `port` (*type:* `String.t`, *default:* `nil`) - The SMTP port of the server.
  *   `recipientAddresses` (*type:* `list(String.t)`, *default:* `nil`) - This is the list of addresses to which we send the email (i.e. in the `To:`
      of the email).
  *   `senderAddress` (*type:* `String.t`, *default:* `nil`) - This is the SMTP account/email that is used to send the message.
  *   `server` (*type:* `String.t`, *default:* `nil`) - The address of the SMTP server.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fromAddress => String.t(),
          :password => GoogleApi.CloudBuild.V1.Model.NotifierSecretRef.t(),
          :port => String.t(),
          :recipientAddresses => list(String.t()),
          :senderAddress => String.t(),
          :server => String.t()
        }

  field(:fromAddress)
  field(:password, as: GoogleApi.CloudBuild.V1.Model.NotifierSecretRef)
  field(:port)
  field(:recipientAddresses, type: :list)
  field(:senderAddress)
  field(:server)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.SMTPDelivery do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.SMTPDelivery.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.SMTPDelivery do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
