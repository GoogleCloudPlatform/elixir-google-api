# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V1.Model.Notification do
  @moduledoc """
  Notification is the container which holds the data that is relevant to this
  particular notification.

  ## Attributes

  *   `filter` (*type:* `String.t`, *default:* `nil`) - The filter string to use for notification filtering.
      Currently, this is assumed to be a CEL program.
      See https://opensource.google/projects/cel for more.
  *   `httpDelivery` (*type:* `GoogleApi.CloudBuild.V1.Model.HTTPDelivery.t`, *default:* `nil`) - Configuration for HTTP delivery.
  *   `slackDelivery` (*type:* `GoogleApi.CloudBuild.V1.Model.SlackDelivery.t`, *default:* `nil`) - Configuration for Slack delivery.
  *   `smtpDelivery` (*type:* `GoogleApi.CloudBuild.V1.Model.SMTPDelivery.t`, *default:* `nil`) - Configuration for SMTP (email) delivery.
  *   `structDelivery` (*type:* `map()`, *default:* `nil`) - Escape hatch for users to supply custom delivery configs.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :filter => String.t(),
          :httpDelivery => GoogleApi.CloudBuild.V1.Model.HTTPDelivery.t(),
          :slackDelivery => GoogleApi.CloudBuild.V1.Model.SlackDelivery.t(),
          :smtpDelivery => GoogleApi.CloudBuild.V1.Model.SMTPDelivery.t(),
          :structDelivery => map()
        }

  field(:filter)
  field(:httpDelivery, as: GoogleApi.CloudBuild.V1.Model.HTTPDelivery)
  field(:slackDelivery, as: GoogleApi.CloudBuild.V1.Model.SlackDelivery)
  field(:smtpDelivery, as: GoogleApi.CloudBuild.V1.Model.SMTPDelivery)
  field(:structDelivery, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.Notification do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.Notification.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.Notification do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
