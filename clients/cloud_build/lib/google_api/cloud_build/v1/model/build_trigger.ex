# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudBuild.V1.Model.BuildTrigger do
  @moduledoc """
  Configuration for an automated build in response to source repository changes.

  ## Attributes

  - build (Build): Contents of the build template. Defaults to: `null`.
  - createTime (DateTime.t): Output only. Time when the trigger was created. Defaults to: `null`.
  - description (String.t): Human-readable description of this trigger. Defaults to: `null`.
  - disabled (boolean()): If true, the trigger will never result in a build. Defaults to: `null`.
  - filename (String.t): Path, from the source root, to a file whose contents is used for the template. Defaults to: `null`.
  - id (String.t): Output only. Unique identifier of the trigger. Defaults to: `null`.
  - substitutions (%{optional(String.t) &#x3D;&gt; String.t}): Substitutions data for Build resource. Defaults to: `null`.
  - triggerTemplate (RepoSource): Template describing the types of source changes to trigger a build.  Branch and tag names in trigger templates are interpreted as regular expressions. Any branch or tag change that matches that regular expression will trigger a build. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :build => GoogleApi.CloudBuild.V1.Model.Build.t(),
          :createTime => DateTime.t(),
          :description => any(),
          :disabled => any(),
          :filename => any(),
          :id => any(),
          :substitutions => map(),
          :triggerTemplate => GoogleApi.CloudBuild.V1.Model.RepoSource.t()
        }

  field(:build, as: GoogleApi.CloudBuild.V1.Model.Build)
  field(:createTime, as: DateTime)
  field(:description)
  field(:disabled)
  field(:filename)
  field(:id)
  field(:substitutions, type: :map)
  field(:triggerTemplate, as: GoogleApi.CloudBuild.V1.Model.RepoSource)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.BuildTrigger do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.BuildTrigger.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.BuildTrigger do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
