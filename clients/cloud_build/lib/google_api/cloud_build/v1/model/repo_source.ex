# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.CloudBuild.V1.Model.RepoSource do
  @moduledoc """
  Location of the source in a Google Cloud Source Repository.

  ## Attributes

  - branchName (String.t): Name of the branch to build. Defaults to `nil`.
  - commitSha (String.t): Explicit commit SHA to build. Defaults to `nil`.
  - dir (String.t): Directory, relative to the source root, in which to run the build.

  This must be a relative path. If a step's `dir` is specified and is an
  absolute path, this value is ignored for that step's execution. Defaults to `nil`.
  - projectId (String.t): ID of the project that owns the Cloud Source Repository. If omitted, the
  project ID requesting the build is assumed. Defaults to `nil`.
  - repoName (String.t): Name of the Cloud Source Repository. If omitted, the name "default" is
  assumed. Defaults to `nil`.
  - tagName (String.t): Name of the tag to build. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :branchName => String.t(),
          :commitSha => String.t(),
          :dir => String.t(),
          :projectId => String.t(),
          :repoName => String.t(),
          :tagName => String.t()
        }

  field(:branchName)
  field(:commitSha)
  field(:dir)
  field(:projectId)
  field(:repoName)
  field(:tagName)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.RepoSource do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.RepoSource.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.RepoSource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
