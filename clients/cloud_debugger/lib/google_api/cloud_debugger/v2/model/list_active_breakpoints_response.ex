# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudDebugger.V2.Model.ListActiveBreakpointsResponse do
  @moduledoc """
  Response for listing active breakpoints.

  ## Attributes

  - breakpoints ([Breakpoint]): List of all active breakpoints. The fields &#x60;id&#x60; and &#x60;location&#x60; are guaranteed to be set on each breakpoint. Defaults to: `null`.
  - nextWaitToken (String.t): A token that can be used in the next method call to block until the list of breakpoints changes. Defaults to: `null`.
  - waitExpired (boolean()): If set to &#x60;true&#x60;, indicates that there is no change to the list of active breakpoints and the server-selected timeout has expired. The &#x60;breakpoints&#x60; field would be empty and should be ignored. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :breakpoints => list(GoogleApi.CloudDebugger.V2.Model.Breakpoint.t()),
          :nextWaitToken => any(),
          :waitExpired => any()
        }

  field(:breakpoints, as: GoogleApi.CloudDebugger.V2.Model.Breakpoint, type: :list)
  field(:nextWaitToken)
  field(:waitExpired)
end

defimpl Poison.Decoder, for: GoogleApi.CloudDebugger.V2.Model.ListActiveBreakpointsResponse do
  def decode(value, options) do
    GoogleApi.CloudDebugger.V2.Model.ListActiveBreakpointsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudDebugger.V2.Model.ListActiveBreakpointsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
