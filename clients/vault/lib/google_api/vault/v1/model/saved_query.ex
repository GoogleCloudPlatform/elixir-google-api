# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Vault.V1.Model.SavedQuery do
  @moduledoc """
  The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The server-generated timestamp when the saved query was created.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - The name of the saved query.
  *   `matterId` (*type:* `String.t`, *default:* `nil`) - Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL.
  *   `query` (*type:* `GoogleApi.Vault.V1.Model.Query.t`, *default:* `nil`) - The search parameters of the saved query.
  *   `savedQueryId` (*type:* `String.t`, *default:* `nil`) - A unique identifier for the saved query.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :displayName => String.t() | nil,
          :matterId => String.t() | nil,
          :query => GoogleApi.Vault.V1.Model.Query.t() | nil,
          :savedQueryId => String.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:displayName)
  field(:matterId)
  field(:query, as: GoogleApi.Vault.V1.Model.Query)
  field(:savedQueryId)
end

defimpl Poison.Decoder, for: GoogleApi.Vault.V1.Model.SavedQuery do
  def decode(value, options) do
    GoogleApi.Vault.V1.Model.SavedQuery.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Vault.V1.Model.SavedQuery do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
