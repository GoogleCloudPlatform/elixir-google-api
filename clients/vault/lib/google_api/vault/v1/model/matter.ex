# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Vault.V1.Model.Matter do
  @moduledoc """
  Represents a matter.

  ## Attributes

  - description (String.t): The description of the matter. Defaults to: `null`.
  - matterId (String.t): The matter ID which is generated by the server. Should be blank when creating a new matter. Defaults to: `null`.
  - matterPermissions ([MatterPermission]): List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have. Defaults to: `null`.
  - name (String.t): The name of the matter. Defaults to: `null`.
  - state (String.t): The state of the matter. Defaults to: `null`.
    - Enum - one of [STATE_UNSPECIFIED, OPEN, CLOSED, DELETED]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => any(),
          :matterId => any(),
          :matterPermissions => list(GoogleApi.Vault.V1.Model.MatterPermission.t()),
          :name => any(),
          :state => any()
        }

  field(:description)
  field(:matterId)
  field(:matterPermissions, as: GoogleApi.Vault.V1.Model.MatterPermission, type: :list)
  field(:name)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Vault.V1.Model.Matter do
  def decode(value, options) do
    GoogleApi.Vault.V1.Model.Matter.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Vault.V1.Model.Matter do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
