# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DoubleClickSearch.V2.Api.Conversion do
  @moduledoc """
  API calls for all endpoints tagged `Conversion`.
  """

  alias GoogleApi.DoubleClickSearch.V2.Connection
  import GoogleApi.DoubleClickSearch.V2.RequestBuilder


  @doc """
  Retrieves a list of conversions from a DoubleClick Search engine account.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - agency_id (String): Numeric ID of the agency.
  - advertiser_id (String): Numeric ID of the advertiser.
  - engine_account_id (String): Numeric ID of the engine account.
  - end_date (Integer): Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - row_count (Integer): The number of conversions to return per call.
  - start_date (Integer): First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - start_row (Integer): The 0-based starting index for retrieving conversions results.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :ad_group_id (String): Numeric ID of the ad group.
    - :ad_id (String): Numeric ID of the ad.
    - :campaign_id (String): Numeric ID of the campaign.
    - :criterion_id (String): Numeric ID of the criterion.

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_get(Tesla.Env.client, String.t, String.t, String.t, Integer.t, Integer.t, Integer.t, Integer.t, keyword()) :: {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t} | {:error, Tesla.Env.t}
  def doubleclicksearch_conversion_get(connection, agency_id, advertiser_id, engine_account_id, end_date, row_count, start_date, start_row, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"adGroupId" => :query,
      :"adId" => :query,
      :"campaignId" => :query,
      :"criterionId" => :query
    }
    %{}
    |> method(:get)
    |> url("/agency/{agencyId}/advertiser/{advertiserId}/engine/{engineAccountId}/conversion", %{
         "agencyId" => URI.encode_www_form(agency_id),
         "advertiserId" => URI.encode_www_form(advertiser_id),
         "engineAccountId" => URI.encode_www_form(engine_account_id)
       })
    |> add_param(:query, :"endDate", end_date)
    |> add_param(:query, :"rowCount", row_count)
    |> add_param(:query, :"startDate", start_date)
    |> add_param(:query, :"startRow", start_row)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DoubleClickSearch.V2.Model.ConversionList{})
  end

  @doc """
  Inserts a batch of new conversions into DoubleClick Search.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ConversionList): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_insert(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t} | {:error, Tesla.Env.t}
  def doubleclicksearch_conversion_insert(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/conversion")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DoubleClickSearch.V2.Model.ConversionList{})
  end

  @doc """
  Updates a batch of conversions in DoubleClick Search. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - advertiser_id (String): Numeric ID of the advertiser.
  - agency_id (String): Numeric ID of the agency.
  - end_date (Integer): Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - engine_account_id (String): Numeric ID of the engine account.
  - row_count (Integer): The number of conversions to return per call.
  - start_date (Integer): First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - start_row (Integer): The 0-based starting index for retrieving conversions results.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ConversionList): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_patch(Tesla.Env.client, String.t, String.t, Integer.t, String.t, Integer.t, Integer.t, Integer.t, keyword()) :: {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t} | {:error, Tesla.Env.t}
  def doubleclicksearch_conversion_patch(connection, advertiser_id, agency_id, end_date, engine_account_id, row_count, start_date, start_row, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/conversion")
    |> add_param(:query, :"advertiserId", advertiser_id)
    |> add_param(:query, :"agencyId", agency_id)
    |> add_param(:query, :"endDate", end_date)
    |> add_param(:query, :"engineAccountId", engine_account_id)
    |> add_param(:query, :"rowCount", row_count)
    |> add_param(:query, :"startDate", start_date)
    |> add_param(:query, :"startRow", start_row)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DoubleClickSearch.V2.Model.ConversionList{})
  end

  @doc """
  Updates a batch of conversions in DoubleClick Search.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ConversionList): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_update(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t} | {:error, Tesla.Env.t}
  def doubleclicksearch_conversion_update(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/conversion")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DoubleClickSearch.V2.Model.ConversionList{})
  end

  @doc """
  Updates the availabilities of a batch of floodlight activities in DoubleClick Search.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :empty (UpdateAvailabilityRequest): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.UpdateAvailabilityResponse{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_update_availability(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.DoubleClickSearch.V2.Model.UpdateAvailabilityResponse.t} | {:error, Tesla.Env.t}
  def doubleclicksearch_conversion_update_availability(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"empty" => :body
    }
    %{}
    |> method(:post)
    |> url("/conversion/updateAvailability")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DoubleClickSearch.V2.Model.UpdateAvailabilityResponse{})
  end
end
