# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Gmail.V1.Model.MessagePart do
  @moduledoc """
  A single MIME message part.

  ## Attributes

  - body (GoogleApi.Gmail.V1.Model.MessagePartBody.t): The message part body for this part, which may be empty for container MIME message parts. Defaults to `nil`.
  - filename (String.t): The filename of the attachment. Only present if this message part represents an attachment. Defaults to `nil`.
  - headers (list(GoogleApi.Gmail.V1.Model.MessagePartHeader.t)): List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject. Defaults to `nil`.
  - mimeType (String.t): The MIME type of the message part. Defaults to `nil`.
  - partId (String.t): The immutable ID of the message part. Defaults to `nil`.
  - parts (list(GoogleApi.Gmail.V1.Model.MessagePart.t)): The child MIME message parts of this part. This only applies to container MIME message parts, for example multipart/*. For non- container MIME message part types, such as text/plain, this field is empty. For more information, see RFC 1521. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :body => GoogleApi.Gmail.V1.Model.MessagePartBody.t(),
          :filename => String.t(),
          :headers => list(GoogleApi.Gmail.V1.Model.MessagePartHeader.t()),
          :mimeType => String.t(),
          :partId => String.t(),
          :parts => list(GoogleApi.Gmail.V1.Model.MessagePart.t())
        }

  field(:body, as: GoogleApi.Gmail.V1.Model.MessagePartBody)
  field(:filename)
  field(:headers, as: GoogleApi.Gmail.V1.Model.MessagePartHeader, type: :list)
  field(:mimeType)
  field(:partId)
  field(:parts, as: GoogleApi.Gmail.V1.Model.MessagePart, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Gmail.V1.Model.MessagePart do
  def decode(value, options) do
    GoogleApi.Gmail.V1.Model.MessagePart.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Gmail.V1.Model.MessagePart do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
