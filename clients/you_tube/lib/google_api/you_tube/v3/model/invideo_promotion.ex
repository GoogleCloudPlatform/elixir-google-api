# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.YouTube.V3.Model.InvideoPromotion do
  @moduledoc """
  Describes an invideo promotion campaign consisting of multiple promoted items. A campaign belongs to a single channel_id.

  ## Attributes

  - defaultTiming (InvideoTiming): The default temporal position within the video where the promoted item will be displayed. Can be overriden by more specific timing in the item. Defaults to: `null`.
  - items ([PromotedItem]): List of promoted items in decreasing priority. Defaults to: `null`.
  - position (InvideoPosition): The spatial position within the video where the promoted item will be displayed. Defaults to: `null`.
  - useSmartTiming (boolean()): Indicates whether the channel&#39;s promotional campaign uses \&quot;smart timing.\&quot; This feature attempts to show promotions at a point in the video when they are more likely to be clicked and less likely to disrupt the viewing experience. This feature also picks up a single promotion to show on each video. Defaults to: `null`.
  """

  defstruct [
    :defaultTiming,
    :items,
    :position,
    :useSmartTiming
  ]
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.InvideoPromotion do
  import GoogleApi.YouTube.V3.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:defaultTiming, :struct, GoogleApi.YouTube.V3.Model.InvideoTiming, options)
    |> deserialize(:items, :list, GoogleApi.YouTube.V3.Model.PromotedItem, options)
    |> deserialize(:position, :struct, GoogleApi.YouTube.V3.Model.InvideoPosition, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.InvideoPromotion do
  def encode(value, options) do
    GoogleApi.YouTube.V3.Deserializer.serialize_non_nil(value, options)
  end
end
