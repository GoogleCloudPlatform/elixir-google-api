# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.YouTube.V3.Model.LinkElement do
  @moduledoc """


  ## Attributes

  *   `callToActionType` (*type:* `String.t`, *default:* `nil`) - 
  *   `customLinkText` (*type:* `String.t`, *default:* `nil`) - Custom text to show as the website link.
  *   `externalImageUrl` (*type:* `String.t`, *default:* `nil`) - URL to an externally hosted image.
  *   `targetUrl` (*type:* `String.t`, *default:* `nil`) - The URL to which this card points. Required.
  *   `uploadedImage` (*type:* `GoogleApi.YouTube.V3.Model.LinkElementUploadedImage.t`, *default:* `nil`) - Previously uploaded image.
  *   `websiteType` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :callToActionType => String.t(),
          :customLinkText => String.t(),
          :externalImageUrl => String.t(),
          :targetUrl => String.t(),
          :uploadedImage => GoogleApi.YouTube.V3.Model.LinkElementUploadedImage.t(),
          :websiteType => String.t()
        }

  field(:callToActionType)
  field(:customLinkText)
  field(:externalImageUrl)
  field(:targetUrl)
  field(:uploadedImage, as: GoogleApi.YouTube.V3.Model.LinkElementUploadedImage)
  field(:websiteType)
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.LinkElement do
  def decode(value, options) do
    GoogleApi.YouTube.V3.Model.LinkElement.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.LinkElement do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
