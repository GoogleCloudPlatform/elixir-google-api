# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.YouTube.V3.Model.CommentThreadSnippet do
  @moduledoc """
  Basic details about a comment thread.

  ## Attributes

  - canReply (boolean()): Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field. Defaults to: `null`.
  - channelId (String.t): The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn&#39;t set the comments refer to the channel itself. Defaults to: `null`.
  - isPublic (boolean()): Whether the thread (and therefore all its comments) is visible to all YouTube users. Defaults to: `null`.
  - topLevelComment (Comment): The top level comment of this thread. Defaults to: `null`.
  - totalReplyCount (integer()): The total number of replies (not including the top level comment). Defaults to: `null`.
  - videoId (String.t): The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :canReply => any(),
          :channelId => any(),
          :isPublic => any(),
          :topLevelComment => GoogleApi.YouTube.V3.Model.Comment.t(),
          :totalReplyCount => any(),
          :videoId => any()
        }

  field(:canReply)
  field(:channelId)
  field(:isPublic)
  field(:topLevelComment, as: GoogleApi.YouTube.V3.Model.Comment)
  field(:totalReplyCount)
  field(:videoId)
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.CommentThreadSnippet do
  def decode(value, options) do
    GoogleApi.YouTube.V3.Model.CommentThreadSnippet.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.CommentThreadSnippet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
