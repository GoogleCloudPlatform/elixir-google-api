# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.YouTube.V3.Model.InfoCardSnippet do
  @moduledoc """


  ## Attributes

  *   `channelInfocard` (*type:* `GoogleApi.YouTube.V3.Model.ChannelCard.t`, *default:* `nil`) - 
  *   `linkInfocard` (*type:* `GoogleApi.YouTube.V3.Model.LinkCard.t`, *default:* `nil`) - 
  *   `playlistInfocard` (*type:* `GoogleApi.YouTube.V3.Model.PlaylistCard.t`, *default:* `nil`) - 
  *   `teaser` (*type:* `GoogleApi.YouTube.V3.Model.InfoCardSnippetTeaser.t`, *default:* `nil`) - Each card can have a teaser. Required.
  *   `videoInfocard` (*type:* `GoogleApi.YouTube.V3.Model.VideoCard.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :channelInfocard => GoogleApi.YouTube.V3.Model.ChannelCard.t(),
          :linkInfocard => GoogleApi.YouTube.V3.Model.LinkCard.t(),
          :playlistInfocard => GoogleApi.YouTube.V3.Model.PlaylistCard.t(),
          :teaser => GoogleApi.YouTube.V3.Model.InfoCardSnippetTeaser.t(),
          :videoInfocard => GoogleApi.YouTube.V3.Model.VideoCard.t()
        }

  field(:channelInfocard, as: GoogleApi.YouTube.V3.Model.ChannelCard)
  field(:linkInfocard, as: GoogleApi.YouTube.V3.Model.LinkCard)
  field(:playlistInfocard, as: GoogleApi.YouTube.V3.Model.PlaylistCard)
  field(:teaser, as: GoogleApi.YouTube.V3.Model.InfoCardSnippetTeaser)
  field(:videoInfocard, as: GoogleApi.YouTube.V3.Model.VideoCard)
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.InfoCardSnippet do
  def decode(value, options) do
    GoogleApi.YouTube.V3.Model.InfoCardSnippet.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.InfoCardSnippet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
