# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.YouTube.V3.Model.VideoAgeGating do
  @moduledoc """


  ## Attributes

  - alcoholContent (boolean()): Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content. Defaults to: `null`.
  - restricted (boolean()): Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won&#39;t be present. Defaults to: `null`.
  - videoGameRating (String.t): Video game rating, if any. Defaults to: `null`.
    - Enum - one of [anyone, m15Plus, m16Plus, m17Plus]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alcoholContent => any(),
          :restricted => any(),
          :videoGameRating => any()
        }

  field(:alcoholContent)
  field(:restricted)
  field(:videoGameRating)
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.VideoAgeGating do
  def decode(value, options) do
    GoogleApi.YouTube.V3.Model.VideoAgeGating.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.VideoAgeGating do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
