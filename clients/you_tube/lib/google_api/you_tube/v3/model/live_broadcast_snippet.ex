# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.YouTube.V3.Model.LiveBroadcastSnippet do
  @moduledoc """


  ## Attributes

  - actualEndTime (DateTime.t): The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. Defaults to `nil`.
  - actualStartTime (DateTime.t): The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. Defaults to `nil`.
  - channelId (String.t): The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast. Defaults to `nil`.
  - description (String.t): The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource. Defaults to `nil`.
  - isDefaultBroadcast (boolean()):  Defaults to `nil`.
  - liveChatId (String.t): The id of the live chat for this broadcast. Defaults to `nil`.
  - publishedAt (DateTime.t): The date and time that the broadcast was added to YouTube's live broadcast schedule. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. Defaults to `nil`.
  - scheduledEndTime (DateTime.t): The date and time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. Defaults to `nil`.
  - scheduledStartTime (DateTime.t): The date and time that the broadcast is scheduled to start. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. Defaults to `nil`.
  - thumbnails (GoogleApi.YouTube.V3.Model.ThumbnailDetails.t): A map of thumbnail images associated with the broadcast. For each nested object in this object, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail. Defaults to `nil`.
  - title (String.t): The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :actualEndTime => DateTime.t(),
          :actualStartTime => DateTime.t(),
          :channelId => String.t(),
          :description => String.t(),
          :isDefaultBroadcast => boolean(),
          :liveChatId => String.t(),
          :publishedAt => DateTime.t(),
          :scheduledEndTime => DateTime.t(),
          :scheduledStartTime => DateTime.t(),
          :thumbnails => GoogleApi.YouTube.V3.Model.ThumbnailDetails.t(),
          :title => String.t()
        }

  field(:actualEndTime, as: DateTime)
  field(:actualStartTime, as: DateTime)
  field(:channelId)
  field(:description)
  field(:isDefaultBroadcast)
  field(:liveChatId)
  field(:publishedAt, as: DateTime)
  field(:scheduledEndTime, as: DateTime)
  field(:scheduledStartTime, as: DateTime)
  field(:thumbnails, as: GoogleApi.YouTube.V3.Model.ThumbnailDetails)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.LiveBroadcastSnippet do
  def decode(value, options) do
    GoogleApi.YouTube.V3.Model.LiveBroadcastSnippet.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.LiveBroadcastSnippet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
