# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.YouTube.V3.Model.FanFundingEventSnippet do
  @moduledoc """


  ## Attributes

  - amountMicros (String.t): The amount of funding in micros of fund_currency. e.g., 1 is represented Defaults to: `null`.
  - channelId (String.t): Channel id where the funding event occurred. Defaults to: `null`.
  - commentText (String.t): The text contents of the comment left by the user. Defaults to: `null`.
  - createdAt (DateTime.t): The date and time when the funding occurred. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. Defaults to: `null`.
  - currency (String.t): The currency in which the fund was made. ISO 4217. Defaults to: `null`.
  - displayString (String.t): A rendered string that displays the fund amount and currency (e.g., \&quot;$1.00\&quot;). The string is rendered for the given language. Defaults to: `null`.
  - supporterDetails (ChannelProfileDetails): Details about the supporter. Only filled if the event was made public by the user. Defaults to: `null`.
  """

  defstruct [
    :amountMicros,
    :channelId,
    :commentText,
    :createdAt,
    :currency,
    :displayString,
    :supporterDetails
  ]
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.FanFundingEventSnippet do
  import GoogleApi.YouTube.V3.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :supporterDetails,
      :struct,
      GoogleApi.YouTube.V3.Model.ChannelProfileDetails,
      options
    )
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.FanFundingEventSnippet do
  def encode(value, options) do
    GoogleApi.YouTube.V3.Deserializer.serialize_non_nil(value, options)
  end
end
