# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.YouTube.V3.Model.LiveChatMessageAuthorDetails do
  @moduledoc """


  ## Attributes

  - channelId (String.t): The YouTube channel ID. Defaults to `nil`.
  - channelUrl (String.t): The channel's URL. Defaults to `nil`.
  - displayName (String.t): The channel's display name. Defaults to `nil`.
  - isChatModerator (boolean()): Whether the author is a moderator of the live chat. Defaults to `nil`.
  - isChatOwner (boolean()): Whether the author is the owner of the live chat. Defaults to `nil`.
  - isChatSponsor (boolean()): Whether the author is a sponsor of the live chat. Defaults to `nil`.
  - isVerified (boolean()): Whether the author's identity has been verified by YouTube. Defaults to `nil`.
  - profileImageUrl (String.t): The channels's avatar URL. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :channelId => String.t(),
          :channelUrl => String.t(),
          :displayName => String.t(),
          :isChatModerator => boolean(),
          :isChatOwner => boolean(),
          :isChatSponsor => boolean(),
          :isVerified => boolean(),
          :profileImageUrl => String.t()
        }

  field(:channelId)
  field(:channelUrl)
  field(:displayName)
  field(:isChatModerator)
  field(:isChatOwner)
  field(:isChatSponsor)
  field(:isVerified)
  field(:profileImageUrl)
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.LiveChatMessageAuthorDetails do
  def decode(value, options) do
    GoogleApi.YouTube.V3.Model.LiveChatMessageAuthorDetails.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTube.V3.Model.LiveChatMessageAuthorDetails do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
