# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Books.V1.Model.VolumeUserInfo do
  @moduledoc """
  User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)

  ## Attributes

  - acquiredTime (DateTime.t): Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc. Defaults to: `null`.
  - acquisitionType (integer()): How this volume was acquired. Defaults to: `null`.
  - copy (VolumeUserInfoCopy):  Defaults to: `null`.
  - entitlementType (integer()): Whether this volume is purchased, sample, pd download etc. Defaults to: `null`.
  - familySharing (VolumeUserInfoFamilySharing):  Defaults to: `null`.
  - isFamilySharedFromUser (boolean()): Whether or not the user shared this volume with the family. Defaults to: `null`.
  - isFamilySharedToUser (boolean()): Whether or not the user received this volume through family sharing. Defaults to: `null`.
  - isFamilySharingAllowed (boolean()): Deprecated: Replaced by familySharing. Defaults to: `null`.
  - isFamilySharingDisabledByFop (boolean()): Deprecated: Replaced by familySharing. Defaults to: `null`.
  - isInMyBooks (boolean()): Whether or not this volume is currently in \&quot;my books.\&quot; Defaults to: `null`.
  - isPreordered (boolean()): Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.) Defaults to: `null`.
  - isPurchased (boolean()): Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.) Defaults to: `null`.
  - isUploaded (boolean()): Whether or not this volume was user uploaded. Defaults to: `null`.
  - readingPosition (ReadingPosition): The user&#39;s current reading position in the volume, if one is available. (In LITE projection.) Defaults to: `null`.
  - rentalPeriod (VolumeUserInfoRentalPeriod):  Defaults to: `null`.
  - rentalState (String.t): Whether this book is an active or an expired rental. Defaults to: `null`.
  - review (Review): This user&#39;s review of this volume, if one exists. Defaults to: `null`.
  - updated (DateTime.t): Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format). Defaults to: `null`.
  - userUploadedVolumeInfo (VolumeUserInfoUserUploadedVolumeInfo):  Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :acquiredTime => DateTime.t(),
          :acquisitionType => any(),
          :copy => GoogleApi.Books.V1.Model.VolumeUserInfoCopy.t(),
          :entitlementType => any(),
          :familySharing => GoogleApi.Books.V1.Model.VolumeUserInfoFamilySharing.t(),
          :isFamilySharedFromUser => any(),
          :isFamilySharedToUser => any(),
          :isFamilySharingAllowed => any(),
          :isFamilySharingDisabledByFop => any(),
          :isInMyBooks => any(),
          :isPreordered => any(),
          :isPurchased => any(),
          :isUploaded => any(),
          :readingPosition => GoogleApi.Books.V1.Model.ReadingPosition.t(),
          :rentalPeriod => GoogleApi.Books.V1.Model.VolumeUserInfoRentalPeriod.t(),
          :rentalState => any(),
          :review => GoogleApi.Books.V1.Model.Review.t(),
          :updated => DateTime.t(),
          :userUploadedVolumeInfo =>
            GoogleApi.Books.V1.Model.VolumeUserInfoUserUploadedVolumeInfo.t()
        }

  field(:acquiredTime, as: DateTime)
  field(:acquisitionType)
  field(:copy, as: GoogleApi.Books.V1.Model.VolumeUserInfoCopy)
  field(:entitlementType)
  field(:familySharing, as: GoogleApi.Books.V1.Model.VolumeUserInfoFamilySharing)
  field(:isFamilySharedFromUser)
  field(:isFamilySharedToUser)
  field(:isFamilySharingAllowed)
  field(:isFamilySharingDisabledByFop)
  field(:isInMyBooks)
  field(:isPreordered)
  field(:isPurchased)
  field(:isUploaded)
  field(:readingPosition, as: GoogleApi.Books.V1.Model.ReadingPosition)
  field(:rentalPeriod, as: GoogleApi.Books.V1.Model.VolumeUserInfoRentalPeriod)
  field(:rentalState)
  field(:review, as: GoogleApi.Books.V1.Model.Review)
  field(:updated, as: DateTime)

  field(
    :userUploadedVolumeInfo,
    as: GoogleApi.Books.V1.Model.VolumeUserInfoUserUploadedVolumeInfo
  )
end

defimpl Poison.Decoder, for: GoogleApi.Books.V1.Model.VolumeUserInfo do
  def decode(value, options) do
    GoogleApi.Books.V1.Model.VolumeUserInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Books.V1.Model.VolumeUserInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
