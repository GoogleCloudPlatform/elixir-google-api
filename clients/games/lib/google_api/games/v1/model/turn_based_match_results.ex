# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Model.TurnBasedMatchResults do
  @moduledoc """
  This is a JSON template for a turn-based match results object.

  ## Attributes

  - data (GoogleApi.Games.V1.Model.TurnBasedMatchDataRequest.t): The final match data. Defaults to `nil`.
  - kind (String.t): Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchResults. Defaults to `games#turnBasedMatchResults`.
  - matchVersion (integer()): The version of the match being updated. Defaults to `nil`.
  - results (list(GoogleApi.Games.V1.Model.ParticipantResult.t)): The match results for the participants in the match. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :data => GoogleApi.Games.V1.Model.TurnBasedMatchDataRequest.t(),
          :kind => String.t(),
          :matchVersion => integer(),
          :results => list(GoogleApi.Games.V1.Model.ParticipantResult.t())
        }

  field(:data, as: GoogleApi.Games.V1.Model.TurnBasedMatchDataRequest)
  field(:kind)
  field(:matchVersion)
  field(:results, as: GoogleApi.Games.V1.Model.ParticipantResult, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.TurnBasedMatchResults do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.TurnBasedMatchResults.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.TurnBasedMatchResults do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
