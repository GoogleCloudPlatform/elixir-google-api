# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Model.Instance do
  @moduledoc """
  This is a JSON template for the Instance resource.

  ## Attributes

  - acquisitionUri (String): URI which shows where a user can acquire this instance. Defaults to: `null`.
  - androidInstance (InstanceAndroidDetails): Platform dependent details for Android. Defaults to: `null`.
  - iosInstance (InstanceIosDetails): Platform dependent details for iOS. Defaults to: `null`.
  - kind (String): Uniquely identifies the type of this resource. Value is always the fixed string games#instance. Defaults to: `null`.
  - name (String): Localized display name. Defaults to: `null`.
  - platformType (String): The platform type. Possible values are:   - \&quot;ANDROID\&quot; - Instance is for Android.  - \&quot;IOS\&quot; - Instance is for iOS  - \&quot;WEB_APP\&quot; - Instance is for Web App. Defaults to: `null`.
  - realtimePlay (Boolean): Flag to show if this game instance supports realtime play. Defaults to: `null`.
  - turnBasedPlay (Boolean): Flag to show if this game instance supports turn based play. Defaults to: `null`.
  - webInstance (InstanceWebDetails): Platform dependent details for Web. Defaults to: `null`.
  """

  defstruct [
    :"acquisitionUri",
    :"androidInstance",
    :"iosInstance",
    :"kind",
    :"name",
    :"platformType",
    :"realtimePlay",
    :"turnBasedPlay",
    :"webInstance"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.Instance do
  import GoogleApi.Games.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"androidInstance", :struct, GoogleApi.Games.V1.Model.InstanceAndroidDetails, options)
    |> deserialize(:"iosInstance", :struct, GoogleApi.Games.V1.Model.InstanceIosDetails, options)
    |> deserialize(:"webInstance", :struct, GoogleApi.Games.V1.Model.InstanceWebDetails, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.Instance do
  def encode(value, options) do
    GoogleApi.Games.V1.Deserializer.serialize_non_nil(value, options)
  end
end

