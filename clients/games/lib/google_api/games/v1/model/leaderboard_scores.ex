# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Model.LeaderboardScores do
  @moduledoc """
  This is a JSON template for a ListScores response.

  ## Attributes

  - items (List[LeaderboardEntry]): The scores in the leaderboard. Defaults to: `null`.
  - kind (String): Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardScores. Defaults to: `null`.
  - nextPageToken (String): The pagination token for the next page of results. Defaults to: `null`.
  - numScores (String): The total number of scores in the leaderboard. Defaults to: `null`.
  - playerScore (LeaderboardEntry): The score of the requesting player on the leaderboard. The player&#39;s score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the scoreRank and formattedScoreRank values will not be present. Defaults to: `null`.
  - prevPageToken (String): The pagination token for the previous page of results. Defaults to: `null`.
  """

  defstruct [
    :"items",
    :"kind",
    :"nextPageToken",
    :"numScores",
    :"playerScore",
    :"prevPageToken"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.LeaderboardScores do
  import GoogleApi.Games.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"items", :list, GoogleApi.Games.V1.Model.LeaderboardEntry, options)
    |> deserialize(:"playerScore", :struct, GoogleApi.Games.V1.Model.LeaderboardEntry, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.LeaderboardScores do
  def encode(value, options) do
    GoogleApi.Games.V1.Deserializer.serialize_non_nil(value, options)
  end
end

