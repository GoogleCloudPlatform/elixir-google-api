# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Model.Leaderboard do
  @moduledoc """
  This is a JSON template for the Leaderboard resource.

  ## Attributes

  - iconUrl (String.t): The icon for the leaderboard. Defaults to `nil`.
  - id (String.t): The leaderboard ID. Defaults to `nil`.
  - isIconUrlDefault (boolean()): Indicates whether the icon image being returned is a default image, or is game-provided. Defaults to `nil`.
  - kind (String.t): Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboard. Defaults to `games#leaderboard`.
  - name (String.t): The name of the leaderboard. Defaults to `nil`.
  - order (String.t): How scores are ordered.
  Possible values are:  
  - "LARGER_IS_BETTER" - Larger values are better; scores are sorted in descending order. 
  - "SMALLER_IS_BETTER" - Smaller values are better; scores are sorted in ascending order. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :iconUrl => String.t(),
          :id => String.t(),
          :isIconUrlDefault => boolean(),
          :kind => String.t(),
          :name => String.t(),
          :order => String.t()
        }

  field(:iconUrl)
  field(:id)
  field(:isIconUrlDefault)
  field(:kind)
  field(:name)
  field(:order)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.Leaderboard do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.Leaderboard.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.Leaderboard do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
