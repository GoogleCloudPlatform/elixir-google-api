# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Model.PlayerScore do
  @moduledoc """
  This is a JSON template for a player score.

  ## Attributes

  - formattedScore (String.t): The formatted score for this player score. Defaults to `nil`.
  - kind (String.t): Uniquely identifies the type of this resource. Value is always the fixed string games#playerScore. Defaults to `games#playerScore`.
  - score (String.t): The numerical value for this player score. Defaults to `nil`.
  - scoreTag (String.t): Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986. Defaults to `nil`.
  - timeSpan (String.t): The time span for this player score.
  Possible values are:  
  - "ALL_TIME" - The score is an all-time score. 
  - "WEEKLY" - The score is a weekly score. 
  - "DAILY" - The score is a daily score. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :formattedScore => String.t(),
          :kind => String.t(),
          :score => String.t(),
          :scoreTag => String.t(),
          :timeSpan => String.t()
        }

  field(:formattedScore)
  field(:kind)
  field(:score)
  field(:scoreTag)
  field(:timeSpan)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.PlayerScore do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.PlayerScore.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.PlayerScore do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
