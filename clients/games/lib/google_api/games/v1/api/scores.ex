# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Api.Scores do
  @moduledoc """
  API calls for all endpoints tagged `Scores`.
  """

  alias GoogleApi.Games.V1.Connection
  import GoogleApi.Games.V1.RequestBuilder


  @doc """
  Get high scores, and optionally ranks, in leaderboards for the currently authenticated player. For a specific time span, leaderboardId can be set to ALL to retrieve data for all leaderboards in a given time span. NOTE: You cannot ask for &#39;ALL&#39; leaderboards and &#39;ALL&#39; timeSpans in the same request; only one parameter may be set to &#39;ALL&#39;.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - player_id (String): A player ID. A value of me may be used in place of the authenticated player&#39;s ID.
  - leaderboard_id (String): The ID of the leaderboard. Can be set to &#39;ALL&#39; to retrieve data for all leaderboards for this application.
  - time_span (String): The time span for the scores and ranks you&#39;re requesting.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :consistency_token (String): The last-seen mutation timestamp.
    - :include_rank_type (String): The types of ranks to return. If the parameter is omitted, no ranks will be returned.
    - :language (String): The preferred language to use for strings returned by this method.
    - :max_results (Integer): The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.
    - :page_token (String): The token returned by the previous request.

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.PlayerLeaderboardScoreListResponse{}} on success
  {:error, info} on failure
  """
  @spec games_scores_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Games.V1.Model.PlayerLeaderboardScoreListResponse.t} | {:error, Tesla.Env.t}
  def games_scores_get(connection, player_id, leaderboard_id, time_span, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"consistencyToken" => :query,
      :"includeRankType" => :query,
      :"language" => :query,
      :"maxResults" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/players/{playerId}/leaderboards/{leaderboardId}/scores/{timeSpan}", %{
         "playerId" => URI.encode_www_form(player_id),
         "leaderboardId" => URI.encode_www_form(leaderboard_id),
         "timeSpan" => URI.encode_www_form(time_span)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Games.V1.Model.PlayerLeaderboardScoreListResponse{})
  end

  @doc """
  Lists the scores in a leaderboard, starting from the top.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - leaderboard_id (String): The ID of the leaderboard.
  - collection (String): The collection of scores you&#39;re requesting.
  - time_span (String): The time span for the scores and ranks you&#39;re requesting.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :consistency_token (String): The last-seen mutation timestamp.
    - :language (String): The preferred language to use for strings returned by this method.
    - :max_results (Integer): The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.
    - :page_token (String): The token returned by the previous request.

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.LeaderboardScores{}} on success
  {:error, info} on failure
  """
  @spec games_scores_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Games.V1.Model.LeaderboardScores.t} | {:error, Tesla.Env.t}
  def games_scores_list(connection, leaderboard_id, collection, time_span, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"consistencyToken" => :query,
      :"language" => :query,
      :"maxResults" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/leaderboards/{leaderboardId}/scores/{collection}", %{
         "leaderboardId" => URI.encode_www_form(leaderboard_id),
         "collection" => URI.encode_www_form(collection)
       })
    |> add_param(:query, :"timeSpan", time_span)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Games.V1.Model.LeaderboardScores{})
  end

  @doc """
  Lists the scores in a leaderboard around (and including) a player&#39;s score.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - leaderboard_id (String): The ID of the leaderboard.
  - collection (String): The collection of scores you&#39;re requesting.
  - time_span (String): The time span for the scores and ranks you&#39;re requesting.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :consistency_token (String): The last-seen mutation timestamp.
    - :language (String): The preferred language to use for strings returned by this method.
    - :max_results (Integer): The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.
    - :page_token (String): The token returned by the previous request.
    - :results_above (Integer): The preferred number of scores to return above the player&#39;s score. More scores may be returned if the player is at the bottom of the leaderboard; fewer may be returned if the player is at the top. Must be less than or equal to maxResults.
    - :return_top_if_absent (Boolean): True if the top scores should be returned when the player is not in the leaderboard. Defaults to true.

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.LeaderboardScores{}} on success
  {:error, info} on failure
  """
  @spec games_scores_list_window(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Games.V1.Model.LeaderboardScores.t} | {:error, Tesla.Env.t}
  def games_scores_list_window(connection, leaderboard_id, collection, time_span, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"consistencyToken" => :query,
      :"language" => :query,
      :"maxResults" => :query,
      :"pageToken" => :query,
      :"resultsAbove" => :query,
      :"returnTopIfAbsent" => :query
    }
    %{}
    |> method(:get)
    |> url("/leaderboards/{leaderboardId}/window/{collection}", %{
         "leaderboardId" => URI.encode_www_form(leaderboard_id),
         "collection" => URI.encode_www_form(collection)
       })
    |> add_param(:query, :"timeSpan", time_span)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Games.V1.Model.LeaderboardScores{})
  end

  @doc """
  Submits a score to the specified leaderboard.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - leaderboard_id (String): The ID of the leaderboard.
  - score (String): The score you&#39;re submitting. The submitted score is ignored if it is worse than a previously submitted score, where worse depends on the leaderboard sort order. The meaning of the score value depends on the leaderboard format type. For fixed-point, the score represents the raw value. For time, the score represents elapsed time in milliseconds. For currency, the score represents a value in micro units.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :consistency_token (String): The last-seen mutation timestamp.
    - :language (String): The preferred language to use for strings returned by this method.
    - :score_tag (String): Additional information about the score you&#39;re submitting. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.PlayerScoreResponse{}} on success
  {:error, info} on failure
  """
  @spec games_scores_submit(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Games.V1.Model.PlayerScoreResponse.t} | {:error, Tesla.Env.t}
  def games_scores_submit(connection, leaderboard_id, score, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"consistencyToken" => :query,
      :"language" => :query,
      :"scoreTag" => :query
    }
    %{}
    |> method(:post)
    |> url("/leaderboards/{leaderboardId}/scores", %{
         "leaderboardId" => URI.encode_www_form(leaderboard_id)
       })
    |> add_param(:query, :"score", score)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Games.V1.Model.PlayerScoreResponse{})
  end

  @doc """
  Submits multiple scores to leaderboards.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :consistency_token (String): The last-seen mutation timestamp.
    - :language (String): The preferred language to use for strings returned by this method.
    - :body (PlayerScoreSubmissionList): 

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.PlayerScoreListResponse{}} on success
  {:error, info} on failure
  """
  @spec games_scores_submit_multiple(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.Games.V1.Model.PlayerScoreListResponse.t} | {:error, Tesla.Env.t}
  def games_scores_submit_multiple(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"consistencyToken" => :query,
      :"language" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/leaderboards/scores")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Games.V1.Model.PlayerScoreListResponse{})
  end
end
