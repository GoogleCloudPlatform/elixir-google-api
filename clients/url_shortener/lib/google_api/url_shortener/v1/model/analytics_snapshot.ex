# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.UrlShortener.V1.Model.AnalyticsSnapshot do
  @moduledoc """


  ## Attributes

  - browsers ([StringCount]): Top browsers, e.g. \&quot;Chrome\&quot;; sorted by (descending) click counts. Only present if this data is available. Defaults to: `null`.
  - countries ([StringCount]): Top countries (expressed as country codes), e.g. \&quot;US\&quot; or \&quot;DE\&quot;; sorted by (descending) click counts. Only present if this data is available. Defaults to: `null`.
  - longUrlClicks (String.t): Number of clicks on all goo.gl short URLs pointing to this long URL. Defaults to: `null`.
  - platforms ([StringCount]): Top platforms or OSes, e.g. \&quot;Windows\&quot;; sorted by (descending) click counts. Only present if this data is available. Defaults to: `null`.
  - referrers ([StringCount]): Top referring hosts, e.g. \&quot;www.google.com\&quot;; sorted by (descending) click counts. Only present if this data is available. Defaults to: `null`.
  - shortUrlClicks (String.t): Number of clicks on this short URL. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :browsers => list(GoogleApi.UrlShortener.V1.Model.StringCount.t()),
          :countries => list(GoogleApi.UrlShortener.V1.Model.StringCount.t()),
          :longUrlClicks => any(),
          :platforms => list(GoogleApi.UrlShortener.V1.Model.StringCount.t()),
          :referrers => list(GoogleApi.UrlShortener.V1.Model.StringCount.t()),
          :shortUrlClicks => any()
        }

  field(:browsers, as: GoogleApi.UrlShortener.V1.Model.StringCount, type: :list)
  field(:countries, as: GoogleApi.UrlShortener.V1.Model.StringCount, type: :list)
  field(:longUrlClicks)
  field(:platforms, as: GoogleApi.UrlShortener.V1.Model.StringCount, type: :list)
  field(:referrers, as: GoogleApi.UrlShortener.V1.Model.StringCount, type: :list)
  field(:shortUrlClicks)
end

defimpl Poison.Decoder, for: GoogleApi.UrlShortener.V1.Model.AnalyticsSnapshot do
  def decode(value, options) do
    GoogleApi.UrlShortener.V1.Model.AnalyticsSnapshot.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.UrlShortener.V1.Model.AnalyticsSnapshot do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
