# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.UrlShortener.V1.Model.Url do
  @moduledoc """


  ## Attributes

  - analytics (AnalyticsSummary): A summary of the click analytics for the short and long URL. Might not be present if not requested or currently unavailable. Defaults to: `null`.
  - created (String.t): Time the short URL was created; ISO 8601 representation using the yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZZ format, e.g. \&quot;2010-10-14T19:01:24.944+00:00\&quot;. Defaults to: `null`.
  - id (String.t): Short URL, e.g. \&quot;http://goo.gl/l6MS\&quot;. Defaults to: `null`.
  - kind (String.t): The fixed string \&quot;urlshortener#url\&quot;. Defaults to: `null`.
  - longUrl (String.t): Long URL, e.g. \&quot;http://www.google.com/\&quot;. Might not be present if the status is \&quot;REMOVED\&quot;. Defaults to: `null`.
  - status (String.t): Status of the target URL. Possible values: \&quot;OK\&quot;, \&quot;MALWARE\&quot;, \&quot;PHISHING\&quot;, or \&quot;REMOVED\&quot;. A URL might be marked \&quot;REMOVED\&quot; if it was flagged as spam, for example. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analytics => GoogleApi.UrlShortener.V1.Model.AnalyticsSummary.t(),
          :created => any(),
          :id => any(),
          :kind => any(),
          :longUrl => any(),
          :status => any()
        }

  field(:analytics, as: GoogleApi.UrlShortener.V1.Model.AnalyticsSummary)
  field(:created)
  field(:id)
  field(:kind)
  field(:longUrl)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.UrlShortener.V1.Model.Url do
  def decode(value, options) do
    GoogleApi.UrlShortener.V1.Model.Url.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.UrlShortener.V1.Model.Url do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
