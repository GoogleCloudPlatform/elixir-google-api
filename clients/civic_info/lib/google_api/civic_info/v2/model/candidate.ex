# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CivicInfo.V2.Model.Candidate do
  @moduledoc """
  Information about a candidate running for elected office.

  ## Attributes

  - candidateUrl (String): The URL for the candidate&#39;s campaign web site. Defaults to: `null`.
  - channels (List[Channel]): A list of known (social) media channels for this candidate. Defaults to: `null`.
  - email (String): The email address for the candidate&#39;s campaign. Defaults to: `null`.
  - name (String): The candidate&#39;s name. If this is a joint ticket it will indicate the name of the candidate at the top of a ticket followed by a / and that name of candidate at the bottom of the ticket. e.g. \&quot;Mitt Romney / Paul Ryan\&quot; Defaults to: `null`.
  - orderOnBallot (String): The order the candidate appears on the ballot for this contest. Defaults to: `null`.
  - party (String): The full name of the party the candidate is a member of. Defaults to: `null`.
  - phone (String): The voice phone number for the candidate&#39;s campaign office. Defaults to: `null`.
  - photoUrl (String): A URL for a photo of the candidate. Defaults to: `null`.
  """

  defstruct [
    :"candidateUrl",
    :"channels",
    :"email",
    :"name",
    :"orderOnBallot",
    :"party",
    :"phone",
    :"photoUrl"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.CivicInfo.V2.Model.Candidate do
  import GoogleApi.CivicInfo.V2.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"channels", :list, GoogleApi.CivicInfo.V2.Model.Channel, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CivicInfo.V2.Model.Candidate do
  def encode(value, options) do
    GoogleApi.CivicInfo.V2.Deserializer.serialize_non_nil(value, options)
  end
end

