# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CivicInfo.V2.Model.RepresentativeInfoResponse do
  @moduledoc """
  The result of a representative info lookup query.

  ## Attributes

  - divisions (Map[String, GeographicDivision]): Political geographic divisions that contain the requested address. Defaults to: `null`.
  - kind (String): Identifies what kind of resource this is. Value: the fixed string \&quot;civicinfo#representativeInfoResponse\&quot;. Defaults to: `null`.
  - normalizedInput (SimpleAddressType): The normalized version of the requested address Defaults to: `null`.
  - offices (List[Office]): Elected offices referenced by the divisions listed above. Will only be present if includeOffices was true in the request. Defaults to: `null`.
  - officials (List[Official]): Officials holding the offices listed above. Will only be present if includeOffices was true in the request. Defaults to: `null`.
  """

  defstruct [
    :"divisions",
    :"kind",
    :"normalizedInput",
    :"offices",
    :"officials"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.CivicInfo.V2.Model.RepresentativeInfoResponse do
  import GoogleApi.CivicInfo.V2.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"divisions", :map, GoogleApi.CivicInfo.V2.Model.GeographicDivision, options)
    |> deserialize(:"normalizedInput", :struct, GoogleApi.CivicInfo.V2.Model.SimpleAddressType, options)
    |> deserialize(:"offices", :list, GoogleApi.CivicInfo.V2.Model.Office, options)
    |> deserialize(:"officials", :list, GoogleApi.CivicInfo.V2.Model.Official, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CivicInfo.V2.Model.RepresentativeInfoResponse do
  def encode(value, options) do
    GoogleApi.CivicInfo.V2.Deserializer.serialize_non_nil(value, options)
  end
end

