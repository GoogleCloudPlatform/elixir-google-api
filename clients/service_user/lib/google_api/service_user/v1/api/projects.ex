# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceUser.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.ServiceUser.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Disable a service so it can no longer be used with a project. This prevents unintended usage that may cause unexpected billing charges or security leaks.  Operation&lt;response: google.protobuf.Empty&gt;

  ## Parameters

  - connection (GoogleApi.ServiceUser.V1.Connection): Connection to server
  - name (String.t): Name of the consumer and the service to disable for that consumer.  The Service User implementation accepts the following forms for consumer: - \&quot;project:&lt;project_id&gt;\&quot;  A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String.t): JSONP
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :$.xgafv (String.t): V1 error format.
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :body (DisableServiceRequest): 

  ## Returns

  {:ok, %GoogleApi.ServiceUser.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec serviceuser_projects_services_disable(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.ServiceUser.V1.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def serviceuser_projects_services_disable(connection, name, opts \\ []) do
    optional_params = %{
      :fields => :query,
      :uploadType => :query,
      :callback => :query,
      :oauth_token => :query,
      :"$.xgafv" => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :upload_protocol => :query,
      :quotaUser => :query,
      :prettyPrint => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/{+name}:disable", %{
        "name" => URI.encode_www_form(name)
      })
      |> Request.add_optional_params(optional_params, opts)

    connection
    |> Connection.execute(request)
    |> Response.decode(struct: %GoogleApi.ServiceUser.V1.Model.Operation{})
  end

  @doc """
  Enable a service so it can be used with a project. See [Cloud Auth Guide](https://cloud.google.com/docs/authentication) for more information.  Operation&lt;response: google.protobuf.Empty&gt;

  ## Parameters

  - connection (GoogleApi.ServiceUser.V1.Connection): Connection to server
  - name (String.t): Name of the consumer and the service to enable for that consumer.  A valid path would be: - projects/my-project/services/servicemanagement.googleapis.com
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String.t): JSONP
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :$.xgafv (String.t): V1 error format.
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :body (EnableServiceRequest): 

  ## Returns

  {:ok, %GoogleApi.ServiceUser.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec serviceuser_projects_services_enable(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.ServiceUser.V1.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def serviceuser_projects_services_enable(connection, name, opts \\ []) do
    optional_params = %{
      :fields => :query,
      :uploadType => :query,
      :callback => :query,
      :oauth_token => :query,
      :"$.xgafv" => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :upload_protocol => :query,
      :quotaUser => :query,
      :prettyPrint => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/{+name}:enable", %{
        "name" => URI.encode_www_form(name)
      })
      |> Request.add_optional_params(optional_params, opts)

    connection
    |> Connection.execute(request)
    |> Response.decode(struct: %GoogleApi.ServiceUser.V1.Model.Operation{})
  end

  @doc """
  List enabled services for the specified consumer.

  ## Parameters

  - connection (GoogleApi.ServiceUser.V1.Connection): Connection to server
  - parent (String.t): List enabled services for the specified parent.  An example valid parent would be: - projects/my-project
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String.t): JSONP
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :$.xgafv (String.t): V1 error format.
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :pageSize (integer()): Requested size of the next page of data.
    - :pageToken (String.t): Token identifying which result to start with; returned by a previous list call.

  ## Returns

  {:ok, %GoogleApi.ServiceUser.V1.Model.ListEnabledServicesResponse{}} on success
  {:error, info} on failure
  """
  @spec serviceuser_projects_services_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.ServiceUser.V1.Model.ListEnabledServicesResponse.t()}
          | {:error, Tesla.Env.t()}
  def serviceuser_projects_services_list(connection, parent, opts \\ []) do
    optional_params = %{
      :fields => :query,
      :uploadType => :query,
      :callback => :query,
      :oauth_token => :query,
      :"$.xgafv" => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :upload_protocol => :query,
      :quotaUser => :query,
      :prettyPrint => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/{+parent}/services", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params, opts)

    connection
    |> Connection.execute(request)
    |> Response.decode(struct: %GoogleApi.ServiceUser.V1.Model.ListEnabledServicesResponse{})
  end
end
