# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.YouTubeReporting.V1.Model.GdataCompositeMedia do
  @moduledoc """
  gdata

  ## Attributes

  - blobRef (binary()): gdata Defaults to: `null`.
  - blobstore2Info (GdataBlobstore2Info): gdata Defaults to: `null`.
  - cosmoBinaryReference (binary()): gdata Defaults to: `null`.
  - crc32cHash (integer()): gdata Defaults to: `null`.
  - inline (binary()): gdata Defaults to: `null`.
  - length (String.t): gdata Defaults to: `null`.
  - md5Hash (binary()): gdata Defaults to: `null`.
  - objectId (GdataObjectId): gdata Defaults to: `null`.
  - path (String.t): gdata Defaults to: `null`.
  - referenceType (String.t): gdata Defaults to: `null`.
    - Enum - one of [PATH, BLOB_REF, INLINE, BIGSTORE_REF, COSMO_BINARY_REFERENCE]
  - sha1Hash (binary()): gdata Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blobRef => any(),
          :blobstore2Info => GoogleApi.YouTubeReporting.V1.Model.GdataBlobstore2Info.t(),
          :cosmoBinaryReference => any(),
          :crc32cHash => any(),
          :inline => any(),
          :length => any(),
          :md5Hash => any(),
          :objectId => GoogleApi.YouTubeReporting.V1.Model.GdataObjectId.t(),
          :path => any(),
          :referenceType => any(),
          :sha1Hash => any()
        }

  field(:blobRef)
  field(:blobstore2Info, as: GoogleApi.YouTubeReporting.V1.Model.GdataBlobstore2Info)
  field(:cosmoBinaryReference)
  field(:crc32cHash)
  field(:inline)
  field(:length)
  field(:md5Hash)
  field(:objectId, as: GoogleApi.YouTubeReporting.V1.Model.GdataObjectId)
  field(:path)
  field(:referenceType)
  field(:sha1Hash)
end

defimpl Poison.Decoder, for: GoogleApi.YouTubeReporting.V1.Model.GdataCompositeMedia do
  def decode(value, options) do
    GoogleApi.YouTubeReporting.V1.Model.GdataCompositeMedia.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTubeReporting.V1.Model.GdataCompositeMedia do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
