# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.BigQueryDataTransfer.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.BigQueryDataTransfer.V1.Connection
  import GoogleApi.BigQueryDataTransfer.V1.RequestBuilder


  @doc """
  Returns true if valid credentials exist for the given data source and requesting user.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - name (String): The data source in the form: &#x60;projects/{project_id}/dataSources/{data_source_id}&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :body (CheckValidCredsRequest): 

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.CheckValidCredsResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_data_sources_check_valid_creds(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.CheckValidCredsResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_data_sources_check_valid_creds(connection, name, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/{+name}:checkValidCreds", %{
         "name" => URI.encode_www_form(name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.CheckValidCredsResponse{})
  end

  @doc """
  Retrieves a supported data source and returns its settings, which can be used for UI rendering.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - name (String): The field will contain name of the resource requested, for example: &#x60;projects/{project_id}/dataSources/{data_source_id}&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.DataSource{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_data_sources_get(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.DataSource.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_data_sources_get(connection, name, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/{+name}", %{
         "name" => URI.encode_www_form(name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.DataSource{})
  end

  @doc """
  Lists supported data sources and returns their settings, which can be used for UI rendering.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - parent (String): The BigQuery project id for which data sources should be returned. Must be in the form: &#x60;projects/{project_id}&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :page_size (Integer): Page size. The default page size is the maximum value of 1000 results.
    - :page_token (String): Pagination token, which can be used to request a specific page of &#x60;ListDataSourcesRequest&#x60; list results. For multiple-page results, &#x60;ListDataSourcesResponse&#x60; outputs a &#x60;next_page&#x60; token, which can be used as the &#x60;page_token&#x60; value to request the next page of list results.

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.ListDataSourcesResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_data_sources_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.ListDataSourcesResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_data_sources_list(connection, parent, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"pageSize" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/{+parent}/dataSources", %{
         "parent" => URI.encode_www_form(parent)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.ListDataSourcesResponse{})
  end

  @doc """
  Returns true if data transfer is enabled for a project.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - name (String): The name of the project resource in the form: &#x60;projects/{project_id}&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :body (IsEnabledRequest): 

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.IsEnabledResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_locations_is_enabled(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.IsEnabledResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_locations_is_enabled(connection, name, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/{+name}:isEnabled", %{
         "name" => URI.encode_www_form(name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.IsEnabledResponse{})
  end

  @doc """
  Lists information about the supported locations for this service.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - name (String): The resource that owns the locations collection, if applicable.
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :page_size (Integer): The standard list page size.
    - :filter (String): The standard list filter.
    - :page_token (String): The standard list page token.

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.ListLocationsResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_locations_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.ListLocationsResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_locations_list(connection, name, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"pageSize" => :query,
      :"filter" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/{+name}/locations", %{
         "name" => URI.encode_www_form(name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.ListLocationsResponse{})
  end

  @doc """
  Enables or disables data transfer for a project. This method requires the additional scope of &#39;https://www.googleapis.com/auth/cloudplatformprojects&#39; to manage the cloud project permissions.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - name (String): The name of the project resource in the form: &#x60;projects/{project_id}&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :body (SetEnabledRequest): 

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_locations_set_enabled(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_locations_set_enabled(connection, name, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/{+name}:setEnabled", %{
         "name" => URI.encode_www_form(name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.Empty{})
  end

  @doc """
  Creates a new data transfer configuration.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - parent (String): The BigQuery project id where the transfer configuration should be created. Must be in the format /projects/{project_id}/locations/{location_id} or /projects/{project_id}/locations/- In case when &#39;-&#39; is specified as location_id, location is infered from the destination dataset region.
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :authorization_code (String): Optional OAuth2 authorization code to use with this transfer configuration. This is required if new credentials are needed, as indicated by &#x60;CheckValidCreds&#x60;. In order to obtain authorization_code, please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id&#x3D;&lt;datatransferapiclientid&gt;&amp;scope&#x3D;&lt;data_source_scopes&gt;&amp;redirect_uri&#x3D;&lt;redirect_uri&gt;  * client_id should be OAuth client_id of BigQuery DTS API for the given   data source returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional parameter. If not specified, then   authorization code is posted to the opener of authorization flow window.   Otherwise it will be sent to the redirect uri. A special value of   urn:ietf:wg:oauth:2.0:oob means that authorization code should be   returned in the title bar of the browser, with the page text prompting   the user to copy the code and paste it in the application.
    - :body (TransferConfig): 

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.TransferConfig{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_transfer_configs_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.TransferConfig.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_transfer_configs_create(connection, parent, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"authorizationCode" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/{+parent}/transferConfigs", %{
         "parent" => URI.encode_www_form(parent)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.TransferConfig{})
  end

  @doc """
  Returns information about all data transfers in the project.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - parent (String): The BigQuery project id for which data sources should be returned: &#x60;projects/{project_id}&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :page_size (Integer): Page size. The default page size is the maximum value of 1000 results.
    - :data_source_ids (List[String]): When specified, only configurations of requested data sources are returned.
    - :page_token (String): Pagination token, which can be used to request a specific page of &#x60;ListTransfersRequest&#x60; list results. For multiple-page results, &#x60;ListTransfersResponse&#x60; outputs a &#x60;next_page&#x60; token, which can be used as the &#x60;page_token&#x60; value to request the next page of list results.

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferConfigsResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_transfer_configs_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferConfigsResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_transfer_configs_list(connection, parent, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"pageSize" => :query,
      :"dataSourceIds" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/{+parent}/transferConfigs", %{
         "parent" => URI.encode_www_form(parent)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferConfigsResponse{})
  end

  @doc """
  Updates a data transfer configuration. All fields must be set, even if they are not updated.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - name (String): The resource name of the transfer run. Transfer run names have the form &#x60;projects/{project_id}/transferConfigs/{config_id}&#x60;. Where &#x60;config_id&#x60; is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer run.
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :authorization_code (String): Optional OAuth2 authorization code to use with this transfer configuration. If it is provided, the transfer configuration will be associated with the gaia id of the authorizing user. In order to obtain authorization_code, please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id&#x3D;&lt;datatransferapiclientid&gt;&amp;scope&#x3D;&lt;data_source_scopes&gt;&amp;redirect_uri&#x3D;&lt;redirect_uri&gt;  * client_id should be OAuth client_id of BigQuery DTS API for the given   data source returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional parameter. If not specified, then   authorization code is posted to the opener of authorization flow window.   Otherwise it will be sent to the redirect uri. A special value of   urn:ietf:wg:oauth:2.0:oob means that authorization code should be   returned in the title bar of the browser, with the page text prompting   the user to copy the code and paste it in the application.
    - :update_mask (String): Required list of fields to be updated in this request.
    - :body (TransferConfig): 

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.TransferConfig{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_transfer_configs_patch(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.TransferConfig.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_transfer_configs_patch(connection, name, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"authorizationCode" => :query,
      :"updateMask" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/{+name}", %{
         "name" => URI.encode_www_form(name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.TransferConfig{})
  end

  @doc """
  Deletes the specified transfer run.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - name (String): The field will contain name of the resource requested, for example: &#x60;projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_transfer_configs_runs_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_transfer_configs_runs_delete(connection, name, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/{+name}", %{
         "name" => URI.encode_www_form(name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.Empty{})
  end

  @doc """
  Returns information about running and completed jobs.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - parent (String): Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: &#x60;projects/{project_id}/transferConfigs/{config_id}&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :page_size (Integer): Page size. The default page size is the maximum value of 1000 results.
    - :statuses (List[String]): When specified, only transfer runs with requested statuses are returned.
    - :run_attempt (String): Indicates how run attempts are to be pulled.
    - :page_token (String): Pagination token, which can be used to request a specific page of &#x60;ListTransferRunsRequest&#x60; list results. For multiple-page results, &#x60;ListTransferRunsResponse&#x60; outputs a &#x60;next_page&#x60; token, which can be used as the &#x60;page_token&#x60; value to request the next page of list results.

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferRunsResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_transfer_configs_runs_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferRunsResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_transfer_configs_runs_list(connection, parent, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"pageSize" => :query,
      :"statuses" => :query,
      :"runAttempt" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/{+parent}/runs", %{
         "parent" => URI.encode_www_form(parent)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferRunsResponse{})
  end

  @doc """
  Returns user facing log messages for the data transfer run.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - parent (String): Transfer run name in the form: &#x60;projects/{project_id}/transferConfigs/{config_Id}/runs/{run_id}&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :page_token (String): Pagination token, which can be used to request a specific page of &#x60;ListTransferLogsRequest&#x60; list results. For multiple-page results, &#x60;ListTransferLogsResponse&#x60; outputs a &#x60;next_page&#x60; token, which can be used as the &#x60;page_token&#x60; value to request the next page of list results.
    - :page_size (Integer): Page size. The default page size is the maximum value of 1000 results.
    - :message_types (List[String]): Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferLogsResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_transfer_configs_runs_transfer_logs_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferLogsResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_transfer_configs_runs_transfer_logs_list(connection, parent, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query,
      :"messageTypes" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/{+parent}/transferLogs", %{
         "parent" => URI.encode_www_form(parent)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.ListTransferLogsResponse{})
  end

  @doc """
  Creates transfer runs for a time range [range_start_time, range_end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range.

  ## Parameters

  - connection (GoogleApi.BigQueryDataTransfer.V1.Connection): Connection to server
  - parent (String): Transfer configuration name in the form: &#x60;projects/{project_id}/transferConfigs/{config_id}&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :body (ScheduleTransferRunsRequest): 

  ## Returns

  {:ok, %GoogleApi.BigQueryDataTransfer.V1.Model.ScheduleTransferRunsResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquerydatatransfer_projects_transfer_configs_schedule_runs(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQueryDataTransfer.V1.Model.ScheduleTransferRunsResponse.t} | {:error, Tesla.Env.t}
  def bigquerydatatransfer_projects_transfer_configs_schedule_runs(connection, parent, opts \\ []) do
    optional_params = %{
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/{+parent}:scheduleRuns", %{
         "parent" => URI.encode_www_form(parent)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQueryDataTransfer.V1.Model.ScheduleTransferRunsResponse{})
  end
end
