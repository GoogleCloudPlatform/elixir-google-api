# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AndroidPublisher.V2.Api.Edits do
  @moduledoc """
  API calls for all endpoints tagged `Edits`.
  """

  alias GoogleApi.AndroidPublisher.V2.Connection
  import GoogleApi.AndroidPublisher.V2.RequestBuilder


  @doc """
  Deletes the APK-specific localized listing for a specified APK and language code.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The APK version code whose APK-specific listings should be read or modified.
  - language (String): The language code (a BCP-47 language tag) of the APK-specific localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apklistings_delete(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apklistings_delete(connection, package_name, edit_id, apk_version_code, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Deletes all the APK-specific localized listings for a specified APK.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The APK version code whose APK-specific listings should be read or modified.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apklistings_deleteall(Tesla.Env.client, String.t, String.t, Integer.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apklistings_deleteall(connection, package_name, edit_id, apk_version_code, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/listings")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Fetches the APK-specific localized listing for a specified APK and language code.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The APK version code whose APK-specific listings should be read or modified.
  - language (String): The language code (a BCP-47 language tag) of the APK-specific localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ApkListing{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apklistings_get(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ApkListing.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apklistings_get(connection, package_name, edit_id, apk_version_code, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ApkListing{})
  end

  @doc """
  Lists all the APK-specific localized listings for a specified APK.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The APK version code whose APK-specific listings should be read or modified.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ApkListingsListResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apklistings_list(Tesla.Env.client, String.t, String.t, Integer.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ApkListingsListResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apklistings_list(connection, package_name, edit_id, apk_version_code, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/listings")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ApkListingsListResponse{})
  end

  @doc """
  Updates or creates the APK-specific localized listing for a specified APK and language code. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The APK version code whose APK-specific listings should be read or modified.
  - language (String): The language code (a BCP-47 language tag) of the APK-specific localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ApkListing): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ApkListing{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apklistings_patch(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ApkListing.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apklistings_patch(connection, package_name, edit_id, apk_version_code, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ApkListing{})
  end

  @doc """
  Updates or creates the APK-specific localized listing for a specified APK and language code.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The APK version code whose APK-specific listings should be read or modified.
  - language (String): The language code (a BCP-47 language tag) of the APK-specific localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ApkListing): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ApkListing{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apklistings_update(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ApkListing.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apklistings_update(connection, package_name, edit_id, apk_version_code, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ApkListing{})
  end

  @doc """
  Creates a new APK without uploading the APK itself to Google Play, instead hosting the APK at a specified URL. This function is only available to enterprises using Google Play for Work whose application is configured to restrict distribution to the enterprise domain.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ApksAddExternallyHostedRequest): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ApksAddExternallyHostedResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apks_addexternallyhosted(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ApksAddExternallyHostedResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apks_addexternallyhosted(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/externallyHosted")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ApksAddExternallyHostedResponse{})
  end

  @doc """

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ApksListResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apks_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ApksListResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apks_list(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ApksListResponse{})
  end

  @doc """

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Apk{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apks_upload(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Apk.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apks_upload(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Apk{})
  end

  @doc """

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apks_upload_resumable(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apks_upload_resumable(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/resumable/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Apk{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_apks_upload_simple(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Apk.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_apks_upload_simple(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Apk{})
  end

  @doc """
  Commits/applies the changes made in this edit back to the app.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.AppEdit{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_commit(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.AppEdit.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_commit(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}:commit")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.AppEdit{})
  end

  @doc """
  Deletes an edit for an app. Creating a new edit will automatically delete any of your previous edits so this method need only be called if you want to preemptively abandon an edit.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_delete(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Uploads the deobfuscation file of the specified APK. If a deobfuscation file already exists, it will be replaced.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier of the Android app for which the deobfuscatiuon files are being uploaded; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose deobfuscation file is being uploaded.
  - deobfuscation_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.DeobfuscationFilesUploadResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_deobfuscationfiles_upload(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.DeobfuscationFilesUploadResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_deobfuscationfiles_upload(connection, package_name, edit_id, apk_version_code, deobfuscation_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/deobfuscationFiles/#{deobfuscation_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.DeobfuscationFilesUploadResponse{})
  end

  @doc """
  Uploads the deobfuscation file of the specified APK. If a deobfuscation file already exists, it will be replaced.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier of the Android app for which the deobfuscatiuon files are being uploaded; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose deobfuscation file is being uploaded.
  - deobfuscation_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_deobfuscationfiles_upload_resumable(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_deobfuscationfiles_upload_resumable(connection, package_name, edit_id, apk_version_code, deobfuscation_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/resumable/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/deobfuscationFiles/#{deobfuscation_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Uploads the deobfuscation file of the specified APK. If a deobfuscation file already exists, it will be replaced.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier of the Android app for which the deobfuscatiuon files are being uploaded; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose deobfuscation file is being uploaded.
  - deobfuscation_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.DeobfuscationFilesUploadResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_deobfuscationfiles_upload_simple(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.DeobfuscationFilesUploadResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_deobfuscationfiles_upload_simple(connection, package_name, edit_id, apk_version_code, deobfuscation_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/deobfuscationFiles/#{deobfuscation_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.DeobfuscationFilesUploadResponse{})
  end

  @doc """
  Fetches app details for this edit. This includes the default language and developer support contact information.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.AppDetails{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_details_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.AppDetails.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_details_get(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/details")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.AppDetails{})
  end

  @doc """
  Updates app details for this edit. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (AppDetails): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.AppDetails{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_details_patch(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.AppDetails.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_details_patch(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/details")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.AppDetails{})
  end

  @doc """
  Updates app details for this edit.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (AppDetails): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.AppDetails{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_details_update(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.AppDetails.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_details_update(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/details")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.AppDetails{})
  end

  @doc """
  Fetches the Expansion File configuration for the APK specified.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose Expansion File configuration is being read or modified.
  - expansion_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ExpansionFile{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_expansionfiles_get(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ExpansionFile.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_expansionfiles_get(connection, package_name, edit_id, apk_version_code, expansion_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/expansionFiles/#{expansion_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ExpansionFile{})
  end

  @doc """
  Updates the APK&#39;s Expansion File configuration to reference another APK&#39;s Expansion Files. To add a new Expansion File use the Upload method. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose Expansion File configuration is being read or modified.
  - expansion_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ExpansionFile): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ExpansionFile{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_expansionfiles_patch(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ExpansionFile.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_expansionfiles_patch(connection, package_name, edit_id, apk_version_code, expansion_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/expansionFiles/#{expansion_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ExpansionFile{})
  end

  @doc """
  Updates the APK&#39;s Expansion File configuration to reference another APK&#39;s Expansion Files. To add a new Expansion File use the Upload method.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose Expansion File configuration is being read or modified.
  - expansion_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ExpansionFile): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ExpansionFile{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_expansionfiles_update(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ExpansionFile.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_expansionfiles_update(connection, package_name, edit_id, apk_version_code, expansion_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/expansionFiles/#{expansion_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ExpansionFile{})
  end

  @doc """
  Uploads and attaches a new Expansion File to the APK specified.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose Expansion File configuration is being read or modified.
  - expansion_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ExpansionFilesUploadResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_expansionfiles_upload(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ExpansionFilesUploadResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_expansionfiles_upload(connection, package_name, edit_id, apk_version_code, expansion_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/expansionFiles/#{expansion_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ExpansionFilesUploadResponse{})
  end

  @doc """
  Uploads and attaches a new Expansion File to the APK specified.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose Expansion File configuration is being read or modified.
  - expansion_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_expansionfiles_upload_resumable(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_expansionfiles_upload_resumable(connection, package_name, edit_id, apk_version_code, expansion_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/resumable/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/expansionFiles/#{expansion_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Uploads and attaches a new Expansion File to the APK specified.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - apk_version_code (Integer): The version code of the APK whose Expansion File configuration is being read or modified.
  - expansion_file_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ExpansionFilesUploadResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_expansionfiles_upload_simple(Tesla.Env.client, String.t, String.t, Integer.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ExpansionFilesUploadResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_expansionfiles_upload_simple(connection, package_name, edit_id, apk_version_code, expansion_file_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/apks/#{apk_version_code}/expansionFiles/#{expansion_file_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ExpansionFilesUploadResponse{})
  end

  @doc """
  Returns information about the edit specified. Calls will fail if the edit is no long active (e.g. has been deleted, superseded or expired).

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.AppEdit{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.AppEdit.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_get(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.AppEdit{})
  end

  @doc """
  Deletes the image (specified by id) from the edit.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing whose images are to read or modified. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - image_type (String): 
  - image_id (String): Unique identifier an image within the set of images attached to this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_images_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_images_delete(connection, package_name, edit_id, language, image_type, image_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}/#{image_type}/#{image_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Deletes all images for the specified language and image type.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing whose images are to read or modified. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - image_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ImagesDeleteAllResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_images_deleteall(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ImagesDeleteAllResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_images_deleteall(connection, package_name, edit_id, language, image_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}/#{image_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ImagesDeleteAllResponse{})
  end

  @doc """
  Lists all images for the specified language and image type.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing whose images are to read or modified. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - image_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ImagesListResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_images_list(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ImagesListResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_images_list(connection, package_name, edit_id, language, image_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}/#{image_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ImagesListResponse{})
  end

  @doc """
  Uploads a new image and adds it to the list of images for the specified language and image type.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing whose images are to read or modified. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - image_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ImagesUploadResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_images_upload(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ImagesUploadResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_images_upload(connection, package_name, edit_id, language, image_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}/#{image_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ImagesUploadResponse{})
  end

  @doc """
  Uploads a new image and adds it to the list of images for the specified language and image type.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing whose images are to read or modified. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - image_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_images_upload_resumable(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_images_upload_resumable(connection, package_name, edit_id, language, image_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/resumable/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}/#{image_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Uploads a new image and adds it to the list of images for the specified language and image type.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing whose images are to read or modified. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - image_type (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ImagesUploadResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_images_upload_simple(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ImagesUploadResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_images_upload_simple(connection, package_name, edit_id, language, image_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/upload/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}/#{image_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ImagesUploadResponse{})
  end

  @doc """
  Creates a new edit for an app, populated with the app&#39;s current state.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (AppEdit): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.AppEdit{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_insert(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.AppEdit.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_insert(connection, package_name, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.AppEdit{})
  end

  @doc """
  Deletes the specified localized store listing from an edit.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_listings_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_listings_delete(connection, package_name, edit_id, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Deletes all localized listings from an edit.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_listings_deleteall(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def androidpublisher_edits_listings_deleteall(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Fetches information about a localized store listing.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Listing{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_listings_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Listing.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_listings_get(connection, package_name, edit_id, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Listing{})
  end

  @doc """
  Returns all of the localized store listings attached to this edit.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ListingsListResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_listings_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.ListingsListResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_listings_list(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.ListingsListResponse{})
  end

  @doc """
  Creates or updates a localized store listing. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Listing): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Listing{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_listings_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Listing.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_listings_patch(connection, package_name, edit_id, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Listing{})
  end

  @doc """
  Creates or updates a localized store listing.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - language (String): The language code (a BCP-47 language tag) of the localized listing to read or modify. For example, to select Austrian German, pass \&quot;de-AT\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Listing): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Listing{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_listings_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Listing.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_listings_update(connection, package_name, edit_id, language, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/listings/#{language}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Listing{})
  end

  @doc """

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - track (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Testers{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_testers_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Testers.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_testers_get(connection, package_name, edit_id, track, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/testers/#{track}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Testers{})
  end

  @doc """

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - track (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Testers): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Testers{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_testers_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Testers.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_testers_patch(connection, package_name, edit_id, track, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/testers/#{track}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Testers{})
  end

  @doc """

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - track (String): 
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Testers): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Testers{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_testers_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Testers.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_testers_update(connection, package_name, edit_id, track, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/testers/#{track}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Testers{})
  end

  @doc """
  Fetches the track configuration for the specified track type. Includes the APK version codes that are in this track.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - track (String): The track type to read or modify.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Track{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_tracks_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Track.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_tracks_get(connection, package_name, edit_id, track, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/tracks/#{track}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Track{})
  end

  @doc """
  Lists all the track configurations for this edit.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.TracksListResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_tracks_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.TracksListResponse.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_tracks_list(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/tracks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.TracksListResponse{})
  end

  @doc """
  Updates the track configuration for the specified track type. When halted, the rollout track cannot be updated without adding new APKs, and adding new APKs will cause it to resume. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - track (String): The track type to read or modify.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Track): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Track{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_tracks_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Track.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_tracks_patch(connection, package_name, edit_id, track, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/tracks/#{track}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Track{})
  end

  @doc """
  Updates the track configuration for the specified track type. When halted, the rollout track cannot be updated without adding new APKs, and adding new APKs will cause it to resume.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - track (String): The track type to read or modify.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Track): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.Track{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_tracks_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.Track.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_tracks_update(connection, package_name, edit_id, track, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}/tracks/#{track}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.Track{})
  end

  @doc """
  Checks that the edit can be successfully committed. The edit&#39;s changes are not applied to the live app.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String): Unique identifier for the Android app that is being updated; for example, \&quot;com.spiffygame\&quot;.
  - edit_id (String): Unique identifier for this edit.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.AppEdit{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_edits_validate(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AndroidPublisher.V2.Model.AppEdit.t} | {:error, Tesla.Env.t}
  def androidpublisher_edits_validate(connection, package_name, edit_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/androidpublisher/v2/applications/#{package_name}/edits/#{edit_id}:validate")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AndroidPublisher.V2.Model.AppEdit{})
  end
end
