# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.SettlementTransactionAmount do
  @moduledoc """


  ## Attributes

  *   `commission` (*type:* `GoogleApi.Content.V21.Model.SettlementTransactionAmountCommission.t`, *default:* `nil`) - 
  *   `description` (*type:* `String.t`, *default:* `nil`) - The description of the event.

      Acceptable values are:  
      - "`taxWithhold`" 
      - "`principal`" 
      - "`principalAdjustment`" 
      - "`shippingFee`" 
      - "`merchantRemittedSalesTax`" 
      - "`googleRemittedSalesTax`" 
      - "`merchantCoupon`" 
      - "`merchantCouponTax`" 
      - "`merchantRemittedDisposalTax`" 
      - "`googleRemittedDisposalTax`" 
      - "`merchantRemittedRedemptionFee`" 
      - "`googleRemittedRedemptionFee`" 
      - "`eeeEcoFee`" 
      - "`furnitureEcoFee`" 
      - "`copyPrivateFee`" 
      - "`eeeEcoFeeCommission`" 
      - "`furnitureEcoFeeCommission`" 
      - "`copyPrivateFeeCommission`" 
      - "`principalRefund`" 
      - "`principalRefundTax`" 
      - "`itemCommission`" 
      - "`adjustmentCommission`" 
      - "`shippingFeeCommission`" 
      - "`commissionRefund`" 
      - "`damaged`" 
      - "`damagedOrDefectiveItem`" 
      - "`expiredItem`" 
      - "`faultyItem`" 
      - "`incorrectItemReceived`" 
      - "`itemMissing`" 
      - "`qualityNotExpected`" 
      - "`receivedTooLate`" 
      - "`storePackageMissing`" 
      - "`transitPackageMissing`" 
      - "`unsuccessfulDeliveryUndeliverable`" 
      - "`wrongChargeInStore`" 
      - "`wrongItem`" 
      - "`returns`" 
      - "`undeliverable`" 
      - "`refundFromMerchant`" 
      - "`returnLabelShippingFee`"
  *   `transactionAmount` (*type:* `GoogleApi.Content.V21.Model.Price.t`, *default:* `nil`) - The amount that contributes to the line item price.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of the amount.

      Acceptable values are:  
      - "`itemPrice`" 
      - "`orderPrice`" 
      - "`refund`" 
      - "`earlyRefund`" 
      - "`courtesyRefund`" 
      - "`returnRefund`" 
      - "`returnLabelShippingFeeAmount`"
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :commission => GoogleApi.Content.V21.Model.SettlementTransactionAmountCommission.t(),
          :description => String.t(),
          :transactionAmount => GoogleApi.Content.V21.Model.Price.t(),
          :type => String.t()
        }

  field(:commission, as: GoogleApi.Content.V21.Model.SettlementTransactionAmountCommission)
  field(:description)
  field(:transactionAmount, as: GoogleApi.Content.V21.Model.Price)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model.SettlementTransactionAmount do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.SettlementTransactionAmount.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V21.Model.SettlementTransactionAmount do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
