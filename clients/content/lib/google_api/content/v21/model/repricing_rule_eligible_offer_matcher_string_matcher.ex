# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.RepricingRuleEligibleOfferMatcherStringMatcher do
  @moduledoc """
  Matcher by string attributes.

  ## Attributes

  *   `strAttributes` (*type:* `list(String.t)`, *default:* `nil`) - String attributes, as long as such attribute of an offer is one of the string attribute values, the offer is considered as passing the matcher. The string matcher checks an offer for inclusivity in the string attributes, not equality. Only literal string matching is supported, no regex.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :strAttributes => list(String.t())
        }

  field(:strAttributes, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.Content.V21.Model.RepricingRuleEligibleOfferMatcherStringMatcher do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.RepricingRuleEligibleOfferMatcherStringMatcher.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Content.V21.Model.RepricingRuleEligibleOfferMatcherStringMatcher do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
