# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.Region do
  @moduledoc """
  Represents a geographic region that you can use as a target with both the `RegionalInventory` and `ShippingSettings` services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - The display name of the region.
  *   `geotargetArea` (*type:* `GoogleApi.Content.V21.Model.RegionGeoTargetArea.t`, *default:* `nil`) - A list of geotargets that defines the region area.
  *   `merchantId` (*type:* `String.t`, *default:* `nil`) - Output only. Immutable. Merchant that owns the region.
  *   `postalCodeArea` (*type:* `GoogleApi.Content.V21.Model.RegionPostalCodeArea.t`, *default:* `nil`) - A list of postal codes that defines the region area.
  *   `regionId` (*type:* `String.t`, *default:* `nil`) - Output only. Immutable. The ID uniquely identifying each region.
  *   `regionalInventoryEligible` (*type:* `boolean()`, *default:* `nil`) - Output only. Indicates if the region is eligible to use in the Regional Inventory configuration.
  *   `shippingEligible` (*type:* `boolean()`, *default:* `nil`) - Output only. Indicates if the region is eligible to use in the Shipping Services configuration.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t(),
          :geotargetArea => GoogleApi.Content.V21.Model.RegionGeoTargetArea.t(),
          :merchantId => String.t(),
          :postalCodeArea => GoogleApi.Content.V21.Model.RegionPostalCodeArea.t(),
          :regionId => String.t(),
          :regionalInventoryEligible => boolean(),
          :shippingEligible => boolean()
        }

  field(:displayName)
  field(:geotargetArea, as: GoogleApi.Content.V21.Model.RegionGeoTargetArea)
  field(:merchantId)
  field(:postalCodeArea, as: GoogleApi.Content.V21.Model.RegionPostalCodeArea)
  field(:regionId)
  field(:regionalInventoryEligible)
  field(:shippingEligible)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model.Region do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.Region.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V21.Model.Region do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
