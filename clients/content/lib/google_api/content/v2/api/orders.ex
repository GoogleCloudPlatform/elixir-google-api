# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Content.V2.Api.Orders do
  @moduledoc """
  API calls for all endpoints tagged `Orders`.
  """

  alias GoogleApi.Content.V2.Connection
  import GoogleApi.Content.V2.RequestBuilder


  @doc """
  Marks an order as acknowledged. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersAcknowledgeRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersAcknowledgeResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_acknowledge(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersAcknowledgeResponse.t} | {:error, Tesla.Env.t}
  def content_orders_acknowledge(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/acknowledge", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersAcknowledgeResponse{})
  end

  @doc """
  Sandbox only. Moves a test order from state \&quot;inProgress\&quot; to state \&quot;pendingShipment\&quot;. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the test order to modify.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersAdvanceTestOrderResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_advancetestorder(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersAdvanceTestOrderResponse.t} | {:error, Tesla.Env.t}
  def content_orders_advancetestorder(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/testorders/{orderId}/advance", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersAdvanceTestOrderResponse{})
  end

  @doc """
  Cancels all line items in an order, making a full refund. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order to cancel.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersCancelRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersCancelResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_cancel(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersCancelResponse.t} | {:error, Tesla.Env.t}
  def content_orders_cancel(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/cancel", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersCancelResponse{})
  end

  @doc """
  Cancels a line item, making a full refund. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersCancelLineItemRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersCancelLineItemResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_cancellineitem(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersCancelLineItemResponse.t} | {:error, Tesla.Env.t}
  def content_orders_cancellineitem(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/cancelLineItem", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersCancelLineItemResponse{})
  end

  @doc """
  Sandbox only. Creates a test order. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersCreateTestOrderRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersCreateTestOrderResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_createtestorder(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersCreateTestOrderResponse.t} | {:error, Tesla.Env.t}
  def content_orders_createtestorder(connection, merchant_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/testorders", %{
         "merchantId" => URI.encode_www_form(merchant_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersCreateTestOrderResponse{})
  end

  @doc """
  Retrieves or modifies multiple orders in a single request. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersCustomBatchRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersCustomBatchResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_custombatch(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersCustomBatchResponse.t} | {:error, Tesla.Env.t}
  def content_orders_custombatch(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/orders/batch")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersCustomBatchResponse{})
  end

  @doc """
  Retrieves an order from your Merchant Center account. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.Order{}} on success
  {:error, info} on failure
  """
  @spec content_orders_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.Order.t} | {:error, Tesla.Env.t}
  def content_orders_get(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/{merchantId}/orders/{orderId}", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.Order{})
  end

  @doc """
  Retrieves an order using merchant order id. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - merchant_order_id (String): The merchant order id to be looked for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersGetByMerchantOrderIdResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_getbymerchantorderid(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersGetByMerchantOrderIdResponse.t} | {:error, Tesla.Env.t}
  def content_orders_getbymerchantorderid(connection, merchant_id, merchant_order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/{merchantId}/ordersbymerchantid/{merchantOrderId}", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "merchantOrderId" => URI.encode_www_form(merchant_order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersGetByMerchantOrderIdResponse{})
  end

  @doc """
  Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - template_name (String): The name of the template to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersGetTestOrderTemplateResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_gettestordertemplate(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersGetTestOrderTemplateResponse.t} | {:error, Tesla.Env.t}
  def content_orders_gettestordertemplate(connection, merchant_id, template_name, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/{merchantId}/testordertemplates/{templateName}", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "templateName" => URI.encode_www_form(template_name)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersGetTestOrderTemplateResponse{})
  end

  @doc """
  Lists the orders in your Merchant Center account. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :acknowledged (Boolean): Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.
    - :max_results (Integer): The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page. Known issue: All List calls will return all Orders without limit regardless of the value of this field.
    - :order_by (String): The ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date. \&quot;placedDate desc\&quot; stands for listing orders by placement date, from oldest to most recent. \&quot;placedDate asc\&quot; stands for listing orders by placement date, from most recent to oldest. In future releases we&#39;ll support other sorting criteria.
    - :page_token (String): The token returned by the previous request.
    - :placed_date_end (String): Obtains orders placed before this date (exclusively), in ISO 8601 format.
    - :placed_date_start (String): Obtains orders placed after this date (inclusively), in ISO 8601 format.
    - :statuses (List[String]): Obtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled.

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersListResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersListResponse.t} | {:error, Tesla.Env.t}
  def content_orders_list(connection, merchant_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"acknowledged" => :query,
      :"maxResults" => :query,
      :"orderBy" => :query,
      :"pageToken" => :query,
      :"placedDateEnd" => :query,
      :"placedDateStart" => :query,
      :"statuses" => :query
    }
    %{}
    |> method(:get)
    |> url("/{merchantId}/orders", %{
         "merchantId" => URI.encode_www_form(merchant_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersListResponse{})
  end

  @doc """
  Refund a portion of the order, up to the full amount paid. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order to refund.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersRefundRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersRefundResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_refund(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersRefundResponse.t} | {:error, Tesla.Env.t}
  def content_orders_refund(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/refund", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersRefundResponse{})
  end

  @doc """
  Returns a line item. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersReturnLineItemRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersReturnLineItemResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_returnlineitem(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersReturnLineItemResponse.t} | {:error, Tesla.Env.t}
  def content_orders_returnlineitem(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/returnLineItem", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersReturnLineItemResponse{})
  end

  @doc """
  Marks line item(s) as shipped. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersShipLineItemsRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersShipLineItemsResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_shiplineitems(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersShipLineItemsResponse.t} | {:error, Tesla.Env.t}
  def content_orders_shiplineitems(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/shipLineItems", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersShipLineItemsResponse{})
  end

  @doc """
  Updates the merchant order ID for a given order. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersUpdateMerchantOrderIdRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersUpdateMerchantOrderIdResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_updatemerchantorderid(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersUpdateMerchantOrderIdResponse.t} | {:error, Tesla.Env.t}
  def content_orders_updatemerchantorderid(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/updateMerchantOrderId", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersUpdateMerchantOrderIdResponse{})
  end

  @doc """
  Updates a shipment&#39;s status, carrier, and/or tracking ID. This method can only be called for non-multi-client accounts.

  ## Parameters

  - connection (GoogleApi.Content.V2.Connection): Connection to server
  - merchant_id (String): The ID of the managing account.
  - order_id (String): The ID of the order.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (OrdersUpdateShipmentRequest): 

  ## Returns

  {:ok, %GoogleApi.Content.V2.Model.OrdersUpdateShipmentResponse{}} on success
  {:error, info} on failure
  """
  @spec content_orders_updateshipment(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Content.V2.Model.OrdersUpdateShipmentResponse.t} | {:error, Tesla.Env.t}
  def content_orders_updateshipment(connection, merchant_id, order_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/{merchantId}/orders/{orderId}/updateShipment", %{
         "merchantId" => URI.encode_www_form(merchant_id),
         "orderId" => URI.encode_www_form(order_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Content.V2.Model.OrdersUpdateShipmentResponse{})
  end
end
