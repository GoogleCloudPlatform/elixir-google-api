# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V2.Model.RefundReason do
  @moduledoc """


  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the reason.
  *   `reasonCode` (*type:* `String.t`, *default:* `nil`) - Code of the refund reason.

      Acceptable values are:  
      - "`adjustment`" 
      - "`autoPostInternal`" 
      - "`autoPostInvalidBillingAddress`" 
      - "`autoPostNoInventory`" 
      - "`autoPostPriceError`" 
      - "`autoPostUndeliverableShippingAddress`" 
      - "`couponAbuse`" 
      - "`courtesyAdjustment`" 
      - "`customerCanceled`" 
      - "`customerDiscretionaryReturn`" 
      - "`customerInitiatedMerchantCancel`" 
      - "`customerSupportRequested`" 
      - "`deliveredLateByCarrier`" 
      - "`deliveredTooLate`" 
      - "`expiredItem`" 
      - "`failToPushOrderGoogleError`" 
      - "`failToPushOrderMerchantError`" 
      - "`failToPushOrderMerchantFulfillmentError`" 
      - "`failToPushOrderToMerchant`" 
      - "`failToPushOrderToMerchantOutOfStock`" 
      - "`feeAdjustment`" 
      - "`invalidCoupon`" 
      - "`lateShipmentCredit`" 
      - "`malformedShippingAddress`" 
      - "`merchantDidNotShipOnTime`" 
      - "`noInventory`" 
      - "`orderTimeout`" 
      - "`other`" 
      - "`paymentAbuse`" 
      - "`paymentDeclined`" 
      - "`priceAdjustment`" 
      - "`priceError`" 
      - "`productArrivedDamaged`" 
      - "`productNotAsDescribed`" 
      - "`promoReallocation`" 
      - "`qualityNotAsExpected`" 
      - "`returnRefundAbuse`" 
      - "`shippingCostAdjustment`" 
      - "`shippingPriceError`" 
      - "`taxAdjustment`" 
      - "`taxError`" 
      - "`undeliverableShippingAddress`" 
      - "`unsupportedPoBoxAddress`" 
      - "`wrongProductShipped`"
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t(),
          :reasonCode => String.t()
        }

  field(:description)
  field(:reasonCode)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V2.Model.RefundReason do
  def decode(value, options) do
    GoogleApi.Content.V2.Model.RefundReason.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V2.Model.RefundReason do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
