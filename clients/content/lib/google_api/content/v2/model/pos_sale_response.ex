# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Content.V2.Model.PosSaleResponse do
  @moduledoc """


  ## Attributes

  - contentLanguage (String.t): The two-letter ISO 639-1 language code for the item. Defaults to `nil`.
  - gtin (String.t): Global Trade Item Number. Defaults to `nil`.
  - itemId (String.t): A unique identifier for the item. Defaults to `nil`.
  - kind (String.t): Identifies what kind of resource this is. Value: the fixed string "content#posSaleResponse". Defaults to `content#posSaleResponse`.
  - price (GoogleApi.Content.V2.Model.Price.t): The price of the item. Defaults to `nil`.
  - quantity (String.t): The relative change of the available quantity. Negative for items returned. Defaults to `nil`.
  - saleId (String.t): A unique ID to group items from the same sale event. Defaults to `nil`.
  - storeCode (String.t): The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. Defaults to `nil`.
  - targetCountry (String.t): The CLDR territory code for the item. Defaults to `nil`.
  - timestamp (String.t): The inventory timestamp, in ISO 8601 format. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contentLanguage => String.t(),
          :gtin => String.t(),
          :itemId => String.t(),
          :kind => String.t(),
          :price => GoogleApi.Content.V2.Model.Price.t(),
          :quantity => String.t(),
          :saleId => String.t(),
          :storeCode => String.t(),
          :targetCountry => String.t(),
          :timestamp => String.t()
        }

  field(:contentLanguage)
  field(:gtin)
  field(:itemId)
  field(:kind)
  field(:price, as: GoogleApi.Content.V2.Model.Price)
  field(:quantity)
  field(:saleId)
  field(:storeCode)
  field(:targetCountry)
  field(:timestamp)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V2.Model.PosSaleResponse do
  def decode(value, options) do
    GoogleApi.Content.V2.Model.PosSaleResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V2.Model.PosSaleResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
