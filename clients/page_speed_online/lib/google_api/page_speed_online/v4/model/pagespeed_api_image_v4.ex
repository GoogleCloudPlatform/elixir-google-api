# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.PageSpeedOnline.V4.Model.PagespeedApiImageV4 do
  @moduledoc """


  ## Attributes

  - data (String.t): Image data base64 encoded. Defaults to `nil`.
  - height (integer()): Height of screenshot in pixels. Defaults to `nil`.
  - key (String.t): Unique string key, if any, identifying this image. Defaults to `nil`.
  - mime_type (String.t): Mime type of image data (e.g. "image/jpeg"). Defaults to `nil`.
  - page_rect (GoogleApi.PageSpeedOnline.V4.Model.PagespeedApiImageV4PageRect.t):  Defaults to `nil`.
  - width (integer()): Width of screenshot in pixels. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :data => String.t(),
          :height => integer(),
          :key => String.t(),
          :mime_type => String.t(),
          :page_rect => GoogleApi.PageSpeedOnline.V4.Model.PagespeedApiImageV4PageRect.t(),
          :width => integer()
        }

  field(:data)
  field(:height)
  field(:key)
  field(:mime_type)
  field(:page_rect, as: GoogleApi.PageSpeedOnline.V4.Model.PagespeedApiImageV4PageRect)
  field(:width)
end

defimpl Poison.Decoder, for: GoogleApi.PageSpeedOnline.V4.Model.PagespeedApiImageV4 do
  def decode(value, options) do
    GoogleApi.PageSpeedOnline.V4.Model.PagespeedApiImageV4.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PageSpeedOnline.V4.Model.PagespeedApiImageV4 do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
