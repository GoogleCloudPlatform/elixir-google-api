# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5 do
  @moduledoc """


  ## Attributes

  *   `audits` (*type:* `%{optional(String.t) => GoogleApi.PageSpeedOnline.V5.Model.LighthouseAuditResultV5.t}`, *default:* `nil`) - Map of audits in the LHR.
  *   `categories` (*type:* `GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Categories.t`, *default:* `nil`) - Map of categories in the LHR.
  *   `categoryGroups` (*type:* `map()`, *default:* `nil`) - Map of category groups in the LHR.
  *   `configSettings` (*type:* `GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5ConfigSettings.t`, *default:* `nil`) - The configuration settings for this LHR.
  *   `environment` (*type:* `GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Environment.t`, *default:* `nil`) - Environment settings that were used when making this LHR.
  *   `fetchTime` (*type:* `String.t`, *default:* `nil`) - The time that this run was fetched.
  *   `finalUrl` (*type:* `String.t`, *default:* `nil`) - The final resolved url that was audited.
  *   `i18n` (*type:* `GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5I18n.t`, *default:* `nil`) - The internationalization strings that are required to render the LHR.
  *   `lighthouseVersion` (*type:* `String.t`, *default:* `nil`) - The lighthouse version that was used to generate this LHR.
  *   `requestedUrl` (*type:* `String.t`, *default:* `nil`) - The original requested url.
  *   `runWarnings` (*type:* `GoogleApi.PageSpeedOnline.V5.Model.GoogleprotobufListValue.t`, *default:* `nil`) - List of all run warnings in the LHR. Will always output to at least `[]`.
  *   `runtimeError` (*type:* `GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5RuntimeError.t`, *default:* `nil`) - A top-level error message that, if present, indicates a serious enough problem that this Lighthouse result may need to be discarded.
  *   `stackPacks` (*type:* `list(GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5StackPacks.t)`, *default:* `nil`) - The Stack Pack advice strings.
  *   `timing` (*type:* `GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Timing.t`, *default:* `nil`) - Timing information for this LHR.
  *   `userAgent` (*type:* `String.t`, *default:* `nil`) - The user agent that was used to run this LHR.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :audits => %{
            optional(String.t()) => GoogleApi.PageSpeedOnline.V5.Model.LighthouseAuditResultV5.t()
          },
          :categories => GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Categories.t(),
          :categoryGroups => map(),
          :configSettings =>
            GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5ConfigSettings.t(),
          :environment => GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Environment.t(),
          :fetchTime => String.t(),
          :finalUrl => String.t(),
          :i18n => GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5I18n.t(),
          :lighthouseVersion => String.t(),
          :requestedUrl => String.t(),
          :runWarnings => GoogleApi.PageSpeedOnline.V5.Model.GoogleprotobufListValue.t(),
          :runtimeError => GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5RuntimeError.t(),
          :stackPacks =>
            list(GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5StackPacks.t()),
          :timing => GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Timing.t(),
          :userAgent => String.t()
        }

  field(:audits, as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseAuditResultV5, type: :map)
  field(:categories, as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Categories)
  field(:categoryGroups, type: :map)
  field(:configSettings, as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5ConfigSettings)
  field(:environment, as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Environment)
  field(:fetchTime)
  field(:finalUrl)
  field(:i18n, as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5I18n)
  field(:lighthouseVersion)
  field(:requestedUrl)
  field(:runWarnings, as: GoogleApi.PageSpeedOnline.V5.Model.GoogleprotobufListValue)
  field(:runtimeError, as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5RuntimeError)

  field(:stackPacks,
    as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5StackPacks,
    type: :list
  )

  field(:timing, as: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5Timing)
  field(:userAgent)
end

defimpl Poison.Decoder, for: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5 do
  def decode(value, options) do
    GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PageSpeedOnline.V5.Model.LighthouseResultV5 do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
