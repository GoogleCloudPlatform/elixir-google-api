# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PageSpeedOnline.V5.Model.UserPageLoadMetricV5 do
  @moduledoc """
  A CrUX metric object for a single metric and form factor.

  ## Attributes

  *   `category` (*type:* `String.t`, *default:* `nil`) - The category of the specific time metric.
  *   `distributions` (*type:* `list(GoogleApi.PageSpeedOnline.V5.Model.Bucket.t)`, *default:* `nil`) - Metric distributions. Proportions should sum up to 1.
  *   `formFactor` (*type:* `String.t`, *default:* `nil`) - Identifies the form factor of the metric being collected.
  *   `median` (*type:* `integer()`, *default:* `nil`) - The median number of the metric, in millisecond.
  *   `metricId` (*type:* `String.t`, *default:* `nil`) - Identifies the type of the metric.
  *   `percentile` (*type:* `integer()`, *default:* `nil`) - We use this field to store certain percentile value for this metric. For v4, this field contains pc50. For v5, this field contains pc90.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :category => String.t() | nil,
          :distributions => list(GoogleApi.PageSpeedOnline.V5.Model.Bucket.t()) | nil,
          :formFactor => String.t() | nil,
          :median => integer() | nil,
          :metricId => String.t() | nil,
          :percentile => integer() | nil
        }

  field(:category)
  field(:distributions, as: GoogleApi.PageSpeedOnline.V5.Model.Bucket, type: :list)
  field(:formFactor)
  field(:median)
  field(:metricId)
  field(:percentile)
end

defimpl Poison.Decoder, for: GoogleApi.PageSpeedOnline.V5.Model.UserPageLoadMetricV5 do
  def decode(value, options) do
    GoogleApi.PageSpeedOnline.V5.Model.UserPageLoadMetricV5.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PageSpeedOnline.V5.Model.UserPageLoadMetricV5 do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
