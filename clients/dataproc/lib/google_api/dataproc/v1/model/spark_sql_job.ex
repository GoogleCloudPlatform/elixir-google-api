# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Dataproc.V1.Model.SparkSqlJob do
  @moduledoc """
  A Cloud Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.

  ## Attributes

  - jarFileUris ([String.t]): Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH. Defaults to: `null`.
  - loggingConfig (LoggingConfig): Optional. The runtime log config for job execution. Defaults to: `null`.
  - properties (%{optional(String.t) &#x3D;&gt; String.t}): Optional. A mapping of property names to values, used to configure Spark SQL&#39;s SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Defaults to: `null`.
  - queryFileUri (String.t): The HCFS URI of the script that contains SQL queries. Defaults to: `null`.
  - queryList (QueryList): A list of queries. Defaults to: `null`.
  - scriptVariables (%{optional(String.t) &#x3D;&gt; String.t}): Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name&#x3D;\&quot;value\&quot;;). Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :jarFileUris => list(any()),
          :loggingConfig => GoogleApi.Dataproc.V1.Model.LoggingConfig.t(),
          :properties => map(),
          :queryFileUri => any(),
          :queryList => GoogleApi.Dataproc.V1.Model.QueryList.t(),
          :scriptVariables => map()
        }

  field(:jarFileUris, type: :list)
  field(:loggingConfig, as: GoogleApi.Dataproc.V1.Model.LoggingConfig)
  field(:properties, type: :map)
  field(:queryFileUri)
  field(:queryList, as: GoogleApi.Dataproc.V1.Model.QueryList)
  field(:scriptVariables, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.SparkSqlJob do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.SparkSqlJob.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.SparkSqlJob do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
