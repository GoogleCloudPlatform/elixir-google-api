# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Dataproc.V1.Model.SoftwareConfig do
  @moduledoc """
  Specifies the selection and config of software inside the cluster.

  ## Attributes

  - imageVersion (String.t): Optional. The version of software inside the cluster. It must be one of the supported Cloud Dataproc Versions, such as \&quot;1.2\&quot; (including a subminor version, such as \&quot;1.2.29\&quot;), or the \&quot;preview\&quot; version. If unspecified, it defaults to the latest version. Defaults to: `null`.
  - optionalComponents ([String.t]): The set of optional components to activate on the cluster. Defaults to: `null`.
    - Enum - one of 
  - properties (%{optional(String.t) &#x3D;&gt; String.t}): Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, such as core:fs.defaultFS. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :imageVersion => any(),
          :optionalComponents => list(any()),
          :properties => map()
        }

  field(:imageVersion)
  field(:optionalComponents, type: :list)
  field(:properties, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.SoftwareConfig do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.SoftwareConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.SoftwareConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
