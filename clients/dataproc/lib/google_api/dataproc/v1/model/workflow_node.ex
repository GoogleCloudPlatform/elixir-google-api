# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Dataproc.V1.Model.WorkflowNode do
  @moduledoc """
  The workflow node.

  ## Attributes

  - error (String.t): Output only. The error detail. Defaults to: `null`.
  - jobId (String.t): Output only. The job id; populated after the node enters RUNNING state. Defaults to: `null`.
  - prerequisiteStepIds ([String.t]): Output only. Node&#39;s prerequisite nodes. Defaults to: `null`.
  - state (String.t): Output only. The node state. Defaults to: `null`.
    - Enum - one of [NODE_STATE_UNSPECIFIED, BLOCKED, RUNNABLE, RUNNING, COMPLETED, FAILED]
  - stepId (String.t): Output only. The name of the node. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :error => any(),
          :jobId => any(),
          :prerequisiteStepIds => list(any()),
          :state => any(),
          :stepId => any()
        }

  field(:error)
  field(:jobId)
  field(:prerequisiteStepIds, type: :list)
  field(:state)
  field(:stepId)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.WorkflowNode do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.WorkflowNode.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.WorkflowNode do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
