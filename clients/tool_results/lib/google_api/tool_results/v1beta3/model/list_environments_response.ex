# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ToolResults.V1beta3.Model.ListEnvironmentsResponse do
  @moduledoc """
  Response message for EnvironmentService.ListEnvironments.

  ## Attributes

  *   `environments` (*type:* `list(GoogleApi.ToolResults.V1beta3.Model.Environment.t)`, *default:* `nil`) - Environments.

      Always set.
  *   `executionId` (*type:* `String.t`, *default:* `nil`) - A Execution id

      Always set.
  *   `historyId` (*type:* `String.t`, *default:* `nil`) - A History id.

      Always set.
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - A continuation token to resume the query at the next item.

      Will only be set if there are more Environments to fetch.
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - A Project id.

      Always set.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :environments => list(GoogleApi.ToolResults.V1beta3.Model.Environment.t()),
          :executionId => String.t(),
          :historyId => String.t(),
          :nextPageToken => String.t(),
          :projectId => String.t()
        }

  field(:environments, as: GoogleApi.ToolResults.V1beta3.Model.Environment, type: :list)
  field(:executionId)
  field(:historyId)
  field(:nextPageToken)
  field(:projectId)
end

defimpl Poison.Decoder, for: GoogleApi.ToolResults.V1beta3.Model.ListEnvironmentsResponse do
  def decode(value, options) do
    GoogleApi.ToolResults.V1beta3.Model.ListEnvironmentsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ToolResults.V1beta3.Model.ListEnvironmentsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
