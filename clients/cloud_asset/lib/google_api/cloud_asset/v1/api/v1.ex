# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudAsset.V1.Api.V1 do
  @moduledoc """
  API calls for all endpoints tagged `V1`.
  """

  alias GoogleApi.CloudAsset.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @library_version Mix.Project.config() |> Keyword.get(:version, "")

  @doc """
  Batch gets the update history of assets that overlap a time window.
  For RESOURCE content, this API outputs history with asset in both
  non-delete or deleted status.
  For IAM_POLICY content, this API outputs history when the asset and its
  attached IAM POLICY both exist. This can create gaps in the output history.
  If a specified asset does not exist, this API returns an INVALID_ARGUMENT
  error.

  ## Parameters

  *   `connection` (*type:* `GoogleApi.CloudAsset.V1.Connection.t`) - Connection to server
  *   `v1_id` (*type:* `String.t`) - Part of `parent`. Required. The relative name of the root asset. It can only be an
      organization number (such as "organizations/123"), a project ID (such as
      "projects/my-project-id")", or a project number (such as "projects/12345").
  *   `v1_id1` (*type:* `String.t`) - Part of `parent`. See documentation of `v1Id`.
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:"$.xgafv"` (*type:* `String.t`) - V1 error format.
      *   `:access_token` (*type:* `String.t`) - OAuth access token.
      *   `:alt` (*type:* `String.t`) - Data format for response.
      *   `:callback` (*type:* `String.t`) - JSONP
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      *   `:uploadType` (*type:* `String.t`) - Legacy upload protocol for media (e.g. "media", "multipart").
      *   `:upload_protocol` (*type:* `String.t`) - Upload protocol for media (e.g. "raw", "multipart").
      *   `:assetNames` (*type:* `list(String.t)`) - A list of the full names of the assets. For example:
          `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
          See [Resource
          Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
          and [Resource Name
          Format](https://cloud.google.com/asset-inventory/docs/resource-name-format)
          for more info.

          The request becomes a no-op if the asset name list is empty, and the max
          size of the asset name list is 100 in one request.
      *   `:contentType` (*type:* `String.t`) - Optional. The content type.
      *   `:"readTimeWindow.endTime"` (*type:* `DateTime.t`) - End time of the time window (inclusive). If not specified, the current
          timestamp is used instead.
      *   `:"readTimeWindow.startTime"` (*type:* `DateTime.t`) - Start time of the time window (exclusive).
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.CloudAsset.V1.Model.BatchGetAssetsHistoryResponse{}}` on success
  *   `{:error, info}` on failure
  """
  @spec cloudasset_batch_get_assets_history(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudAsset.V1.Model.BatchGetAssetsHistoryResponse.t()}
          | {:ok, Tesla.Env.t()}
          | {:error, Tesla.Env.t()}
  def cloudasset_batch_get_assets_history(
        connection,
        v1_id,
        v1_id1,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :assetNames => :query,
      :contentType => :query,
      :"readTimeWindow.endTime" => :query,
      :"readTimeWindow.startTime" => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/{v1Id}/{v1Id1}:batchGetAssetsHistory", %{
        "v1Id" => URI.encode(v1_id, &URI.char_unreserved?/1),
        "v1Id1" => URI.encode(v1_id1, &URI.char_unreserved?/1)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.CloudAsset.V1.Model.BatchGetAssetsHistoryResponse{}]
    )
  end

  @doc """
  Exports assets with time and resource types to a given Cloud Storage
  location. The output format is newline-delimited JSON.
  This API implements the google.longrunning.Operation API allowing you
  to keep track of the export.

  ## Parameters

  *   `connection` (*type:* `GoogleApi.CloudAsset.V1.Connection.t`) - Connection to server
  *   `v1_id` (*type:* `String.t`) - Part of `parent`. Required. The relative name of the root asset. This can only be an
      organization number (such as "organizations/123"), a project ID (such as
      "projects/my-project-id"), or a project number (such as "projects/12345"),
      or a folder number (such as "folders/123").
  *   `v1_id1` (*type:* `String.t`) - Part of `parent`. See documentation of `v1Id`.
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:"$.xgafv"` (*type:* `String.t`) - V1 error format.
      *   `:access_token` (*type:* `String.t`) - OAuth access token.
      *   `:alt` (*type:* `String.t`) - Data format for response.
      *   `:callback` (*type:* `String.t`) - JSONP
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      *   `:uploadType` (*type:* `String.t`) - Legacy upload protocol for media (e.g. "media", "multipart").
      *   `:upload_protocol` (*type:* `String.t`) - Upload protocol for media (e.g. "raw", "multipart").
      *   `:body` (*type:* `GoogleApi.CloudAsset.V1.Model.ExportAssetsRequest.t`) - 
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.CloudAsset.V1.Model.Operation{}}` on success
  *   `{:error, info}` on failure
  """
  @spec cloudasset_export_assets(Tesla.Env.client(), String.t(), String.t(), keyword(), keyword()) ::
          {:ok, GoogleApi.CloudAsset.V1.Model.Operation.t()}
          | {:ok, Tesla.Env.t()}
          | {:error, Tesla.Env.t()}
  def cloudasset_export_assets(connection, v1_id, v1_id1, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/{v1Id}/{v1Id1}:exportAssets", %{
        "v1Id" => URI.encode(v1_id, &URI.char_unreserved?/1),
        "v1Id1" => URI.encode(v1_id1, &URI.char_unreserved?/1)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudAsset.V1.Model.Operation{}])
  end
end
