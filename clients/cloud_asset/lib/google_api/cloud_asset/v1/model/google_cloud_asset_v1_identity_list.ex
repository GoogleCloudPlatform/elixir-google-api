# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1IdentityList do
  @moduledoc """
  The identities and group edges.

  ## Attributes

  *   `groupEdges` (*type:* `list(GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1Edge.t)`, *default:* `nil`) - Group identity edges of the graph starting from the binding's group members to any node of the identities. The Edge.source_node contains a group, such as `group:parent@google.com`. The Edge.target_node contains a member of the group, such as `group:child@google.com` or `user:foo@google.com`. This field is present only if the output_group_edges option is enabled in request.
  *   `identities` (*type:* `list(GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1Identity.t)`, *default:* `nil`) - Only the identities that match one of the following conditions will be presented: - The identity_selector, if it is specified in request; - Otherwise, identities reachable from the policy binding's members.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :groupEdges => list(GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1Edge.t()),
          :identities => list(GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1Identity.t())
        }

  field(:groupEdges, as: GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1Edge, type: :list)
  field(:identities, as: GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1Identity, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1IdentityList do
  def decode(value, options) do
    GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1IdentityList.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudAsset.V1.Model.GoogleCloudAssetV1IdentityList do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
