# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudAsset.V1.Model.Explanation do
  @moduledoc """
  Explanation about the IAM policy search result.

  ## Attributes

  *   `matchedPermissions` (*type:* `%{optional(String.t) => GoogleApi.CloudAsset.V1.Model.Permissions.t}`, *default:* `nil`) - The map from roles to their included permissions that match the permission query (i.e., a query containing `policy.role.permissions:`). Example: if query `policy.role.permissions:compute.disk.get` matches a policy binding that contains owner role, the matched_permissions will be `{"roles/owner": ["compute.disk.get"]}`. The roles can also be found in the returned `policy` bindings. Note that the map is populated only for requests with permission queries.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :matchedPermissions => %{
            optional(String.t()) => GoogleApi.CloudAsset.V1.Model.Permissions.t()
          }
        }

  field(:matchedPermissions, as: GoogleApi.CloudAsset.V1.Model.Permissions, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.CloudAsset.V1.Model.Explanation do
  def decode(value, options) do
    GoogleApi.CloudAsset.V1.Model.Explanation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudAsset.V1.Model.Explanation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
