# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DNS.V1.Model.DnsKey do
  @moduledoc """


  ## Attributes

  *   `algorithm` (*type:* `String.t`, *default:* `nil`) - 
  *   `creationTime` (*type:* `String.t`, *default:* `nil`) - 
  *   `description` (*type:* `String.t`, *default:* `nil`) - 
  *   `digests` (*type:* `list(GoogleApi.DNS.V1.Model.DnsKeyDigest.t)`, *default:* `nil`) - 
  *   `id` (*type:* `String.t`, *default:* `nil`) - 
  *   `isActive` (*type:* `boolean()`, *default:* `nil`) - 
  *   `keyLength` (*type:* `integer()`, *default:* `nil`) - 
  *   `keyTag` (*type:* `integer()`, *default:* `nil`) - 
  *   `kind` (*type:* `String.t`, *default:* `dns#dnsKey`) - Identifies what kind of resource this is. Value: the fixed string "dns#dnsKey".
  *   `publicKey` (*type:* `String.t`, *default:* `nil`) - 
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :algorithm => String.t(),
          :creationTime => String.t(),
          :description => String.t(),
          :digests => list(GoogleApi.DNS.V1.Model.DnsKeyDigest.t()),
          :id => String.t(),
          :isActive => boolean(),
          :keyLength => integer(),
          :keyTag => integer(),
          :kind => String.t(),
          :publicKey => String.t(),
          :type => String.t()
        }

  field(:algorithm)
  field(:creationTime)
  field(:description)
  field(:digests, as: GoogleApi.DNS.V1.Model.DnsKeyDigest, type: :list)
  field(:id)
  field(:isActive)
  field(:keyLength)
  field(:keyTag)
  field(:kind)
  field(:publicKey)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.DNS.V1.Model.DnsKey do
  def decode(value, options) do
    GoogleApi.DNS.V1.Model.DnsKey.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DNS.V1.Model.DnsKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
