# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.DNS.V1.Model.Quota do
  @moduledoc """
  Limits associated with a Project.

  ## Attributes

  - dnsKeysPerManagedZone (integer()): Maximum allowed number of DnsKeys per ManagedZone. Defaults to `nil`.
  - kind (String.t): Identifies what kind of resource this is. Value: the fixed string "dns#quota". Defaults to `dns#quota`.
  - managedZones (integer()): Maximum allowed number of managed zones in the project. Defaults to `nil`.
  - managedZonesPerNetwork (integer()): Maximum allowed number of managed zones which can be attached to a network. Defaults to `nil`.
  - networksPerManagedZone (integer()): Maximum allowed number of networks to which a privately scoped zone can be attached. Defaults to `nil`.
  - resourceRecordsPerRrset (integer()): Maximum allowed number of ResourceRecords per ResourceRecordSet. Defaults to `nil`.
  - rrsetAdditionsPerChange (integer()): Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest. Defaults to `nil`.
  - rrsetDeletionsPerChange (integer()): Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest. Defaults to `nil`.
  - rrsetsPerManagedZone (integer()): Maximum allowed number of ResourceRecordSets per zone in the project. Defaults to `nil`.
  - totalRrdataSizePerChange (integer()): Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes. Defaults to `nil`.
  - whitelistedKeySpecs (list(GoogleApi.DNS.V1.Model.DnsKeySpec.t)): DNSSEC algorithm and key length types that can be used for DnsKeys. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dnsKeysPerManagedZone => integer(),
          :kind => String.t(),
          :managedZones => integer(),
          :managedZonesPerNetwork => integer(),
          :networksPerManagedZone => integer(),
          :resourceRecordsPerRrset => integer(),
          :rrsetAdditionsPerChange => integer(),
          :rrsetDeletionsPerChange => integer(),
          :rrsetsPerManagedZone => integer(),
          :totalRrdataSizePerChange => integer(),
          :whitelistedKeySpecs => list(GoogleApi.DNS.V1.Model.DnsKeySpec.t())
        }

  field(:dnsKeysPerManagedZone)
  field(:kind)
  field(:managedZones)
  field(:managedZonesPerNetwork)
  field(:networksPerManagedZone)
  field(:resourceRecordsPerRrset)
  field(:rrsetAdditionsPerChange)
  field(:rrsetDeletionsPerChange)
  field(:rrsetsPerManagedZone)
  field(:totalRrdataSizePerChange)
  field(:whitelistedKeySpecs, as: GoogleApi.DNS.V1.Model.DnsKeySpec, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.DNS.V1.Model.Quota do
  def decode(value, options) do
    GoogleApi.DNS.V1.Model.Quota.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DNS.V1.Model.Quota do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
