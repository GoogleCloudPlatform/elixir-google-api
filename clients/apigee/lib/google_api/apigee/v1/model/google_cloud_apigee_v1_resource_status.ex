# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ResourceStatus do
  @moduledoc """
  The status of a resource loaded in the runtime.

  ## Attributes

  *   `resource` (*type:* `String.t`, *default:* `nil`) - The resource name. Currently only two resources are supported:
      EnvironmentGroup - organizations/{org}/envgroups/{envgroup}
      EnvironmentConfig -
      organizations/{org}/environments/{environment}/deployedConfig
  *   `revisions` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1RevisionStatus.t)`, *default:* `nil`) - Revisions of the resource currently deployed in the instance.
  *   `totalReplicas` (*type:* `integer()`, *default:* `nil`) - The total number of replicas that should have this resource.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - The uid of the resource. In the unexpected case that the instance has
      multiple uids for the same name, they should be reported under separate
      ResourceStatuses.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :resource => String.t(),
          :revisions => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1RevisionStatus.t()),
          :totalReplicas => integer(),
          :uid => String.t()
        }

  field(:resource)
  field(:revisions, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1RevisionStatus, type: :list)
  field(:totalReplicas)
  field(:uid)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ResourceStatus do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ResourceStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ResourceStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
