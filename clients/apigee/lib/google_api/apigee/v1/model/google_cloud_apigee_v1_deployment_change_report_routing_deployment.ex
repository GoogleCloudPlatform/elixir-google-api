# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment do
  @moduledoc """
  A tuple representing a basepath and the deployment containing it.

  ## Attributes

  *   `apiProxy` (*type:* `String.t`, *default:* `nil`) - The name of the deployed proxy revision containing the basepath.
  *   `basepath` (*type:* `String.t`, *default:* `nil`) - The basepath receiving traffic.
  *   `environment` (*type:* `String.t`, *default:* `nil`) - The name of the environment in which the proxy is deployed.
  *   `revision` (*type:* `String.t`, *default:* `nil`) - The name of the deployed proxy revision containing the basepath.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiProxy => String.t(),
          :basepath => String.t(),
          :environment => String.t(),
          :revision => String.t()
        }

  field(:apiProxy)
  field(:basepath)
  field(:environment)
  field(:revision)
end

defimpl Poison.Decoder,
  for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
