# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CustomCssData do
  @moduledoc """


  ## Attributes

  *   `compilationError` (*type:* `String.t`, *default:* `nil`) - Compilation error, if applicable.
  *   `created` (*type:* `String.t`, *default:* `nil`) - Time the custom CSS was created in milliseconds since epoch.
  *   `css` (*type:* `String.t`, *default:* `nil`) - CSS content of the portal.
  *   `customScssDraft` (*type:* `String.t`, *default:* `nil`) - Custom style overrides (draft).
  *   `customScssPublished` (*type:* `String.t`, *default:* `nil`) - Custom style overrides (published).
  *   `editorModeDraft` (*type:* `String.t`, *default:* `nil`) - Editor mode (draft).
  *   `editorModePublished` (*type:* `String.t`, *default:* `nil`) - Editor mode (published).
  *   `enabled` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that specifies whether the custom CSS is enabled.
  *   `faviconUrlDraft` (*type:* `String.t`, *default:* `nil`) - URL for favicon (draft).
  *   `faviconUrlPublished` (*type:* `String.t`, *default:* `nil`) - URL for favicon (published).
  *   `id` (*type:* `integer()`, *default:* `nil`) - ID of the custom CSS.
  *   `isThemeEditorEnabled` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that specifies whether theme editor is enabled.
  *   `logoUrlDraft` (*type:* `String.t`, *default:* `nil`) - URL for desktop logo (draft).
  *   `logoUrlPublished` (*type:* `String.t`, *default:* `nil`) - URL for desktop logo (published).
  *   `migrationState` (*type:* `String.t`, *default:* `nil`) - Migration status of portal.
  *   `mobileLogoUrlDraft` (*type:* `String.t`, *default:* `nil`) - URL for mobile logo (draft).
  *   `mobileLogoUrlPublished` (*type:* `String.t`, *default:* `nil`) - URL for mobile logo (published).
  *   `modified` (*type:* `String.t`, *default:* `nil`) - Time the custom CSS was last updated in milliseconds since epoch.
  *   `overridesDraft` (*type:* `String.t`, *default:* `nil`) - Variable overrides (draft).
  *   `overridesPublished` (*type:* `String.t`, *default:* `nil`) - Variable overrides (published).
  *   `published` (*type:* `String.t`, *default:* `nil`) - Time the custom CSS was last published in milliseconds since epoch.
  *   `siteId` (*type:* `String.t`, *default:* `nil`) - Name of the portal.
  *   `variablesDraft` (*type:* `String.t`, *default:* `nil`) - Basic style settings (draft).
  *   `variablesPublished` (*type:* `String.t`, *default:* `nil`) - Basic style settings (published).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :compilationError => String.t(),
          :created => String.t(),
          :css => String.t(),
          :customScssDraft => String.t(),
          :customScssPublished => String.t(),
          :editorModeDraft => String.t(),
          :editorModePublished => String.t(),
          :enabled => boolean(),
          :faviconUrlDraft => String.t(),
          :faviconUrlPublished => String.t(),
          :id => integer(),
          :isThemeEditorEnabled => boolean(),
          :logoUrlDraft => String.t(),
          :logoUrlPublished => String.t(),
          :migrationState => String.t(),
          :mobileLogoUrlDraft => String.t(),
          :mobileLogoUrlPublished => String.t(),
          :modified => String.t(),
          :overridesDraft => String.t(),
          :overridesPublished => String.t(),
          :published => String.t(),
          :siteId => String.t(),
          :variablesDraft => String.t(),
          :variablesPublished => String.t()
        }

  field(:compilationError)
  field(:created)
  field(:css)
  field(:customScssDraft)
  field(:customScssPublished)
  field(:editorModeDraft)
  field(:editorModePublished)
  field(:enabled)
  field(:faviconUrlDraft)
  field(:faviconUrlPublished)
  field(:id)
  field(:isThemeEditorEnabled)
  field(:logoUrlDraft)
  field(:logoUrlPublished)
  field(:migrationState)
  field(:mobileLogoUrlDraft)
  field(:mobileLogoUrlPublished)
  field(:modified)
  field(:overridesDraft)
  field(:overridesPublished)
  field(:published)
  field(:siteId)
  field(:variablesDraft)
  field(:variablesPublished)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CustomCssData do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CustomCssData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CustomCssData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
