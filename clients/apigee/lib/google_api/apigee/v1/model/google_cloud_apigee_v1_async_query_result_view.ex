# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1AsyncQueryResultView do
  @moduledoc """


  ## Attributes

  *   `code` (*type:* `integer()`, *default:* `nil`) - Error code when there is a failure.
  *   `error` (*type:* `String.t`, *default:* `nil`) - Error message when there is a failure.
  *   `metadata` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1QueryMetadata.t`, *default:* `nil`) - Metadata contains information like metrics, dimenstions etc
      of the AsyncQuery
  *   `rows` (*type:* `list(any())`, *default:* `nil`) - Rows of query result. Each row is a JSON object.

      Example: {sum(message_count): 1, developer_app: "(not set)",â€¦}
  *   `state` (*type:* `String.t`, *default:* `nil`) - State of retrieving ResultView.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :code => integer(),
          :error => String.t(),
          :metadata => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1QueryMetadata.t(),
          :rows => list(any()),
          :state => String.t()
        }

  field(:code)
  field(:error)
  field(:metadata, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1QueryMetadata)
  field(:rows, type: :list)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1AsyncQueryResultView do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1AsyncQueryResultView.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1AsyncQueryResultView do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
