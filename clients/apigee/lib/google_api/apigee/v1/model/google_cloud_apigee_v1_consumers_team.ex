# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumersTeam do
  @moduledoc """


  ## Attributes

  *   `apps` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1PortalApp.t)`, *default:* `nil`) - List of apps associated with the team.
  *   `audiences` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerAudience.t)`, *default:* `nil`) - List of audiences to which the team is assigned.
  *   `created` (*type:* `String.t`, *default:* `nil`) - Time the team was created in milliseconds since epoch.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the team.
  *   `id` (*type:* `String.t`, *default:* `nil`) - ID of the team.
  *   `memberCount` (*type:* `integer()`, *default:* `nil`) - 
  *   `memberships` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerTeamMembership.t)`, *default:* `nil`) - List of members and roles.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the team.
  *   `pointOfContact` (*type:* `String.t`, *default:* `nil`) - Point of contact for the team.
  *   `users` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerUser.t)`, *default:* `nil`) - List of users assigned to the team.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apps => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1PortalApp.t()),
          :audiences => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerAudience.t()),
          :created => String.t(),
          :description => String.t(),
          :id => String.t(),
          :memberCount => integer(),
          :memberships =>
            list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerTeamMembership.t()),
          :name => String.t(),
          :pointOfContact => String.t(),
          :users => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerUser.t())
        }

  field(:apps, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1PortalApp, type: :list)

  field(:audiences, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerAudience, type: :list)

  field(:created)
  field(:description)
  field(:id)
  field(:memberCount)

  field(:memberships,
    as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerTeamMembership,
    type: :list
  )

  field(:name)
  field(:pointOfContact)
  field(:users, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumerUser, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumersTeam do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumersTeam.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ConsumersTeam do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
