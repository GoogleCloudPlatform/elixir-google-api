# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CompanyAppKey do
  @moduledoc """


  ## Attributes

  *   `apiProducts` (*type:* `list(any())`, *default:* `nil`) - A list of api products this credential can be used for.
  *   `attributes` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t)`, *default:* `nil`) - A list of attributes tied to the credential.
  *   `consumerKey` (*type:* `String.t`, *default:* `nil`) - The consumer key.
  *   `consumerSecret` (*type:* `String.t`, *default:* `nil`) - The secret key.
  *   `expiresAt` (*type:* `String.t`, *default:* `nil`) - Unix time when the app was created
      json key: expiresAt
  *   `issuedAt` (*type:* `String.t`, *default:* `nil`) - Unix time when the app was issued
      json key: issuedAt
  *   `scopes` (*type:* `list(String.t)`, *default:* `nil`) - The scopes to apply to the app. The specified scope names must already
      exist on the API product that you associate with the app.
  *   `status` (*type:* `String.t`, *default:* `nil`) - The status of the credential.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiProducts => list(any()),
          :attributes => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t()),
          :consumerKey => String.t(),
          :consumerSecret => String.t(),
          :expiresAt => String.t(),
          :issuedAt => String.t(),
          :scopes => list(String.t()),
          :status => String.t()
        }

  field(:apiProducts, type: :list)
  field(:attributes, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute, type: :list)
  field(:consumerKey)
  field(:consumerSecret)
  field(:expiresAt)
  field(:issuedAt)
  field(:scopes, type: :list)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CompanyAppKey do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CompanyAppKey.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CompanyAppKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
