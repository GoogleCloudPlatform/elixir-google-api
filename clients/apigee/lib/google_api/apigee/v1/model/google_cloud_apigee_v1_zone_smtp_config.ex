# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ZoneSmtpConfig do
  @moduledoc """
  SMTP configuration for a zone.

  ## Attributes

  *   `secureAuthType` (*type:* `String.t`, *default:* `nil`) - Authorization type. Valid values include: SSL or TLS. Leave this field
      blank for no authorization.
  *   `sender` (*type:* `String.t`, *default:* `nil`) - Email address used as the sender.
  *   `serverHost` (*type:* `String.t`, *default:* `nil`) - Hostname of the SMTP server, such as `smtp.gmail.com`.
  *   `serverPassword` (*type:* `String.t`, *default:* `nil`) - Password of the SMTP account.
  *   `serverPort` (*type:* `String.t`, *default:* `nil`) - Port to be used, such as 465 if you are using TLS/SSL.
  *   `serverUsername` (*type:* `String.t`, *default:* `nil`) - Username of the SMTP account.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :secureAuthType => String.t(),
          :sender => String.t(),
          :serverHost => String.t(),
          :serverPassword => String.t(),
          :serverPort => String.t(),
          :serverUsername => String.t()
        }

  field(:secureAuthType)
  field(:sender)
  field(:serverHost)
  field(:serverPassword)
  field(:serverPort)
  field(:serverUsername)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ZoneSmtpConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ZoneSmtpConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ZoneSmtpConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
