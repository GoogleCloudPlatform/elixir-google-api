# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GraphQLOperationConfig do
  @moduledoc """
  GraphQLOperationConfig binds the resources in a proxy or remote service with the graphQL operation and its associated quota enforcement.

  ## Attributes

  *   `apiSource` (*type:* `String.t`, *default:* `nil`) - Required. API proxy endpoint or remote service name with which the graphQL operation, and quota are associated.
  *   `attributes` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t)`, *default:* `nil`) - Custom attributes associated with the operation.
  *   `operations` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GraphQLOperation.t)`, *default:* `nil`) - Required. List of graphQL name/Operation type pairs for the proxy/remote service, upon which quota will applied. If GraphQLOperation operation has only the operation type(s), that would imply that quota will be applied on all graphQL requests irrespective of the graphQL name. **Note**: Currently, we can specify only a single GraphQLOperation. Specifying more than one will result in failure of the operation.
  *   `quota` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota.t`, *default:* `nil`) - Quota parameters to be enforced for the resources, methods, api_source combination. If none are specified, quota enforcement will not be done.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiSource => String.t() | nil,
          :attributes => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t()) | nil,
          :operations =>
            list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GraphQLOperation.t()) | nil,
          :quota => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota.t() | nil
        }

  field(:apiSource)
  field(:attributes, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute, type: :list)

  field(:operations,
    as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GraphQLOperation,
    type: :list
  )

  field(:quota, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GraphQLOperationConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GraphQLOperationConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1GraphQLOperationConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
