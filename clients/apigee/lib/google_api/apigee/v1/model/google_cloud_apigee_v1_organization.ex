# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Organization do
  @moduledoc """


  ## Attributes

  *   `analyticsRegion` (*type:* `String.t`, *default:* `nil`) - Required. Primary GCP region for analytics data storage. For valid values, see [Create an organization](https://docs.apigee.com/hybrid/latest/precog-provision).
  *   `attributes` (*type:* `list(String.t)`, *default:* `nil`) - Not used by Apigee.
  *   `authorizedNetwork` (*type:* `String.t`, *default:* `nil`) - Compute Engine network used for ServiceNetworking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType] is set to CLOUD. The value can be updated only when there are no runtime instances. For example: "default". **Note:** Not supported for Apigee hybrid.
  *   `caCertificate` (*type:* `String.t`, *default:* `nil`) - Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType] is CLOUD.
  *   `createdAt` (*type:* `String.t`, *default:* `nil`) - Output only. Time that the Apigee organization was created in milliseconds since epoch.
  *   `customerName` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the Apigee organization.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - 
  *   `environments` (*type:* `list(String.t)`, *default:* `nil`) - Output only. List of environments in the Apigee organization.
  *   `lastModifiedAt` (*type:* `String.t`, *default:* `nil`) - Output only. Time that the Apigee organization was last modified in milliseconds since epoch.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Name of the Apigee organization.
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - The project ID associated with the Apigee organization.
  *   `properties` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Properties.t`, *default:* `nil`) - Properties defined in the Apigee organization profile.
  *   `runtimeType` (*type:* `String.t`, *default:* `nil`) - Output only. Runtime type of the Apigee organization based on the Apigee subscription purchased.
  *   `subscriptionType` (*type:* `String.t`, *default:* `nil`) - Output only. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
  *   `type` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyticsRegion => String.t(),
          :attributes => list(String.t()),
          :authorizedNetwork => String.t(),
          :caCertificate => String.t(),
          :createdAt => String.t(),
          :customerName => String.t(),
          :description => String.t(),
          :displayName => String.t(),
          :environments => list(String.t()),
          :lastModifiedAt => String.t(),
          :name => String.t(),
          :projectId => String.t(),
          :properties => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Properties.t(),
          :runtimeType => String.t(),
          :subscriptionType => String.t(),
          :type => String.t()
        }

  field(:analyticsRegion)
  field(:attributes, type: :list)
  field(:authorizedNetwork)
  field(:caCertificate)
  field(:createdAt)
  field(:customerName)
  field(:description)
  field(:displayName)
  field(:environments, type: :list)
  field(:lastModifiedAt)
  field(:name)
  field(:projectId)
  field(:properties, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Properties)
  field(:runtimeType)
  field(:subscriptionType)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Organization do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Organization.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Organization do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
