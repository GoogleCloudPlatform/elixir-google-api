# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SiteData do
  @moduledoc """


  ## Attributes

  *   `zoneId` (*type:* `String.t`, *default:* `nil`) - ID of the identity zone.
  *   `siteDomainSuffix` (*type:* `String.t`, *default:* `nil`) - Suffix for the portal domain. By default, this is set to ".apigee.io".
  *   `orgName` (*type:* `String.t`, *default:* `nil`) - Name of the Apigee organization.
  *   `trashedBy` (*type:* `String.t`, *default:* `nil`) - Name of the user that deleted the portal.
  *   `customDomain` (*type:* `String.t`, *default:* `nil`) - Custom domain (if applicable).
  *   `direction` (*type:* `String.t`, *default:* `nil`) - Type of writing system, such as left-to-right (ltr).
  *   `portalVersion` (*type:* `integer()`, *default:* `nil`) - Version of the portal.
  *   `anonAllowedByDefault` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that sets the default visibility for pages and API products
      that are published on the portal. When set to`true`, allows access by
      all users (public).
  *   `lastPublished` (*type:* `String.t`, *default:* `nil`) - Time the portal was last published in milliseconds since epoch.
  *   `itSecretKey` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `language` (*type:* `String.t`, *default:* `nil`) - Language for the portal (such as "en").
  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the portal.
  *   `themeVersion` (*type:* `String.t`, *default:* `nil`) - Version of the theme used by the portal. (Internal use only.)
  *   `timeZone` (*type:* `String.t`, *default:* `nil`) - Time zone.
  *   `teams` (*type:* `list(String.t)`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the portal.
  *   `theme` (*type:* `String.t`, *default:* `nil`) - Name of the theme used on the portal (apigee).
  *   `analyticsScript` (*type:* `String.t`, *default:* `nil`) - Custom HTML/JS analytics script added before the <body> tag on all pages
      of the site.
  *   `customDomainEnabled` (*type:* `boolean()`, *default:* `nil`) - Not used currently by Apigee hybrid.
  *   `stylesheetDirty` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that specifies whether the custom CSS needs to be
      recalculated.
  *   `status` (*type:* `String.t`, *default:* `nil`) - Status of the portal indicating whether the portal is published (Active) or
      unpublished (Inactive).
  *   `lastModified` (*type:* `String.t`, *default:* `nil`) - Time the portal was last modified in milliseconds since epoch.
  *   `approvedEmails` (*type:* `String.t`, *default:* `nil`) - List of emails that are allowed to sign up on the portal.
  *   `iconUrl` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `customerId` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `lastLogin` (*type:* `String.t`, *default:* `nil`) - Time that a user last signed in to the portal in milliseconds since epoch.
  *   `iconBg` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `defaultURL` (*type:* `String.t`, *default:* `nil`) - Default URL to access the portal.
  *   `idpEnabled` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that specifies whether an identity provider has been enabled.
  *   `currentURL` (*type:* `String.t`, *default:* `nil`) - URL currently in use by the portal.
  *   `defaultDomain` (*type:* `String.t`, *default:* `nil`) - Default domain for the portal.
  *   `showSettings` (*type:* `boolean()`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `analyticsTrackingId` (*type:* `String.t`, *default:* `nil`) - 
  *   `id` (*type:* `String.t`, *default:* `nil`) - ID of the portal.
  *   `migrationSrcSiteId` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `trashedOn` (*type:* `String.t`, *default:* `nil`) - Time the portal was deleted in milliseconds since epoch.
  *   `trashed` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that specifies whether the portal has been deleted.
  *   `logoUrl` (*type:* `String.t`, *default:* `nil`) - Logo image used on desktop devices.
  *   `currentDomain` (*type:* `String.t`, *default:* `nil`) - Domain name currently in use by the portal.
  *   `fileLimit` (*type:* `integer()`, *default:* `nil`) - Maximimum number of file assets that can be uploaded.
  *   `altLogoUrl` (*type:* `String.t`, *default:* `nil`) - Logo image used on mobile devices.
  *   `migrationDestSiteId` (*type:* `String.t`, *default:* `nil`) - Not used by Apigee hybrid.
  *   `https` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that specifies whether the URL will be HTTPS.
  *   `created` (*type:* `String.t`, *default:* `nil`) - Time the portal was created in milliseconds since epoch.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :zoneId => String.t(),
          :siteDomainSuffix => String.t(),
          :orgName => String.t(),
          :trashedBy => String.t(),
          :customDomain => String.t(),
          :direction => String.t(),
          :portalVersion => integer(),
          :anonAllowedByDefault => boolean(),
          :lastPublished => String.t(),
          :itSecretKey => String.t(),
          :language => String.t(),
          :description => String.t(),
          :themeVersion => String.t(),
          :timeZone => String.t(),
          :teams => list(String.t()),
          :name => String.t(),
          :theme => String.t(),
          :analyticsScript => String.t(),
          :customDomainEnabled => boolean(),
          :stylesheetDirty => boolean(),
          :status => String.t(),
          :lastModified => String.t(),
          :approvedEmails => String.t(),
          :iconUrl => String.t(),
          :customerId => String.t(),
          :lastLogin => String.t(),
          :iconBg => String.t(),
          :defaultURL => String.t(),
          :idpEnabled => boolean(),
          :currentURL => String.t(),
          :defaultDomain => String.t(),
          :showSettings => boolean(),
          :analyticsTrackingId => String.t(),
          :id => String.t(),
          :migrationSrcSiteId => String.t(),
          :trashedOn => String.t(),
          :trashed => boolean(),
          :logoUrl => String.t(),
          :currentDomain => String.t(),
          :fileLimit => integer(),
          :altLogoUrl => String.t(),
          :migrationDestSiteId => String.t(),
          :https => boolean(),
          :created => String.t()
        }

  field(:zoneId)
  field(:siteDomainSuffix)
  field(:orgName)
  field(:trashedBy)
  field(:customDomain)
  field(:direction)
  field(:portalVersion)
  field(:anonAllowedByDefault)
  field(:lastPublished)
  field(:itSecretKey)
  field(:language)
  field(:description)
  field(:themeVersion)
  field(:timeZone)
  field(:teams, type: :list)
  field(:name)
  field(:theme)
  field(:analyticsScript)
  field(:customDomainEnabled)
  field(:stylesheetDirty)
  field(:status)
  field(:lastModified)
  field(:approvedEmails)
  field(:iconUrl)
  field(:customerId)
  field(:lastLogin)
  field(:iconBg)
  field(:defaultURL)
  field(:idpEnabled)
  field(:currentURL)
  field(:defaultDomain)
  field(:showSettings)
  field(:analyticsTrackingId)
  field(:id)
  field(:migrationSrcSiteId)
  field(:trashedOn)
  field(:trashed)
  field(:logoUrl)
  field(:currentDomain)
  field(:fileLimit)
  field(:altLogoUrl)
  field(:migrationDestSiteId)
  field(:https)
  field(:created)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SiteData do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SiteData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SiteData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
