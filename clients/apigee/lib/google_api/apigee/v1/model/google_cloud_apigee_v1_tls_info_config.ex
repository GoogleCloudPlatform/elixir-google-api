# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TlsInfoConfig do
  @moduledoc """


  ## Attributes

  *   `ciphers` (*type:* `list(String.t)`, *default:* `nil`) - Whitelist of supported ciphers.
  *   `clientAuthEnabled` (*type:* `boolean()`, *default:* `nil`) - Indicates if client auth is enabled for the target. Enables two-way TLS.
  *   `commonName` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CommonNameConfig.t`, *default:* `nil`) - Common name to validate the target against.
  *   `enabled` (*type:* `boolean()`, *default:* `nil`) - Enables one-way TLS.
  *   `ignoreValidationErrors` (*type:* `boolean()`, *default:* `nil`) - If true, ignore TLS certificate validation errors.
  *   `keyAlias` (*type:* `String.t`, *default:* `nil`) - The name of the Alias used for client side auth. It must be of the form:
      organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}
  *   `keyAliasReference` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1KeyAliasReference.t`, *default:* `nil`) - A pair of reference name and alias to use for client side auth.
  *   `protocols` (*type:* `list(String.t)`, *default:* `nil`) - Whitelist of supported TLS protocols.
  *   `trustStore` (*type:* `String.t`, *default:* `nil`) - The name of the Keystore or keystore reference containing trusted
      certificates for the server. It must be of either the form
      organizations/{org}/environments/{env}/keystores/{keystore} or
      organizations/{org}/environments/{env}/references/{reference}.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ciphers => list(String.t()),
          :clientAuthEnabled => boolean(),
          :commonName => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CommonNameConfig.t(),
          :enabled => boolean(),
          :ignoreValidationErrors => boolean(),
          :keyAlias => String.t(),
          :keyAliasReference =>
            GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1KeyAliasReference.t(),
          :protocols => list(String.t()),
          :trustStore => String.t()
        }

  field(:ciphers, type: :list)
  field(:clientAuthEnabled)
  field(:commonName, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CommonNameConfig)
  field(:enabled)
  field(:ignoreValidationErrors)
  field(:keyAlias)
  field(:keyAliasReference, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1KeyAliasReference)
  field(:protocols, type: :list)
  field(:trustStore)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TlsInfoConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TlsInfoConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TlsInfoConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
