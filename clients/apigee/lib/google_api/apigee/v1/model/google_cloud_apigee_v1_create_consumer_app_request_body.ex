# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CreateConsumerAppRequestBody do
  @moduledoc """


  ## Attributes

  *   `apiProducts` (*type:* `list(String.t)`, *default:* `nil`) - List of associated API products.
  *   `attributes` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t)`, *default:* `nil`) - List of attributes.
  *   `callbackUrl` (*type:* `String.t`, *default:* `nil`) - Callback URL.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the app.
  *   `name` (*type:* `String.t`, *default:* `nil`) - User-friendly display name for the app.
  *   `owner` (*type:* `String.t`, *default:* `nil`) - Owner of the app.
  *   `ownerType` (*type:* `String.t`, *default:* `nil`) - Type of owner.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiProducts => list(String.t()),
          :attributes => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t()),
          :callbackUrl => String.t(),
          :description => String.t(),
          :name => String.t(),
          :owner => String.t(),
          :ownerType => String.t()
        }

  field(:apiProducts, type: :list)
  field(:attributes, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute, type: :list)
  field(:callbackUrl)
  field(:description)
  field(:name)
  field(:owner)
  field(:ownerType)
end

defimpl Poison.Decoder,
  for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CreateConsumerAppRequestBody do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CreateConsumerAppRequestBody.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CreateConsumerAppRequestBody do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
