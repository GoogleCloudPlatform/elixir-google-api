# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SmtpConfig do
  @moduledoc """


  ## Attributes

  *   `authType` (*type:* `String.t`, *default:* `nil`) - Authorization type. Valid values include SSL, TLS, or blank (no auth).
  *   `fromEmail` (*type:* `String.t`, *default:* `nil`) - Email address used as the sender.
  *   `host` (*type:* `String.t`, *default:* `nil`) - Host URL of the SMTP server.
  *   `id` (*type:* `integer()`, *default:* `nil`) - ID of the SMTP configuration.
  *   `password` (*type:* `String.t`, *default:* `nil`) - SMTP password.
  *   `port` (*type:* `String.t`, *default:* `nil`) - Port number for the SMTP server. Supported values include:
      465 (SSL), 587 (TLS), and 25 (open, no authorization).
  *   `secure` (*type:* `boolean()`, *default:* `nil`) - Boolean flag that specifies whether to use a secure connection to the
      SMTP server.
  *   `securePassword` (*type:* `String.t`, *default:* `nil`) - SMTP secure password.
  *   `siteId` (*type:* `String.t`, *default:* `nil`) - ID of the portal.
  *   `username` (*type:* `String.t`, *default:* `nil`) - SMTP username.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authType => String.t(),
          :fromEmail => String.t(),
          :host => String.t(),
          :id => integer(),
          :password => String.t(),
          :port => String.t(),
          :secure => boolean(),
          :securePassword => String.t(),
          :siteId => String.t(),
          :username => String.t()
        }

  field(:authType)
  field(:fromEmail)
  field(:host)
  field(:id)
  field(:password)
  field(:port)
  field(:secure)
  field(:securePassword)
  field(:siteId)
  field(:username)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SmtpConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SmtpConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1SmtpConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
