# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CertInfo do
  @moduledoc """
  X.509 certificate as defined in RFC 5280.

  ## Attributes

  *   `basicConstraints` (*type:* `String.t`, *default:* `nil`) - X.509 basic constraints extension.
  *   `expiryDate` (*type:* `String.t`, *default:* `nil`) - X.509 `notAfter` validity period in milliseconds since epoch.
  *   `isValid` (*type:* `String.t`, *default:* `nil`) - Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid.
  *   `issuer` (*type:* `String.t`, *default:* `nil`) - X.509 issuer.
  *   `publicKey` (*type:* `String.t`, *default:* `nil`) - Public key component of the X.509 subject public key info.
  *   `serialNumber` (*type:* `String.t`, *default:* `nil`) - X.509 serial number.
  *   `sigAlgName` (*type:* `String.t`, *default:* `nil`) - X.509 signatureAlgorithm.
  *   `subject` (*type:* `String.t`, *default:* `nil`) - X.509 subject.
  *   `subjectAlternativeNames` (*type:* `list(String.t)`, *default:* `nil`) - X.509 subject alternative names (SANs) extension.
  *   `validFrom` (*type:* `String.t`, *default:* `nil`) - X.509 `notBefore` validity period in milliseconds since epoch.
  *   `version` (*type:* `integer()`, *default:* `nil`) - X.509 version.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :basicConstraints => String.t(),
          :expiryDate => String.t(),
          :isValid => String.t(),
          :issuer => String.t(),
          :publicKey => String.t(),
          :serialNumber => String.t(),
          :sigAlgName => String.t(),
          :subject => String.t(),
          :subjectAlternativeNames => list(String.t()),
          :validFrom => String.t(),
          :version => integer()
        }

  field(:basicConstraints)
  field(:expiryDate)
  field(:isValid)
  field(:issuer)
  field(:publicKey)
  field(:serialNumber)
  field(:sigAlgName)
  field(:subject)
  field(:subjectAlternativeNames, type: :list)
  field(:validFrom)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CertInfo do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CertInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1CertInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
