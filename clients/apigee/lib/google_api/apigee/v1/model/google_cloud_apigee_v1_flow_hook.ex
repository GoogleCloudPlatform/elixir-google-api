# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1FlowHook do
  @moduledoc """


  ## Attributes

  *   `continueOnError` (*type:* `boolean()`, *default:* `nil`) - Optional. Flag that specifies whether execution should continue if the flow hook throws an exception. Set to `true` to continue execution. Set to `false` to stop execution if the flow hook throws an exception. Defaults to `true`.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the flow hook.
  *   `flowHookPoint` (*type:* `String.t`, *default:* `nil`) - Output only. Where in the API call flow the flow hook is invoked. Must be one of `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, or `PostTargetFlowHook`.
  *   `sharedFlow` (*type:* `String.t`, *default:* `nil`) - Shared flow attached to this flow hook, or empty if there is none attached.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :continueOnError => boolean(),
          :description => String.t(),
          :flowHookPoint => String.t(),
          :sharedFlow => String.t()
        }

  field(:continueOnError)
  field(:description)
  field(:flowHookPoint)
  field(:sharedFlow)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1FlowHook do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1FlowHook.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1FlowHook do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
