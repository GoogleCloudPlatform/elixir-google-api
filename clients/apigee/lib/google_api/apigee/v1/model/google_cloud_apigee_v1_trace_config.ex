# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TraceConfig do
  @moduledoc """
  TraceConfig defines the configurations in an environment of distributed trace.

  ## Attributes

  *   `endpoint` (*type:* `String.t`, *default:* `nil`) - Required. Endpoint of the exporter.
  *   `exporter` (*type:* `String.t`, *default:* `nil`) - Required. Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters.
  *   `samplingConfig` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TraceSamplingConfig.t`, *default:* `nil`) - Distributed trace configuration for all API proxies in an environment. You can also override the configuration for a specific API proxy using the distributed trace configuration overrides API.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endpoint => String.t(),
          :exporter => String.t(),
          :samplingConfig => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TraceSamplingConfig.t()
        }

  field(:endpoint)
  field(:exporter)
  field(:samplingConfig, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TraceSamplingConfig)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TraceConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TraceConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1TraceConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
