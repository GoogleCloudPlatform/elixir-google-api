# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1OperationConfig do
  @moduledoc """
  OperationConfig binds the resources in a proxy or remote service with the allowed REST methods and its associated quota enforcement.

  ## Attributes

  *   `apiSource` (*type:* `String.t`, *default:* `nil`) - Required. api_source represents either a proxy or remote service name for which the resources, methods and quota are associated with.
  *   `attributes` (*type:* `list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t)`, *default:* `nil`) - custom attribute associated with the operation.
  *   `methods` (*type:* `list(String.t)`, *default:* `nil`) - methods refers to the REST verbs as in https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html. When none specified, all verb types are allowed.
  *   `quota` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota.t`, *default:* `nil`) - Quota parameters to be enforced for the resources, methods, api_source combination. If none specified, quota enforcement will not be done.
  *   `resources` (*type:* `list(String.t)`, *default:* `nil`) - Required. resources represents a list of REST resource path associated with the proxy/remote service.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiSource => String.t(),
          :attributes => list(GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute.t()),
          :methods => list(String.t()),
          :quota => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota.t(),
          :resources => list(String.t())
        }

  field(:apiSource)
  field(:attributes, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Attribute, type: :list)
  field(:methods, type: :list)
  field(:quota, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1Quota)
  field(:resources, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1OperationConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1OperationConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1OperationConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
