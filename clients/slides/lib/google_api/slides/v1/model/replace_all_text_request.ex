# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Slides.V1.Model.ReplaceAllTextRequest do
  @moduledoc """
  Replaces all instances of text matching a criteria with replace text.

  ## Attributes

  - containsText (SubstringMatchCriteria): Finds text in a shape matching this substring. Defaults to: `null`.
  - pageObjectIds ([String.t]): If non-empty, limits the matches to page elements only on the given pages.  Returns a 400 bad request error if given the page object ID of a notes master, or if a page with that object ID doesn&#39;t exist in the presentation. Defaults to: `null`.
  - replaceText (String.t): The text that will replace the matched text. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :containsText => GoogleApi.Slides.V1.Model.SubstringMatchCriteria.t(),
          :pageObjectIds => list(any()),
          :replaceText => any()
        }

  field(:containsText, as: GoogleApi.Slides.V1.Model.SubstringMatchCriteria)
  field(:pageObjectIds, type: :list)
  field(:replaceText)
end

defimpl Poison.Decoder, for: GoogleApi.Slides.V1.Model.ReplaceAllTextRequest do
  def decode(value, options) do
    GoogleApi.Slides.V1.Model.ReplaceAllTextRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Slides.V1.Model.ReplaceAllTextRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
