# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Slides.V1.Model.AffineTransform do
  @moduledoc """
  AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x&#39;, y&#39;) according to:        x&#39;  x  &#x3D;   shear_y  scale_y  translate_y         1  [ 1 ]  After transformation,       x&#39; &#x3D; scale_x * x + shear_x * y + translate_x;      y&#39; &#x3D; scale_y * y + shear_y * x + translate_y;  This message is therefore composed of these six matrix elements.

  ## Attributes

  - scaleX (float()): The X coordinate scaling element. Defaults to: `null`.
  - scaleY (float()): The Y coordinate scaling element. Defaults to: `null`.
  - shearX (float()): The X coordinate shearing element. Defaults to: `null`.
  - shearY (float()): The Y coordinate shearing element. Defaults to: `null`.
  - translateX (float()): The X coordinate translation element. Defaults to: `null`.
  - translateY (float()): The Y coordinate translation element. Defaults to: `null`.
  - unit (String.t): The units for translate elements. Defaults to: `null`.
    - Enum - one of [UNIT_UNSPECIFIED, EMU, PT]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :scaleX => any(),
          :scaleY => any(),
          :shearX => any(),
          :shearY => any(),
          :translateX => any(),
          :translateY => any(),
          :unit => any()
        }

  field(:scaleX)
  field(:scaleY)
  field(:shearX)
  field(:shearY)
  field(:translateX)
  field(:translateY)
  field(:unit)
end

defimpl Poison.Decoder, for: GoogleApi.Slides.V1.Model.AffineTransform do
  def decode(value, options) do
    GoogleApi.Slides.V1.Model.AffineTransform.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Slides.V1.Model.AffineTransform do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
