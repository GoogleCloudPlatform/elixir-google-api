# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkManagement.V1beta1.Model.LoadBalancerBackend do
  @moduledoc """
  For display only. Metadata associated with a specific load balancer backend.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Name of a Compute Engine instance or network endpoint.
  *   `healthCheckAllowingFirewallRules` (*type:* `list(String.t)`, *default:* `nil`) - A list of firewall rule URIs allowing probes from health check IP ranges.
  *   `healthCheckBlockingFirewallRules` (*type:* `list(String.t)`, *default:* `nil`) - A list of firewall rule URIs blocking probes from health check IP ranges.
  *   `healthCheckFirewallState` (*type:* `String.t`, *default:* `nil`) - State of the health check firewall configuration.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - URI of a Compute Engine instance or network endpoint.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t(),
          :healthCheckAllowingFirewallRules => list(String.t()),
          :healthCheckBlockingFirewallRules => list(String.t()),
          :healthCheckFirewallState => String.t(),
          :uri => String.t()
        }

  field(:displayName)
  field(:healthCheckAllowingFirewallRules, type: :list)
  field(:healthCheckBlockingFirewallRules, type: :list)
  field(:healthCheckFirewallState)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkManagement.V1beta1.Model.LoadBalancerBackend do
  def decode(value, options) do
    GoogleApi.NetworkManagement.V1beta1.Model.LoadBalancerBackend.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkManagement.V1beta1.Model.LoadBalancerBackend do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
