# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkManagement.V1beta1.Model.ForwardingRuleInfo do
  @moduledoc """
  For display only. Metadata associated with a Compute Engine forwarding rule.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Name of a Compute Engine forwarding rule.
  *   `matchedPortRange` (*type:* `String.t`, *default:* `nil`) - Port range defined in the forwarding rule that matches the test.
  *   `matchedProtocol` (*type:* `String.t`, *default:* `nil`) - Protocol defined in the forwarding rule that matches the test.
  *   `networkUri` (*type:* `String.t`, *default:* `nil`) - Network URI. Only valid for Internal Load Balancer.
  *   `target` (*type:* `String.t`, *default:* `nil`) - Target type of the forwarding rule.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - URI of a Compute Engine forwarding rule.
  *   `vip` (*type:* `String.t`, *default:* `nil`) - VIP of the forwarding rule.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t(),
          :matchedPortRange => String.t(),
          :matchedProtocol => String.t(),
          :networkUri => String.t(),
          :target => String.t(),
          :uri => String.t(),
          :vip => String.t()
        }

  field(:displayName)
  field(:matchedPortRange)
  field(:matchedProtocol)
  field(:networkUri)
  field(:target)
  field(:uri)
  field(:vip)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkManagement.V1beta1.Model.ForwardingRuleInfo do
  def decode(value, options) do
    GoogleApi.NetworkManagement.V1beta1.Model.ForwardingRuleInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkManagement.V1beta1.Model.ForwardingRuleInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
