# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkManagement.V1beta1.Model.ProbingDetails do
  @moduledoc """
  The details of probing from the latest run.

  ## Attributes

  *   `abortCause` (*type:* `String.t`, *default:* `nil`) - Causes that the probing was aborted.
  *   `endpointInfo` (*type:* `GoogleApi.NetworkManagement.V1beta1.Model.EndpointInfo.t`, *default:* `nil`) - Derived from the test input. The actual source and destination endpoint where the probing was run.
  *   `error` (*type:* `GoogleApi.NetworkManagement.V1beta1.Model.Status.t`, *default:* `nil`) - The details of an internal failure or a cancellation of reachability analysis.
  *   `probingLatency` (*type:* `GoogleApi.NetworkManagement.V1beta1.Model.LatencyDistribution.t`, *default:* `nil`) - One way probing latency distribution. The latency is measured as duration of packet traversal of Google Cloud network, from source to destination endpoint.
  *   `result` (*type:* `String.t`, *default:* `nil`) - The overall reachability result of the test.
  *   `sentProbeCount` (*type:* `integer()`, *default:* `nil`) - Number of probes sent.
  *   `successfulProbeCount` (*type:* `integer()`, *default:* `nil`) - Number of probes that reached destination.
  *   `verifyTime` (*type:* `DateTime.t`, *default:* `nil`) - The time the reachability state was verified.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :abortCause => String.t(),
          :endpointInfo => GoogleApi.NetworkManagement.V1beta1.Model.EndpointInfo.t(),
          :error => GoogleApi.NetworkManagement.V1beta1.Model.Status.t(),
          :probingLatency => GoogleApi.NetworkManagement.V1beta1.Model.LatencyDistribution.t(),
          :result => String.t(),
          :sentProbeCount => integer(),
          :successfulProbeCount => integer(),
          :verifyTime => DateTime.t()
        }

  field(:abortCause)
  field(:endpointInfo, as: GoogleApi.NetworkManagement.V1beta1.Model.EndpointInfo)
  field(:error, as: GoogleApi.NetworkManagement.V1beta1.Model.Status)
  field(:probingLatency, as: GoogleApi.NetworkManagement.V1beta1.Model.LatencyDistribution)
  field(:result)
  field(:sentProbeCount)
  field(:successfulProbeCount)
  field(:verifyTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkManagement.V1beta1.Model.ProbingDetails do
  def decode(value, options) do
    GoogleApi.NetworkManagement.V1beta1.Model.ProbingDetails.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkManagement.V1beta1.Model.ProbingDetails do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
