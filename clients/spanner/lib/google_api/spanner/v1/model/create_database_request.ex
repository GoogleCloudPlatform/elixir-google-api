# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Model.CreateDatabaseRequest do
  @moduledoc """
  The request for CreateDatabase.

  ## Attributes

  - createStatement (String.t): Required. A &#x60;CREATE DATABASE&#x60; statement, which specifies the ID of the new database.  The database ID must conform to the regular expression &#x60;a-z*[a-z0-9]&#x60; and be between 2 and 30 characters in length. If the database ID is a reserved word or if it contains a hyphen, the database ID must be enclosed in backticks (&#x60;&#x60; &#x60; &#x60;&#x60;). Defaults to: `null`.
  - extraStatements ([String.t]): An optional list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc. These statements execute atomically with the creation of the database: if there is an error in any statement, the database is not created. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createStatement => any(),
          :extraStatements => list(any())
        }

  field(:createStatement)
  field(:extraStatements, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.CreateDatabaseRequest do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.CreateDatabaseRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.CreateDatabaseRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
