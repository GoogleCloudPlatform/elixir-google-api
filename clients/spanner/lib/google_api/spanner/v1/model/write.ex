# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Model.Write do
  @moduledoc """
  Arguments to insert, update, insert_or_update, and replace operations.

  ## Attributes

  - columns (List[String]): The names of the columns in table to be written.  The list of columns must contain enough columns to allow Cloud Spanner to derive values for all primary key columns in the row(s) to be modified. Defaults to: `null`.
  - table (String): Required. The table whose rows will be written. Defaults to: `null`.
  - values (List[List[ErrorUnknown]]): The values to be written. &#x60;values&#x60; can contain more than one list of values. If it does, then multiple rows are written, one for each entry in &#x60;values&#x60;. Each list in &#x60;values&#x60; must have exactly as many entries as there are entries in columns above. Sending multiple lists is equivalent to sending multiple &#x60;Mutation&#x60;s, each containing one &#x60;values&#x60; entry and repeating table and columns. Individual values in each list are encoded as described here. Defaults to: `null`.
  """

  defstruct [
    :"columns",
    :"table",
    :"values"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.Write do
  def decode(value, _options) do
    value
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.Write do
  def encode(value, options) do
    GoogleApi.Spanner.V1.Deserializer.serialize_non_nil(value, options)
  end
end

