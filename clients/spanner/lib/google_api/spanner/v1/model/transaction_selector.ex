# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Model.TransactionSelector do
  @moduledoc """
  This message is used to select the transaction in which a Read or ExecuteSql call runs.  See TransactionOptions for more information about transactions.

  ## Attributes

  - begin (TransactionOptions): Begin a new transaction and execute this read or SQL query in it. The transaction ID of the new transaction is returned in ResultSetMetadata.transaction, which is a Transaction. Defaults to: `null`.
  - id (String): Execute the read or SQL query in a previously-started transaction. Defaults to: `null`.
  - singleUse (TransactionOptions): Execute the read or SQL query in a temporary transaction. This is the most efficient way to execute a transaction that consists of a single SQL query. Defaults to: `null`.
  """

  defstruct [
    :"begin",
    :"id",
    :"singleUse"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.TransactionSelector do
  import GoogleApi.Spanner.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"begin", :struct, GoogleApi.Spanner.V1.Model.TransactionOptions, options)
    |> deserialize(:"singleUse", :struct, GoogleApi.Spanner.V1.Model.TransactionOptions, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.TransactionSelector do
  def encode(value, options) do
    GoogleApi.Spanner.V1.Deserializer.serialize_non_nil(value, options)
  end
end

