# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Model.ResultSet do
  @moduledoc """
  Results from Read or
  ExecuteSql.

  ## Attributes

  - metadata (GoogleApi.Spanner.V1.Model.ResultSetMetadata.t): Metadata about the result set, such as row type information. Defaults to `nil`.
  - rows (list(list(any()))): Each element in `rows` is a row whose format is defined by
  metadata.row_type. The ith element
  in each row matches the ith field in
  metadata.row_type. Elements are
  encoded based on type as described
  here. Defaults to `nil`.
  - stats (GoogleApi.Spanner.V1.Model.ResultSetStats.t): Query plan and execution statistics for the SQL statement that
  produced this result set. These can be requested by setting
  ExecuteSqlRequest.query_mode.
  DML statements always produce stats containing the number of rows
  modified, unless executed using the
  ExecuteSqlRequest.QueryMode.PLAN ExecuteSqlRequest.query_mode.
  Other fields may or may not be populated, based on the
  ExecuteSqlRequest.query_mode. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :metadata => GoogleApi.Spanner.V1.Model.ResultSetMetadata.t(),
          :rows => list(list(any())),
          :stats => GoogleApi.Spanner.V1.Model.ResultSetStats.t()
        }

  field(:metadata, as: GoogleApi.Spanner.V1.Model.ResultSetMetadata)
  field(:rows, type: :list)
  field(:stats, as: GoogleApi.Spanner.V1.Model.ResultSetStats)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.ResultSet do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.ResultSet.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.ResultSet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
