# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Spanner.V1.Model.ScanData do
  @moduledoc """
  ScanData contains Cloud Key Visualizer scan data used by the caller to construct a visualization.

  ## Attributes

  *   `data` (*type:* `GoogleApi.Spanner.V1.Model.VisualizationData.t`, *default:* `nil`) - Cloud Key Visualizer scan data. The range of time this information covers is captured via the above time range fields. Note, this field is not available to the ListScans method.
  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - The upper bound for when the contained data is defined.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - A range of time (inclusive) for when the contained data is defined. The lower bound for when the contained data is defined.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :data => GoogleApi.Spanner.V1.Model.VisualizationData.t() | nil,
          :endTime => DateTime.t() | nil,
          :startTime => DateTime.t() | nil
        }

  field(:data, as: GoogleApi.Spanner.V1.Model.VisualizationData)
  field(:endTime, as: DateTime)
  field(:startTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.ScanData do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.ScanData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.ScanData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
