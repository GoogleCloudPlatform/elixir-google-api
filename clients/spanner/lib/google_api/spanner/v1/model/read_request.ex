# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Model.ReadRequest do
  @moduledoc """
  The request for Read and StreamingRead.

  ## Attributes

  - columns ([String.t]): The columns of table to be returned for each row matching this request. Defaults to: `null`.
  - index (String.t): If non-empty, the name of an index on table. This index is used instead of the table primary key when interpreting key_set and sorting result rows. See key_set for further information. Defaults to: `null`.
  - keySet (KeySet): Required. &#x60;key_set&#x60; identifies the rows to be yielded. &#x60;key_set&#x60; names the primary keys of the rows in table to be yielded, unless index is present. If index is present, then key_set instead names index keys in index.  If the partition_token field is empty, rows are yielded in table primary key order (if index is empty) or index key order (if index is non-empty).  If the partition_token field is not empty, rows will be yielded in an unspecified order.  It is not an error for the &#x60;key_set&#x60; to name rows that do not exist in the database. Read yields nothing for nonexistent rows. Defaults to: `null`.
  - limit (String.t): If greater than zero, only the first &#x60;limit&#x60; rows are yielded. If &#x60;limit&#x60; is zero, the default is no limit. A limit cannot be specified if &#x60;partition_token&#x60; is set. Defaults to: `null`.
  - partitionToken (binary()): If present, results will be restricted to the specified partition previously created using PartitionRead().    There must be an exact match for the values of fields common to this message and the PartitionReadRequest message used to create this partition_token. Defaults to: `null`.
  - resumeToken (binary()): If this request is resuming a previously interrupted read, &#x60;resume_token&#x60; should be copied from the last PartialResultSet yielded before the interruption. Doing this enables the new read to resume where the last read left off. The rest of the request parameters must exactly match the request that yielded this token. Defaults to: `null`.
  - table (String.t): Required. The name of the table in the database to be read. Defaults to: `null`.
  - transaction (TransactionSelector): The transaction to use. If none is provided, the default is a temporary read-only transaction with strong concurrency. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columns => list(any()),
          :index => any(),
          :keySet => GoogleApi.Spanner.V1.Model.KeySet.t(),
          :limit => any(),
          :partitionToken => any(),
          :resumeToken => any(),
          :table => any(),
          :transaction => GoogleApi.Spanner.V1.Model.TransactionSelector.t()
        }

  field(:columns, type: :list)
  field(:index)
  field(:keySet, as: GoogleApi.Spanner.V1.Model.KeySet)
  field(:limit)
  field(:partitionToken)
  field(:resumeToken)
  field(:table)
  field(:transaction, as: GoogleApi.Spanner.V1.Model.TransactionSelector)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.ReadRequest do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.ReadRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.ReadRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
