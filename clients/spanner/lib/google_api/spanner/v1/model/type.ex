# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Model.Type do
  @moduledoc """
  &#x60;Type&#x60; indicates the type of a Cloud Spanner value, as might be stored in a table cell or returned from an SQL query.

  ## Attributes

  - arrayElementType (Type): If code &#x3D;&#x3D; ARRAY, then &#x60;array_element_type&#x60; is the type of the array elements. Defaults to: `null`.
  - code (String): Required. The TypeCode for this type. Defaults to: `null`.
    - Enum - one of [TYPE_CODE_UNSPECIFIED, BOOL, INT64, FLOAT64, TIMESTAMP, DATE, STRING, BYTES, ARRAY, STRUCT]
  - structType (StructType): If code &#x3D;&#x3D; STRUCT, then &#x60;struct_type&#x60; provides type information for the struct&#39;s fields. Defaults to: `null`.
  """

  defstruct [
    :"arrayElementType",
    :"code",
    :"structType"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.Type do
  import GoogleApi.Spanner.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"arrayElementType", :struct, GoogleApi.Spanner.V1.Model.Type, options)
    |> deserialize(:"structType", :struct, GoogleApi.Spanner.V1.Model.StructType, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.Type do
  def encode(value, options) do
    GoogleApi.Spanner.V1.Deserializer.serialize_non_nil(value, options)
  end
end

