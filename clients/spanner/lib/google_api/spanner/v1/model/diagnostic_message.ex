# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Spanner.V1.Model.DiagnosticMessage do
  @moduledoc """
  A message representing the key visualizer diagnostic messages.

  ## Attributes

  *   `info` (*type:* `GoogleApi.Spanner.V1.Model.LocalizedString.t`, *default:* `nil`) - Information about this diagnostic information.
  *   `metric` (*type:* `GoogleApi.Spanner.V1.Model.LocalizedString.t`, *default:* `nil`) - The metric.
  *   `metricSpecific` (*type:* `boolean()`, *default:* `nil`) - Whether this message is specific only for the current metric. By default Diagnostics are shown for all metrics, regardless which metric is the currently selected metric in the UI. However occasionally a metric will generate so many messages that the resulting visual clutter becomes overwhelming. In this case setting this to true, will show the diagnostic messages for that metric only if it is the currently selected metric.
  *   `severity` (*type:* `String.t`, *default:* `nil`) - The severity of the diagnostic message.
  *   `shortMessage` (*type:* `GoogleApi.Spanner.V1.Model.LocalizedString.t`, *default:* `nil`) - The short message.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :info => GoogleApi.Spanner.V1.Model.LocalizedString.t() | nil,
          :metric => GoogleApi.Spanner.V1.Model.LocalizedString.t() | nil,
          :metricSpecific => boolean() | nil,
          :severity => String.t() | nil,
          :shortMessage => GoogleApi.Spanner.V1.Model.LocalizedString.t() | nil
        }

  field(:info, as: GoogleApi.Spanner.V1.Model.LocalizedString)
  field(:metric, as: GoogleApi.Spanner.V1.Model.LocalizedString)
  field(:metricSpecific)
  field(:severity)
  field(:shortMessage, as: GoogleApi.Spanner.V1.Model.LocalizedString)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.DiagnosticMessage do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.DiagnosticMessage.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.DiagnosticMessage do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
