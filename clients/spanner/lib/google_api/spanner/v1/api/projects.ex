# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.Spanner.V1.Connection
  import GoogleApi.Spanner.V1.RequestBuilder


  @doc """
  Lists the supported instance configurations for a given project.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - parent (String): Required. The name of the project for which a list of supported instance configurations is requested. Values are of the form &#x60;projects/&lt;project&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :page_token (String): If non-empty, &#x60;page_token&#x60; should contain a next_page_token from a previous ListInstanceConfigsResponse.
    - :page_size (Integer): Number of instance configurations to be returned in the response. If 0 or less, defaults to the server&#39;s maximum allowed page size.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.ListInstanceConfigsResponse{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instance_configs_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.ListInstanceConfigsResponse.t} | {:error, Tesla.Env.t}
  def spanner_projects_instance_configs_list(connection, parent, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{parent}/instanceConfigs")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.ListInstanceConfigsResponse{})
  end

  @doc """
  Creates an instance and begins preparing it to begin serving. The returned long-running operation can be used to track the progress of preparing the new instance. The instance name is assigned by the caller. If the named instance already exists, &#x60;CreateInstance&#x60; returns &#x60;ALREADY_EXISTS&#x60;.  Immediately upon completion of this request:    * The instance is readable via the API, with all requested attributes     but no allocated resources. Its state is &#x60;CREATING&#x60;.  Until completion of the returned operation:    * Cancelling the operation renders the instance immediately unreadable     via the API.   * The instance can be deleted.   * All other attempts to modify the instance are rejected.  Upon completion of the returned operation:    * Billing for all successfully-allocated resources begins (some types     may have lower than the requested levels).   * Databases can be created in the instance.   * The instance&#39;s allocated resource levels are readable via the API.   * The instance&#39;s state becomes &#x60;READY&#x60;.  The returned long-running operation will have a name of the format &#x60;&lt;instance_name&gt;/operations/&lt;operation_id&gt;&#x60; and can be used to track creation of the instance.  The metadata field type is CreateInstanceMetadata. The response field type is Instance, if successful.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - parent (String): Required. The name of the project in which to create the instance. Values are of the form &#x60;projects/&lt;project&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (CreateInstanceRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_create(connection, parent, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{parent}/instances")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Operation{})
  end

  @doc """
  Creates a new Cloud Spanner database and starts to prepare it for serving. The returned long-running operation will have a name of the format &#x60;&lt;database_name&gt;/operations/&lt;operation_id&gt;&#x60; and can be used to track preparation of the database. The metadata field type is CreateDatabaseMetadata. The response field type is Database, if successful.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - parent (String): Required. The name of the instance that will serve the new database. Values are of the form &#x60;projects/&lt;project&gt;/instances/&lt;instance&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (CreateDatabaseRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_create(connection, parent, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{parent}/databases")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Operation{})
  end

  @doc """
  Drops (aka deletes) a Cloud Spanner database.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - database (String): Required. The database to be dropped.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_drop_database(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_drop_database(connection, database, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/#{database}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Empty{})
  end

  @doc """
  Returns the schema of a Cloud Spanner database as a list of formatted DDL statements. This method does not show pending schema updates, those may be queried using the Operations API.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - database (String): Required. The database whose schema we wish to get.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.GetDatabaseDdlResponse{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_get_ddl(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.GetDatabaseDdlResponse.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_get_ddl(connection, database, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{database}/ddl")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.GetDatabaseDdlResponse{})
  end

  @doc """
  Gets the access control policy for a database resource. Returns an empty policy if a database exists but does not have a policy set.  Authorization requires &#x60;spanner.databases.getIamPolicy&#x60; permission on resource.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - resource (String): REQUIRED: The Cloud Spanner resource for which the policy is being retrieved. The format is &#x60;projects/&lt;project ID&gt;/instances/&lt;instance ID&gt;&#x60; for instance resources and &#x60;projects/&lt;project ID&gt;/instances/&lt;instance ID&gt;/databases/&lt;database ID&gt;&#x60; for database resources.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (GetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_get_iam_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Policy.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_get_iam_policy(connection, resource, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{resource}:getIamPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Policy{})
  end

  @doc """
  Lists Cloud Spanner databases.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - parent (String): Required. The instance whose databases should be listed. Values are of the form &#x60;projects/&lt;project&gt;/instances/&lt;instance&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :page_token (String): If non-empty, &#x60;page_token&#x60; should contain a next_page_token from a previous ListDatabasesResponse.
    - :page_size (Integer): Number of databases to be returned in the response. If 0 or less, defaults to the server&#39;s maximum allowed page size.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.ListDatabasesResponse{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.ListDatabasesResponse.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_list(connection, parent, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{parent}/databases")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.ListDatabasesResponse{})
  end

  @doc """
  Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to cancel the operation, but success is not guaranteed.  If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;.  Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to &#x60;Code.CANCELLED&#x60;.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - name (String): The name of the operation resource to be cancelled.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_operations_cancel(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_operations_cancel(connection, name, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query
    }
    %{}
    |> method(:post)
    |> url("/v1/#{name}:cancel")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Empty{})
  end

  @doc """
  Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - name (String): The name of the operation resource to be deleted.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_operations_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_operations_delete(connection, name, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/#{name}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Empty{})
  end

  @doc """
  Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns &#x60;UNIMPLEMENTED&#x60;.  NOTE: the &#x60;name&#x60; binding allows API services to override the binding to use different resource name schemes, such as &#x60;users/*/operations&#x60;. To override the binding, API services can add a binding such as &#x60;\&quot;/v1/{name&#x3D;users/*}/operations\&quot;&#x60; to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - name (String): The name of the operation&#39;s parent resource.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :filter (String): The standard list filter.
    - :page_token (String): The standard list page token.
    - :page_size (Integer): The standard list page size.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.ListOperationsResponse{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_operations_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.ListOperationsResponse.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_operations_list(connection, name, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"filter" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{name}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.ListOperationsResponse{})
  end

  @doc """
  Begins a new transaction. This step can often be skipped: Read, ExecuteSql and Commit can begin a new transaction as a side-effect.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - session (String): Required. The session in which the transaction runs.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (BeginTransactionRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Transaction{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_begin_transaction(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Transaction.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_begin_transaction(connection, session, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{session}:beginTransaction")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Transaction{})
  end

  @doc """
  Commits a transaction. The request includes the mutations to be applied to rows in the database.  &#x60;Commit&#x60; might return an &#x60;ABORTED&#x60; error. This can occur at any time; commonly, the cause is conflicts with concurrent transactions. However, it can also happen for a variety of other reasons. If &#x60;Commit&#x60; returns &#x60;ABORTED&#x60;, the caller should re-attempt the transaction from the beginning, re-using the same session.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - session (String): Required. The session in which the transaction to be committed is running.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (CommitRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.CommitResponse{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_commit(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.CommitResponse.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_commit(connection, session, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{session}:commit")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.CommitResponse{})
  end

  @doc """
  Creates a new session. A session can be used to perform transactions that read and/or modify data in a Cloud Spanner database. Sessions are meant to be reused for many consecutive transactions.  Sessions can only execute one transaction at a time. To execute multiple concurrent read-write/write-only transactions, create multiple sessions. Note that standalone reads and queries use a transaction internally, and count toward the one transaction limit.  Cloud Spanner limits the number of sessions that can exist at any given time; thus, it is a good idea to delete idle and/or unneeded sessions. Aside from explicit deletes, Cloud Spanner can delete sessions for which no operations are sent for more than an hour. If a session is deleted, requests to it return &#x60;NOT_FOUND&#x60;.  Idle sessions can be kept alive by sending a trivial SQL query periodically, e.g., &#x60;\&quot;SELECT 1\&quot;&#x60;.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - database (String): Required. The database in which the new session is created.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Session{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Session.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_create(connection, database, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query
    }
    %{}
    |> method(:post)
    |> url("/v1/#{database}/sessions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Session{})
  end

  @doc """
  Executes an SQL query, returning all rows in a single reply. This method cannot be used to return a result set larger than 10 MiB; if the query yields more data than that, the query fails with a &#x60;FAILED_PRECONDITION&#x60; error.  Queries inside read-write transactions might return &#x60;ABORTED&#x60;. If this occurs, the application should restart the transaction from the beginning. See Transaction for more details.  Larger result sets can be fetched in streaming fashion by calling ExecuteStreamingSql instead.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - session (String): Required. The session in which the SQL query should be performed.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (ExecuteSqlRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.ResultSet{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_execute_sql(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.ResultSet.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_execute_sql(connection, session, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{session}:executeSql")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.ResultSet{})
  end

  @doc """
  Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, there is no limit on the size of the returned result set. However, no individual row in the result set can exceed 100 MiB, and no column value can exceed 10 MiB.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - session (String): Required. The session in which the SQL query should be performed.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (ExecuteSqlRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.PartialResultSet{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_execute_streaming_sql(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.PartialResultSet.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_execute_streaming_sql(connection, session, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{session}:executeStreamingSql")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.PartialResultSet{})
  end

  @doc """
  Reads rows from the database using key lookups and scans, as a simple key/value style alternative to ExecuteSql.  This method cannot be used to return a result set larger than 10 MiB; if the read matches more data than that, the read fails with a &#x60;FAILED_PRECONDITION&#x60; error.  Reads inside read-write transactions might return &#x60;ABORTED&#x60;. If this occurs, the application should restart the transaction from the beginning. See Transaction for more details.  Larger result sets can be yielded in streaming fashion by calling StreamingRead instead.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - session (String): Required. The session in which the read should be performed.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (ReadRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.ResultSet{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_read(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.ResultSet.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_read(connection, session, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{session}:read")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.ResultSet{})
  end

  @doc """
  Rolls back a transaction, releasing any locks it holds. It is a good idea to call this for any transaction that includes one or more Read or ExecuteSql requests and ultimately decides not to commit.  &#x60;Rollback&#x60; returns &#x60;OK&#x60; if it successfully aborts the transaction, the transaction was already aborted, or the transaction is not found. &#x60;Rollback&#x60; never returns &#x60;ABORTED&#x60;.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - session (String): Required. The session in which the transaction to roll back is running.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (RollbackRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_rollback(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_rollback(connection, session, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{session}:rollback")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Empty{})
  end

  @doc """
  Like Read, except returns the result set as a stream. Unlike Read, there is no limit on the size of the returned result set. However, no individual row in the result set can exceed 100 MiB, and no column value can exceed 10 MiB.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - session (String): Required. The session in which the read should be performed.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (ReadRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.PartialResultSet{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_sessions_streaming_read(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.PartialResultSet.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_sessions_streaming_read(connection, session, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{session}:streamingRead")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.PartialResultSet{})
  end

  @doc """
  Sets the access control policy on a database resource. Replaces any existing policy.  Authorization requires &#x60;spanner.databases.setIamPolicy&#x60; permission on resource.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - resource (String): REQUIRED: The Cloud Spanner resource for which the policy is being set. The format is &#x60;projects/&lt;project ID&gt;/instances/&lt;instance ID&gt;&#x60; for instance resources and &#x60;projects/&lt;project ID&gt;/instances/&lt;instance ID&gt;/databases/&lt;database ID&gt;&#x60; for databases resources.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (SetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_set_iam_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Policy.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_set_iam_policy(connection, resource, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{resource}:setIamPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Policy{})
  end

  @doc """
  Returns permissions that the caller has on the specified database resource.  Attempting this RPC on a non-existent Cloud Spanner database will result in a NOT_FOUND error if the user has &#x60;spanner.databases.list&#x60; permission on the containing Cloud Spanner instance. Otherwise returns an empty set of permissions.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - resource (String): REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is &#x60;projects/&lt;project ID&gt;/instances/&lt;instance ID&gt;&#x60; for instance resources and &#x60;projects/&lt;project ID&gt;/instances/&lt;instance ID&gt;/databases/&lt;database ID&gt;&#x60; for database resources.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (TestIamPermissionsRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.TestIamPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_test_iam_permissions(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.TestIamPermissionsResponse.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_test_iam_permissions(connection, resource, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{resource}:testIamPermissions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.TestIamPermissionsResponse{})
  end

  @doc """
  Updates the schema of a Cloud Spanner database by creating/altering/dropping tables, columns, indexes, etc. The returned long-running operation will have a name of the format &#x60;&lt;database_name&gt;/operations/&lt;operation_id&gt;&#x60; and can be used to track execution of the schema change(s). The metadata field type is UpdateDatabaseDdlMetadata.  The operation has no response.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - database (String): Required. The database to update.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (UpdateDatabaseDdlRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_databases_update_ddl(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_databases_update_ddl(connection, database, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/#{database}/ddl")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Operation{})
  end

  @doc """
  Lists all instances in the given project.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - parent (String): Required. The name of the project for which a list of instances is requested. Values are of the form &#x60;projects/&lt;project&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :filter (String): An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are:    * name   * display_name   * labels.key where key is the name of a label  Some examples of using filters are:    * name:* --&gt; The instance has a name.   * name:Howl --&gt; The instance&#39;s name contains the string \&quot;howl\&quot;.   * name:HOWL --&gt; Equivalent to above.   * NAME:howl --&gt; Equivalent to above.   * labels.env:* --&gt; The instance has the label \&quot;env\&quot;.   * labels.env:dev --&gt; The instance has the label \&quot;env\&quot; and the value of                        the label contains the string \&quot;dev\&quot;.   * name:howl labels.env:dev --&gt; The instance&#39;s name contains \&quot;howl\&quot; and                                  it has the label \&quot;env\&quot; with its value                                  containing \&quot;dev\&quot;.
    - :page_token (String): If non-empty, &#x60;page_token&#x60; should contain a next_page_token from a previous ListInstancesResponse.
    - :page_size (Integer): Number of instances to be returned in the response. If 0 or less, defaults to the server&#39;s maximum allowed page size.

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.ListInstancesResponse{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.ListInstancesResponse.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_list(connection, parent, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"filter" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{parent}/instances")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.ListInstancesResponse{})
  end

  @doc """
  Updates an instance, and begins allocating or releasing resources as requested. The returned long-running operation can be used to track the progress of updating the instance. If the named instance does not exist, returns &#x60;NOT_FOUND&#x60;.  Immediately upon completion of this request:    * For resource types for which a decrease in the instance&#39;s allocation     has been requested, billing is based on the newly-requested level.  Until completion of the returned operation:    * Cancelling the operation sets its metadata&#39;s     cancel_time, and begins     restoring resources to their pre-request values. The operation     is guaranteed to succeed at undoing all resource changes,     after which point it terminates with a &#x60;CANCELLED&#x60; status.   * All other attempts to modify the instance are rejected.   * Reading the instance via the API continues to give the pre-request     resource levels.  Upon completion of the returned operation:    * Billing begins for all successfully-allocated resources (some types     may have lower than the requested levels).   * All newly-reserved resources are available for serving the instance&#39;s     tables.   * The instance&#39;s new resource levels are readable via the API.  The returned long-running operation will have a name of the format &#x60;&lt;instance_name&gt;/operations/&lt;operation_id&gt;&#x60; and can be used to track the instance modification.  The metadata field type is UpdateInstanceMetadata. The response field type is Instance, if successful.  Authorization requires &#x60;spanner.instances.update&#x60; permission on resource name.

  ## Parameters

  - connection (GoogleApi.Spanner.V1.Connection): Connection to server
  - name (String): Required. A unique identifier for the instance, which cannot be changed after the instance is created. Values are of the form &#x60;projects/&lt;project&gt;/instances/a-z*[a-z0-9]&#x60;. The final segment of the name must be between 6 and 30 characters in length.
  - opts (KeywordList): [optional] Optional parameters
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :body (UpdateInstanceRequest): 

  ## Returns

  {:ok, %GoogleApi.Spanner.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec spanner_projects_instances_patch(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Spanner.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def spanner_projects_instances_patch(connection, name, opts \\ []) do
    optional_params = %{
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/#{name}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Spanner.V1.Model.Operation{})
  end
end
