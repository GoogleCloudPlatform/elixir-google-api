# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Blogger.V3.Model.Comment do
  @moduledoc """


  ## Attributes

  - author (GoogleApi.Blogger.V3.Model.CommentAuthor.t): The author of this Comment. Defaults to `nil`.
  - blog (GoogleApi.Blogger.V3.Model.CommentBlog.t): Data about the blog containing this comment. Defaults to `nil`.
  - content (String.t): The actual content of the comment. May include HTML markup. Defaults to `nil`.
  - id (String.t): The identifier for this resource. Defaults to `nil`.
  - inReplyTo (GoogleApi.Blogger.V3.Model.CommentInReplyTo.t): Data about the comment this is in reply to. Defaults to `nil`.
  - kind (String.t): The kind of this entry. Always blogger#comment Defaults to `blogger#comment`.
  - post (GoogleApi.Blogger.V3.Model.CommentPost.t): Data about the post containing this comment. Defaults to `nil`.
  - published (DateTime.t): RFC 3339 date-time when this comment was published. Defaults to `nil`.
  - selfLink (String.t): The API REST URL to fetch this resource from. Defaults to `nil`.
  - status (String.t): The status of the comment (only populated for admin users) Defaults to `nil`.
  - updated (DateTime.t): RFC 3339 date-time when this comment was last updated. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :author => GoogleApi.Blogger.V3.Model.CommentAuthor.t(),
          :blog => GoogleApi.Blogger.V3.Model.CommentBlog.t(),
          :content => String.t(),
          :id => String.t(),
          :inReplyTo => GoogleApi.Blogger.V3.Model.CommentInReplyTo.t(),
          :kind => String.t(),
          :post => GoogleApi.Blogger.V3.Model.CommentPost.t(),
          :published => DateTime.t(),
          :selfLink => String.t(),
          :status => String.t(),
          :updated => DateTime.t()
        }

  field(:author, as: GoogleApi.Blogger.V3.Model.CommentAuthor)
  field(:blog, as: GoogleApi.Blogger.V3.Model.CommentBlog)
  field(:content)
  field(:id)
  field(:inReplyTo, as: GoogleApi.Blogger.V3.Model.CommentInReplyTo)
  field(:kind)
  field(:post, as: GoogleApi.Blogger.V3.Model.CommentPost)
  field(:published, as: DateTime)
  field(:selfLink)
  field(:status)
  field(:updated, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Blogger.V3.Model.Comment do
  def decode(value, options) do
    GoogleApi.Blogger.V3.Model.Comment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Blogger.V3.Model.Comment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
