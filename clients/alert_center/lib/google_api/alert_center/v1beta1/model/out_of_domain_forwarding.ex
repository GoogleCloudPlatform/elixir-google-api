# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AlertCenter.V1beta1.Model.OutOfDomainForwarding do
  @moduledoc """
  An alert that gets triggered when a user enables autoforwarding to an email which is outside of its domain

  ## Attributes

  *   `actorEmail` (*type:* `String.t`, *default:* `nil`) - Email of the actor who triggered the alert.
  *   `enableTime` (*type:* `DateTime.t`, *default:* `nil`) - The time the email forwarding was enabled
  *   `forwardeeEmail` (*type:* `String.t`, *default:* `nil`) - Email to which emails are being forwarded
  *   `ipAddress` (*type:* `String.t`, *default:* `nil`) - IP address of the user while enabling forwarding
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :actorEmail => String.t() | nil,
          :enableTime => DateTime.t() | nil,
          :forwardeeEmail => String.t() | nil,
          :ipAddress => String.t() | nil
        }

  field(:actorEmail)
  field(:enableTime, as: DateTime)
  field(:forwardeeEmail)
  field(:ipAddress)
end

defimpl Poison.Decoder, for: GoogleApi.AlertCenter.V1beta1.Model.OutOfDomainForwarding do
  def decode(value, options) do
    GoogleApi.AlertCenter.V1beta1.Model.OutOfDomainForwarding.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AlertCenter.V1beta1.Model.OutOfDomainForwarding do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
