# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudTrace.V2.Model.TimeEvent do
  @moduledoc """
  A time-stamped annotation or message event in the Span.

  ## Attributes

  - annotation (Annotation): Text annotation with a set of attributes. Defaults to: `null`.
  - messageEvent (MessageEvent): An event describing a message sent/received between Spans. Defaults to: `null`.
  - time (DateTime.t): The timestamp indicating the time the event occurred. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotation => GoogleApi.CloudTrace.V2.Model.Annotation.t(),
          :messageEvent => GoogleApi.CloudTrace.V2.Model.MessageEvent.t(),
          :time => DateTime.t()
        }

  field(:annotation, as: GoogleApi.CloudTrace.V2.Model.Annotation)
  field(:messageEvent, as: GoogleApi.CloudTrace.V2.Model.MessageEvent)
  field(:time, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.CloudTrace.V2.Model.TimeEvent do
  def decode(value, options) do
    GoogleApi.CloudTrace.V2.Model.TimeEvent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudTrace.V2.Model.TimeEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
