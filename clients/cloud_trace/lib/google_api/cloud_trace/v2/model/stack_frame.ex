# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudTrace.V2.Model.StackFrame do
  @moduledoc """
  Represents a single stack frame in a stack trace.

  ## Attributes

  - columnNumber (String.t): The column number where the function call appears, if available. This is important in JavaScript because of its anonymous functions. Defaults to: `null`.
  - fileName (TruncatableString): The name of the source file where the function call appears (up to 256 bytes). Defaults to: `null`.
  - functionName (TruncatableString): The fully-qualified name that uniquely identifies the function or method that is active in this frame (up to 1024 bytes). Defaults to: `null`.
  - lineNumber (String.t): The line number in &#x60;file_name&#x60; where the function call appears. Defaults to: `null`.
  - loadModule (Module): The binary module from where the code was loaded. Defaults to: `null`.
  - originalFunctionName (TruncatableString): An un-mangled function name, if &#x60;function_name&#x60; is [mangled](http://www.avabodh.com/cxxin/namemangling.html). The name can be fully-qualified (up to 1024 bytes). Defaults to: `null`.
  - sourceVersion (TruncatableString): The version of the deployed source code (up to 128 bytes). Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columnNumber => any(),
          :fileName => GoogleApi.CloudTrace.V2.Model.TruncatableString.t(),
          :functionName => GoogleApi.CloudTrace.V2.Model.TruncatableString.t(),
          :lineNumber => any(),
          :loadModule => GoogleApi.CloudTrace.V2.Model.Module.t(),
          :originalFunctionName => GoogleApi.CloudTrace.V2.Model.TruncatableString.t(),
          :sourceVersion => GoogleApi.CloudTrace.V2.Model.TruncatableString.t()
        }

  field(:columnNumber)
  field(:fileName, as: GoogleApi.CloudTrace.V2.Model.TruncatableString)
  field(:functionName, as: GoogleApi.CloudTrace.V2.Model.TruncatableString)
  field(:lineNumber)
  field(:loadModule, as: GoogleApi.CloudTrace.V2.Model.Module)
  field(:originalFunctionName, as: GoogleApi.CloudTrace.V2.Model.TruncatableString)
  field(:sourceVersion, as: GoogleApi.CloudTrace.V2.Model.TruncatableString)
end

defimpl Poison.Decoder, for: GoogleApi.CloudTrace.V2.Model.StackFrame do
  def decode(value, options) do
    GoogleApi.CloudTrace.V2.Model.StackFrame.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudTrace.V2.Model.StackFrame do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
