# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.SuggestRequest do
  @moduledoc """
  Request of suggest API.

  ## Attributes

  *   `dataSourceRestrictions` (*type:* `list(GoogleApi.CloudSearch.V1.Model.DataSourceRestriction.t)`, *default:* `nil`) - The sources to use for suggestions. If not specified, the data sources are taken from the current search application. NOTE: Suggestions are supported only for third party data sources and people (i.e. PredefinedSource.PERSON).
  *   `query` (*type:* `String.t`, *default:* `nil`) - Partial query for which autocomplete suggestions will be shown. For example, if the query is "sea", then the server might return "season", "search", "seagull" and so on.
  *   `requestOptions` (*type:* `GoogleApi.CloudSearch.V1.Model.RequestOptions.t`, *default:* `nil`) - Request options, such as the search application and user timezone.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataSourceRestrictions =>
            list(GoogleApi.CloudSearch.V1.Model.DataSourceRestriction.t()),
          :query => String.t(),
          :requestOptions => GoogleApi.CloudSearch.V1.Model.RequestOptions.t()
        }

  field(:dataSourceRestrictions,
    as: GoogleApi.CloudSearch.V1.Model.DataSourceRestriction,
    type: :list
  )

  field(:query)
  field(:requestOptions, as: GoogleApi.CloudSearch.V1.Model.RequestOptions)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.SuggestRequest do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.SuggestRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.SuggestRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
