# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.ItemContent do
  @moduledoc """
  Content of an item to be indexed and surfaced by Cloud Search. Only UTF-8 encoded strings are allowed as inlineContent. If the content is uploaded and not binary, it must be UTF-8 encoded.

  ## Attributes

  *   `contentDataRef` (*type:* `GoogleApi.CloudSearch.V1.Model.UploadItemRef.t`, *default:* `nil`) - Upload reference ID of a previously uploaded content via write method.
  *   `contentFormat` (*type:* `String.t`, *default:* `nil`) - 
  *   `hash` (*type:* `String.t`, *default:* `nil`) - Hashing info calculated and provided by the API client for content. Can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.
  *   `inlineContent` (*type:* `String.t`, *default:* `nil`) - Content that is supplied inlined within the update method. The maximum length is 102400 bytes (100 KiB).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contentDataRef => GoogleApi.CloudSearch.V1.Model.UploadItemRef.t() | nil,
          :contentFormat => String.t() | nil,
          :hash => String.t() | nil,
          :inlineContent => String.t() | nil
        }

  field(:contentDataRef, as: GoogleApi.CloudSearch.V1.Model.UploadItemRef)
  field(:contentFormat)
  field(:hash)
  field(:inlineContent)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.ItemContent do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.ItemContent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.ItemContent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
