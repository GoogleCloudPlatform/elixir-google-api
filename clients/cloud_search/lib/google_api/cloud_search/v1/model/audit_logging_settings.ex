# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.AuditLoggingSettings do
  @moduledoc """
  Represents the settings for Cloud audit logging

  ## Attributes

  *   `logAdminReadActions` (*type:* `boolean()`, *default:* `nil`) - Indicates whether audit logging is on/off for admin activity read APIs i.e. Get/List DataSources, Get/List SearchApplications etc.
  *   `logDataReadActions` (*type:* `boolean()`, *default:* `nil`) - Indicates whether audit logging is on/off for data access read APIs i.e. ListItems, GetItem etc.
  *   `logDataWriteActions` (*type:* `boolean()`, *default:* `nil`) - Indicates whether audit logging is on/off for data access write APIs i.e. IndexItem etc.
  *   `project` (*type:* `String.t`, *default:* `nil`) - The resource name of the GCP Project to store audit logs. Cloud audit logging will be enabled after project_name has been updated through CustomerService. Format: projects/{project_id}
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :logAdminReadActions => boolean() | nil,
          :logDataReadActions => boolean() | nil,
          :logDataWriteActions => boolean() | nil,
          :project => String.t() | nil
        }

  field(:logAdminReadActions)
  field(:logDataReadActions)
  field(:logDataWriteActions)
  field(:project)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.AuditLoggingSettings do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.AuditLoggingSettings.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.AuditLoggingSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
