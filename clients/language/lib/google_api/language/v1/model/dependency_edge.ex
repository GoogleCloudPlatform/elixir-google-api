# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Language.V1.Model.DependencyEdge do
  @moduledoc """
  Represents dependency parse tree information for a token. (For more information on dependency labels, see http://www.aclweb.org/anthology/P13-2017

  ## Attributes

  - headTokenIndex (integer()): Represents the head of this token in the dependency tree. This is the index of the token which has an arc going to this token. The index is the position of the token in the array of tokens returned by the API method. If this token is a root token, then the &#x60;head_token_index&#x60; is its own index. Defaults to: `null`.
  - label (String.t): The parse label for the token. Defaults to: `null`.
    - Enum - one of [UNKNOWN, ABBREV, ACOMP, ADVCL, ADVMOD, AMOD, APPOS, ATTR, AUX, AUXPASS, CC, CCOMP, CONJ, CSUBJ, CSUBJPASS, DEP, DET, DISCOURSE, DOBJ, EXPL, GOESWITH, IOBJ, MARK, MWE, MWV, NEG, NN, NPADVMOD, NSUBJ, NSUBJPASS, NUM, NUMBER, P, PARATAXIS, PARTMOD, PCOMP, POBJ, POSS, POSTNEG, PRECOMP, PRECONJ, PREDET, PREF, PREP, PRONL, PRT, PS, QUANTMOD, RCMOD, RCMODREL, RDROP, REF, REMNANT, REPARANDUM, ROOT, SNUM, SUFF, TMOD, TOPIC, VMOD, VOCATIVE, XCOMP, SUFFIX, TITLE, ADVPHMOD, AUXCAUS, AUXVV, DTMOD, FOREIGN, KW, LIST, NOMC, NOMCSUBJ, NOMCSUBJPASS, NUMC, COP, DISLOCATED, ASP, GMOD, GOBJ, INFMOD, MES, NCOMP]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :headTokenIndex => any(),
          :label => any()
        }

  field(:headTokenIndex)
  field(:label)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V1.Model.DependencyEdge do
  def decode(value, options) do
    GoogleApi.Language.V1.Model.DependencyEdge.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V1.Model.DependencyEdge do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
