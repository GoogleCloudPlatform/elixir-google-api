# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec do
  @moduledoc """
  Describes a Cloud Storage fileset entry.

  ## Attributes

  *   `filePatterns` (*type:* `list(String.t)`, *default:* `nil`) - Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud
      Storage documentation](storage/docs/gsutil/addlhelp/WildcardNames) for
      more information. Note that bucket wildcards are currently not supported.

      Examples of valid file_patterns:

       * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir`
                                   directory.
       * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir`
                                    spanning all subdirectories.
       * `gs://bucket_name/file*`: matches files prefixed by `file` in
                                   `bucket_name`
       * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match
                                   `a/*/b` pattern, such as `a/c/b`, `a/d/b`
       * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
  *   `sampleGcsFileSpecs` (*type:* `list(GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFileSpec.t)`, *default:* `nil`) - Output only. Sample files contained in this fileset, not all files contained in this
      fileset are represented here.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :filePatterns => list(String.t()),
          :sampleGcsFileSpecs =>
            list(GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFileSpec.t())
        }

  field(:filePatterns, type: :list)

  field(:sampleGcsFileSpecs,
    as: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFileSpec,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec do
  def decode(value, options) do
    GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
