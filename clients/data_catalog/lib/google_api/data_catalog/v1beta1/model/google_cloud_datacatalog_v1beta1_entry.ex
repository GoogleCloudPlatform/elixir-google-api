# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1Entry do
  @moduledoc """
  Entry Metadata. 
  A Data Catalog Entry resource represents another resource in Google
  Cloud Platform, such as a BigQuery dataset or a Cloud Pub/Sub topic.
  Clients can use the `linked_resource` field in the Entry resource to refer to
  the original resource ID of the source system.

  An Entry resource contains resource details, such as its schema. An Entry can
  also be used to attach flexible metadata, such as a
  Tag.

  ## Attributes

  *   `bigqueryDateShardedSpec` (*type:* `GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.t`, *default:* `nil`) - Specification for a group of BigQuery tables with name pattern
      `[prefix]YYYYMMDD`. Context:
      https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
  *   `bigqueryTableSpec` (*type:* `GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1BigQueryTableSpec.t`, *default:* `nil`) - Specification that applies to a BigQuery table. This is only valid on
      entries of type `TABLE`.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Entry description, which can consist of several sentences or paragraphs
      that describe entry contents. Default value is an empty string.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Display information such as title and description. A short name to identify
      the entry, for example, "Analytics Data - Jan 2011". Default value is an
      empty string.
  *   `gcsFilesetSpec` (*type:* `GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec.t`, *default:* `nil`) - Specification that applies to a Cloud Storage fileset. This is only valid
      on entries of type FILESET.
  *   `linkedResource` (*type:* `String.t`, *default:* `nil`) - Output only. The resource this metadata entry refers to.

      For Google Cloud Platform resources, `linked_resource` is the [full name of
      the
      resource](https://cloud.google.com/apis/design/resource_names#full_resource_name).
      For example, the `linked_resource` for a table resource from BigQuery is:

      * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
  *   `name` (*type:* `String.t`, *default:* `nil`) - The Data Catalog resource name of the entry in URL format. Example:

      * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}

      Note that this Entry and its child resources may not actually be stored in
      the location in this name.
  *   `schema` (*type:* `GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1Schema.t`, *default:* `nil`) - Schema of the entry. An entry might not have any schema attached to it.
  *   `sourceSystemTimestamps` (*type:* `GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1SystemTimestamps.t`, *default:* `nil`) - Output only. Timestamps about the underlying Google Cloud Platform
      resource, not about this Data Catalog Entry.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of the entry.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bigqueryDateShardedSpec =>
            GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.t(),
          :bigqueryTableSpec =>
            GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1BigQueryTableSpec.t(),
          :description => String.t(),
          :displayName => String.t(),
          :gcsFilesetSpec =>
            GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec.t(),
          :linkedResource => String.t(),
          :name => String.t(),
          :schema => GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1Schema.t(),
          :sourceSystemTimestamps =>
            GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1SystemTimestamps.t(),
          :type => String.t()
        }

  field(:bigqueryDateShardedSpec,
    as: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec
  )

  field(:bigqueryTableSpec,
    as: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1BigQueryTableSpec
  )

  field(:description)
  field(:displayName)

  field(:gcsFilesetSpec,
    as: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec
  )

  field(:linkedResource)
  field(:name)
  field(:schema, as: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1Schema)

  field(:sourceSystemTimestamps,
    as: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1SystemTimestamps
  )

  field(:type)
end

defimpl Poison.Decoder,
  for: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1Entry do
  def decode(value, options) do
    GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1Entry.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DataCatalog.V1beta1.Model.GoogleCloudDatacatalogV1beta1Entry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
