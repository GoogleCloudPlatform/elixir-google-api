# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Testing.V1.Model.TestMatrix do
  @moduledoc """
  TestMatrix captures all details about a test. It contains the environment
  configuration, test specification, test executions and overall state and
  outcome.

  ## Attributes

  - clientInfo (GoogleApi.Testing.V1.Model.ClientInfo.t): Information about the client which invoked the test. Defaults to `nil`.
  - environmentMatrix (GoogleApi.Testing.V1.Model.EnvironmentMatrix.t): Required. The devices the tests are being executed on. Defaults to `nil`.
  - flakyTestAttempts (integer()): The number of times a TestExecution should be re-attempted if one or more
  of its test cases fail for any reason.
  The maximum number of reruns allowed is 10.

  Default is 0, which implies no reruns. Defaults to `nil`.
  - invalidMatrixDetails (String.t): Output only. Describes why the matrix is considered invalid.
  Only useful for matrices in the INVALID state. Defaults to `nil`.
  - outcomeSummary (String.t): Output Only. The overall outcome of the test.
  Only set when the test matrix state is FINISHED. Defaults to `nil`.
  - projectId (String.t): The cloud project that owns the test matrix. Defaults to `nil`.
  - resultStorage (GoogleApi.Testing.V1.Model.ResultStorage.t): Required. Where the results for the matrix are written. Defaults to `nil`.
  - state (String.t): Output only. Indicates the current progress of the test matrix. Defaults to `nil`.
  - testExecutions (list(GoogleApi.Testing.V1.Model.TestExecution.t)): Output only. The list of test executions that the service creates for
  this matrix. Defaults to `nil`.
  - testMatrixId (String.t): Output only. Unique id set by the service. Defaults to `nil`.
  - testSpecification (GoogleApi.Testing.V1.Model.TestSpecification.t): Required. How to run the test. Defaults to `nil`.
  - timestamp (DateTime.t): Output only. The time this test matrix was initially created. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clientInfo => GoogleApi.Testing.V1.Model.ClientInfo.t(),
          :environmentMatrix => GoogleApi.Testing.V1.Model.EnvironmentMatrix.t(),
          :flakyTestAttempts => integer(),
          :invalidMatrixDetails => String.t(),
          :outcomeSummary => String.t(),
          :projectId => String.t(),
          :resultStorage => GoogleApi.Testing.V1.Model.ResultStorage.t(),
          :state => String.t(),
          :testExecutions => list(GoogleApi.Testing.V1.Model.TestExecution.t()),
          :testMatrixId => String.t(),
          :testSpecification => GoogleApi.Testing.V1.Model.TestSpecification.t(),
          :timestamp => DateTime.t()
        }

  field(:clientInfo, as: GoogleApi.Testing.V1.Model.ClientInfo)
  field(:environmentMatrix, as: GoogleApi.Testing.V1.Model.EnvironmentMatrix)
  field(:flakyTestAttempts)
  field(:invalidMatrixDetails)
  field(:outcomeSummary)
  field(:projectId)
  field(:resultStorage, as: GoogleApi.Testing.V1.Model.ResultStorage)
  field(:state)
  field(:testExecutions, as: GoogleApi.Testing.V1.Model.TestExecution, type: :list)
  field(:testMatrixId)
  field(:testSpecification, as: GoogleApi.Testing.V1.Model.TestSpecification)
  field(:timestamp, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Testing.V1.Model.TestMatrix do
  def decode(value, options) do
    GoogleApi.Testing.V1.Model.TestMatrix.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Testing.V1.Model.TestMatrix do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
