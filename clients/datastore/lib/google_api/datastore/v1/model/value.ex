# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Datastore.V1.Model.Value do
  @moduledoc """
  A message that can hold any of the supported value types and associated metadata.

  ## Attributes

  - arrayValue (ArrayValue): An array value. Cannot contain another array value. A &#x60;Value&#x60; instance that sets field &#x60;array_value&#x60; must not set fields &#x60;meaning&#x60; or &#x60;exclude_from_indexes&#x60;. Defaults to: `null`.
  - blobValue (binary()): A blob value. May have at most 1,000,000 bytes. When &#x60;exclude_from_indexes&#x60; is false, may have at most 1500 bytes. In JSON requests, must be base64-encoded. Defaults to: `null`.
  - booleanValue (boolean()): A boolean value. Defaults to: `null`.
  - doubleValue (float()): A double value. Defaults to: `null`.
  - entityValue (Entity): An entity value.  - May have no key. - May have a key with an incomplete key path. - May have a reserved/read-only key. Defaults to: `null`.
  - excludeFromIndexes (boolean()): If the value should be excluded from all indexes including those defined explicitly. Defaults to: `null`.
  - geoPointValue (LatLng): A geo point value representing a point on the surface of Earth. Defaults to: `null`.
  - integerValue (String.t): An integer value. Defaults to: `null`.
  - keyValue (Key): A key value. Defaults to: `null`.
  - meaning (integer()): The &#x60;meaning&#x60; field should only be populated for backwards compatibility. Defaults to: `null`.
  - nullValue (String.t): A null value. Defaults to: `null`.
    - Enum - one of [NULL_VALUE]
  - stringValue (String.t): A UTF-8 encoded string value. When &#x60;exclude_from_indexes&#x60; is false (it is indexed) , may have at most 1500 bytes. Otherwise, may be set to at least 1,000,000 bytes. Defaults to: `null`.
  - timestampValue (DateTime.t): A timestamp value. When stored in the Datastore, precise only to microseconds; any additional precision is rounded down. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :arrayValue => GoogleApi.Datastore.V1.Model.ArrayValue.t(),
          :blobValue => any(),
          :booleanValue => any(),
          :doubleValue => any(),
          :entityValue => GoogleApi.Datastore.V1.Model.Entity.t(),
          :excludeFromIndexes => any(),
          :geoPointValue => GoogleApi.Datastore.V1.Model.LatLng.t(),
          :integerValue => any(),
          :keyValue => GoogleApi.Datastore.V1.Model.Key.t(),
          :meaning => any(),
          :nullValue => any(),
          :stringValue => any(),
          :timestampValue => DateTime.t()
        }

  field(:arrayValue, as: GoogleApi.Datastore.V1.Model.ArrayValue)
  field(:blobValue)
  field(:booleanValue)
  field(:doubleValue)
  field(:entityValue, as: GoogleApi.Datastore.V1.Model.Entity)
  field(:excludeFromIndexes)
  field(:geoPointValue, as: GoogleApi.Datastore.V1.Model.LatLng)
  field(:integerValue)
  field(:keyValue, as: GoogleApi.Datastore.V1.Model.Key)
  field(:meaning)
  field(:nullValue)
  field(:stringValue)
  field(:timestampValue, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Datastore.V1.Model.Value do
  def decode(value, options) do
    GoogleApi.Datastore.V1.Model.Value.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastore.V1.Model.Value do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
