# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Datastore.V1.Model.MutationResult do
  @moduledoc """
  The result of applying a mutation.

  ## Attributes

  - conflictDetected (Boolean): Whether a conflict was detected for this mutation. Always false when a conflict detection strategy field is not set in the mutation. Defaults to: `null`.
  - key (Key): The automatically allocated key. Set only when the mutation allocated a key. Defaults to: `null`.
  - version (String): The version of the entity on the server after processing the mutation. If the mutation doesn&#39;t change anything on the server, then the version will be the version of the current entity or, if no entity is present, a version that is strictly greater than the version of any previous entity and less than the version of any possible future entity. Defaults to: `null`.
  """

  defstruct [
    :"conflictDetected",
    :"key",
    :"version"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Datastore.V1.Model.MutationResult do
  import GoogleApi.Datastore.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"key", :struct, GoogleApi.Datastore.V1.Model.Key, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastore.V1.Model.MutationResult do
  def encode(value, options) do
    GoogleApi.Datastore.V1.Deserializer.serialize_non_nil(value, options)
  end
end

