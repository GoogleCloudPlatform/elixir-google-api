# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PubSubLite.V1.Model.ComputeMessageStatsResponse do
  @moduledoc """
  Response containing stats for messages in the requested topic and partition.

  ## Attributes

  *   `messageBytes` (*type:* `String.t`, *default:* `nil`) - The number of quota bytes accounted to these messages.
  *   `messageCount` (*type:* `String.t`, *default:* `nil`) - The count of messages.
  *   `minimumEventTime` (*type:* `DateTime.t`, *default:* `nil`) - The minimum event timestamp across these messages. For the purposes of this computation, if a message does not have an event time, we use the publish time. The timestamp will be unset if there are no messages.
  *   `minimumPublishTime` (*type:* `DateTime.t`, *default:* `nil`) - The minimum publish timestamp across these messages. Note that publish timestamps within a partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no messages.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :messageBytes => String.t() | nil,
          :messageCount => String.t() | nil,
          :minimumEventTime => DateTime.t() | nil,
          :minimumPublishTime => DateTime.t() | nil
        }

  field(:messageBytes)
  field(:messageCount)
  field(:minimumEventTime, as: DateTime)
  field(:minimumPublishTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.PubSubLite.V1.Model.ComputeMessageStatsResponse do
  def decode(value, options) do
    GoogleApi.PubSubLite.V1.Model.ComputeMessageStatsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PubSubLite.V1.Model.ComputeMessageStatsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
