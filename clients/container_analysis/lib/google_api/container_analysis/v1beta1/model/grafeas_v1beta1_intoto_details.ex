# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContainerAnalysis.V1beta1.Model.GrafeasV1beta1IntotoDetails do
  @moduledoc """
  This corresponds to a signed in-toto link - it is made up of one or more signatures and the in-toto link itself. This is used for occurrences of a Grafeas in-toto note.

  ## Attributes

  *   `signatures` (*type:* `list(GoogleApi.ContainerAnalysis.V1beta1.Model.GrafeasV1beta1IntotoSignature.t)`, *default:* `nil`) - 
  *   `signed` (*type:* `GoogleApi.ContainerAnalysis.V1beta1.Model.Link.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :signatures =>
            list(GoogleApi.ContainerAnalysis.V1beta1.Model.GrafeasV1beta1IntotoSignature.t()),
          :signed => GoogleApi.ContainerAnalysis.V1beta1.Model.Link.t()
        }

  field(:signatures,
    as: GoogleApi.ContainerAnalysis.V1beta1.Model.GrafeasV1beta1IntotoSignature,
    type: :list
  )

  field(:signed, as: GoogleApi.ContainerAnalysis.V1beta1.Model.Link)
end

defimpl Poison.Decoder, for: GoogleApi.ContainerAnalysis.V1beta1.Model.GrafeasV1beta1IntotoDetails do
  def decode(value, options) do
    GoogleApi.ContainerAnalysis.V1beta1.Model.GrafeasV1beta1IntotoDetails.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContainerAnalysis.V1beta1.Model.GrafeasV1beta1IntotoDetails do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
