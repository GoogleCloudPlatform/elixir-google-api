# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PrivateCA.V1beta1.Model.ReusableConfig do
  @moduledoc """
  A ReusableConfig refers to a managed ReusableConfigValues. Those, in turn, are used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which this ReusableConfig was created.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. A human-readable description of scenarios these ReusableConfigValues may be compatible with.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. Labels with user-defined metadata.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The resource path for this ReusableConfig in the format `projects/*/locations/*/reusableConfigs/*`.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which this ReusableConfig was updated.
  *   `values` (*type:* `GoogleApi.PrivateCA.V1beta1.Model.ReusableConfigValues.t`, *default:* `nil`) - Required. The config values.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t(),
          :description => String.t(),
          :labels => map(),
          :name => String.t(),
          :updateTime => DateTime.t(),
          :values => GoogleApi.PrivateCA.V1beta1.Model.ReusableConfigValues.t()
        }

  field(:createTime, as: DateTime)
  field(:description)
  field(:labels, type: :map)
  field(:name)
  field(:updateTime, as: DateTime)
  field(:values, as: GoogleApi.PrivateCA.V1beta1.Model.ReusableConfigValues)
end

defimpl Poison.Decoder, for: GoogleApi.PrivateCA.V1beta1.Model.ReusableConfig do
  def decode(value, options) do
    GoogleApi.PrivateCA.V1beta1.Model.ReusableConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PrivateCA.V1beta1.Model.ReusableConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
