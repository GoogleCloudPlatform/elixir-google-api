# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.StorageTransfer.V1.Api.TransferJobs do
  @moduledoc """
  API calls for all endpoints tagged `TransferJobs`.
  """

  alias GoogleApi.StorageTransfer.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Creates a transfer job that runs periodically.

  ## Parameters

  - connection (GoogleApi.StorageTransfer.V1.Connection): Connection to server
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").
    - :body (GoogleApi.StorageTransfer.V1.Model.TransferJob.t): 

  ## Returns

  {:ok, %GoogleApi.StorageTransfer.V1.Model.TransferJob{}} on success
  {:error, info} on failure
  """
  @spec storagetransfer_transfer_jobs_create(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.StorageTransfer.V1.Model.TransferJob.t()} | {:error, Tesla.Env.t()}
  def storagetransfer_transfer_jobs_create(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/transferJobs", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.StorageTransfer.V1.Model.TransferJob{}])
  end

  @doc """
  Gets a transfer job.

  ## Parameters

  - connection (GoogleApi.StorageTransfer.V1.Connection): Connection to server
  - job_name (String.t): Required. The job to get.
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").
    - :projectId (String.t): Required. The ID of the Google Cloud Platform Console project that owns the
  job.

  ## Returns

  {:ok, %GoogleApi.StorageTransfer.V1.Model.TransferJob{}} on success
  {:error, info} on failure
  """
  @spec storagetransfer_transfer_jobs_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.StorageTransfer.V1.Model.TransferJob.t()} | {:error, Tesla.Env.t()}
  def storagetransfer_transfer_jobs_get(connection, job_name, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :projectId => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/{+jobName}", %{
        "jobName" => URI.encode(job_name, &URI.char_unreserved?/1)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.StorageTransfer.V1.Model.TransferJob{}])
  end

  @doc """
  Lists transfer jobs.

  ## Parameters

  - connection (GoogleApi.StorageTransfer.V1.Connection): Connection to server
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").
    - :filter (String.t): Required. A list of query parameters specified as JSON text in the form of:
  {"project_id":"my_project_id",
  "job_names":["jobid1","jobid2",...],
  "job_statuses":["status1","status2",...]}.
  Since `job_names` and `job_statuses` support multiple values, their values
  must be specified with array notation. `project_id` is required.
  `job_names` and `job_statuses` are optional.  The valid values for
  `job_statuses` are case-insensitive: `ENABLED`, `DISABLED`, and `DELETED`.
    - :pageSize (integer()): The list page size. The max allowed value is 256.
    - :pageToken (String.t): The list page token.

  ## Returns

  {:ok, %GoogleApi.StorageTransfer.V1.Model.ListTransferJobsResponse{}} on success
  {:error, info} on failure
  """
  @spec storagetransfer_transfer_jobs_list(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.StorageTransfer.V1.Model.ListTransferJobsResponse.t()}
          | {:error, Tesla.Env.t()}
  def storagetransfer_transfer_jobs_list(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :filter => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/transferJobs", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.StorageTransfer.V1.Model.ListTransferJobsResponse{}]
    )
  end

  @doc """
  Updates a transfer job. Updating a job's transfer spec does not affect
  transfer operations that are running already. Updating the scheduling
  of a job is not allowed.

  ## Parameters

  - connection (GoogleApi.StorageTransfer.V1.Connection): Connection to server
  - job_name (String.t): Required. The name of job to update.
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").
    - :body (GoogleApi.StorageTransfer.V1.Model.UpdateTransferJobRequest.t): 

  ## Returns

  {:ok, %GoogleApi.StorageTransfer.V1.Model.TransferJob{}} on success
  {:error, info} on failure
  """
  @spec storagetransfer_transfer_jobs_patch(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.StorageTransfer.V1.Model.TransferJob.t()} | {:error, Tesla.Env.t()}
  def storagetransfer_transfer_jobs_patch(connection, job_name, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url("/v1/{+jobName}", %{
        "jobName" => URI.encode(job_name, &URI.char_unreserved?/1)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.StorageTransfer.V1.Model.TransferJob{}])
  end
end
