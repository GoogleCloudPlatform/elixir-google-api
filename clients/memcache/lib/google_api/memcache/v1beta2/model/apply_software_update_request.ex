# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Memcache.V1beta2.Model.ApplySoftwareUpdateRequest do
  @moduledoc """
  Request for ApplySoftwareUpdate.

  ## Attributes

  *   `applyAll` (*type:* `boolean()`, *default:* `nil`) - Whether to apply the update to all nodes. If set to true, will explicitly restrict users from specifying any nodes, and apply software update to all nodes (where applicable) within the instance.
  *   `nodeIds` (*type:* `list(String.t)`, *default:* `nil`) - Nodes to which we should apply the update to. Note all the selected nodes are updated in parallel.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :applyAll => boolean() | nil,
          :nodeIds => list(String.t()) | nil
        }

  field(:applyAll)
  field(:nodeIds, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Memcache.V1beta2.Model.ApplySoftwareUpdateRequest do
  def decode(value, options) do
    GoogleApi.Memcache.V1beta2.Model.ApplySoftwareUpdateRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Memcache.V1beta2.Model.ApplySoftwareUpdateRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
