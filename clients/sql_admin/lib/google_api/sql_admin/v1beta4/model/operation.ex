# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.Operation do
  @moduledoc """
  An Operation resource.Â For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.

  ## Attributes

  - endTime (DateTime.t): The time this operation finished in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z. Defaults to `nil`.
  - error (GoogleApi.SQLAdmin.V1beta4.Model.OperationErrors.t): If errors occurred during processing of this operation, this field will be populated. Defaults to `nil`.
  - exportContext (GoogleApi.SQLAdmin.V1beta4.Model.ExportContext.t): The context for export operation, if applicable. Defaults to `nil`.
  - importContext (GoogleApi.SQLAdmin.V1beta4.Model.ImportContext.t): The context for import operation, if applicable. Defaults to `nil`.
  - insertTime (DateTime.t): The time this operation was enqueued in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z. Defaults to `nil`.
  - kind (String.t): This is always sql#operation. Defaults to `sql#operation`.
  - name (String.t): An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation. Defaults to `nil`.
  - operationType (String.t): The type of the operation. Valid values are CREATE, DELETE, UPDATE, RESTART, IMPORT, EXPORT, BACKUP_VOLUME, RESTORE_VOLUME, CREATE_USER, DELETE_USER, CREATE_DATABASE, DELETE_DATABASE . Defaults to `nil`.
  - selfLink (String.t): The URI of this resource. Defaults to `nil`.
  - startTime (DateTime.t): The time this operation actually started in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z. Defaults to `nil`.
  - status (String.t): The status of an operation. Valid values are PENDING, RUNNING, DONE, UNKNOWN. Defaults to `nil`.
  - targetId (String.t): Name of the database instance related to this operation. Defaults to `nil`.
  - targetLink (String.t):  Defaults to `nil`.
  - targetProject (String.t): The project ID of the target instance related to this operation. Defaults to `nil`.
  - user (String.t): The email address of the user who initiated this operation. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endTime => DateTime.t(),
          :error => GoogleApi.SQLAdmin.V1beta4.Model.OperationErrors.t(),
          :exportContext => GoogleApi.SQLAdmin.V1beta4.Model.ExportContext.t(),
          :importContext => GoogleApi.SQLAdmin.V1beta4.Model.ImportContext.t(),
          :insertTime => DateTime.t(),
          :kind => String.t(),
          :name => String.t(),
          :operationType => String.t(),
          :selfLink => String.t(),
          :startTime => DateTime.t(),
          :status => String.t(),
          :targetId => String.t(),
          :targetLink => String.t(),
          :targetProject => String.t(),
          :user => String.t()
        }

  field(:endTime, as: DateTime)
  field(:error, as: GoogleApi.SQLAdmin.V1beta4.Model.OperationErrors)
  field(:exportContext, as: GoogleApi.SQLAdmin.V1beta4.Model.ExportContext)
  field(:importContext, as: GoogleApi.SQLAdmin.V1beta4.Model.ImportContext)
  field(:insertTime, as: DateTime)
  field(:kind)
  field(:name)
  field(:operationType)
  field(:selfLink)
  field(:startTime, as: DateTime)
  field(:status)
  field(:targetId)
  field(:targetLink)
  field(:targetProject)
  field(:user)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.Operation do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.Operation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.Operation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
