# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DoubleClickBidManager.V1.Model.RowStatus do
  @moduledoc """
  Represents the upload status of a row in the request.

  ## Attributes

  - changed (boolean()): Whether the stored entity is changed as a result of upload. Defaults to: `null`.
  - entityId (String.t): Entity Id. Defaults to: `null`.
  - entityName (String.t): Entity name. Defaults to: `null`.
  - errors ([String.t]): Reasons why the entity can&#39;t be uploaded. Defaults to: `null`.
  - persisted (boolean()): Whether the entity is persisted. Defaults to: `null`.
  - rowNumber (integer()): Row number. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :changed => any(),
          :entityId => any(),
          :entityName => any(),
          :errors => list(any()),
          :persisted => any(),
          :rowNumber => any()
        }

  field(:changed)
  field(:entityId)
  field(:entityName)
  field(:errors, type: :list)
  field(:persisted)
  field(:rowNumber)
end

defimpl Poison.Decoder, for: GoogleApi.DoubleClickBidManager.V1.Model.RowStatus do
  def decode(value, options) do
    GoogleApi.DoubleClickBidManager.V1.Model.RowStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DoubleClickBidManager.V1.Model.RowStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
