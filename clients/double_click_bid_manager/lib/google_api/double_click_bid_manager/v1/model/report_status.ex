# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DoubleClickBidManager.V1.Model.ReportStatus do
  @moduledoc """
  Report status.

  ## Attributes

  - failure (ReportFailure): If the report failed, this records the cause. Defaults to: `null`.
  - finishTimeMs (String.t): The time when this report either completed successfully or failed. Defaults to: `null`.
  - format (String.t): The file type of the report. Defaults to: `null`.
    - Enum - one of [CSV, EXCEL_CSV, XLSX]
  - state (String.t): The state of the report. Defaults to: `null`.
    - Enum - one of [DONE, FAILED, RUNNING]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :failure => GoogleApi.DoubleClickBidManager.V1.Model.ReportFailure.t(),
          :finishTimeMs => any(),
          :format => any(),
          :state => any()
        }

  field(:failure, as: GoogleApi.DoubleClickBidManager.V1.Model.ReportFailure)
  field(:finishTimeMs)
  field(:format)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.DoubleClickBidManager.V1.Model.ReportStatus do
  def decode(value, options) do
    GoogleApi.DoubleClickBidManager.V1.Model.ReportStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DoubleClickBidManager.V1.Model.ReportStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
