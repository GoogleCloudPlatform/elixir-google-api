# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SourceRepo.V1.Model.PubsubConfig do
  @moduledoc """
  Configuration to publish a Cloud Pub/Sub message.

  ## Attributes

  - messageFormat (String.t): The format of the Cloud Pub/Sub messages. Defaults to: `null`.
    - Enum - one of [MESSAGE_FORMAT_UNSPECIFIED, PROTOBUF, JSON]
  - serviceAccountEmail (String.t): Email address of the service account used for publishing Cloud Pub/Sub messages. This service account needs to be in the same project as the PubsubConfig. When added, the caller needs to have iam.serviceAccounts.actAs permission on this service account. If unspecified, it defaults to the compute engine default service account. Defaults to: `null`.
  - topic (String.t): A topic of Cloud Pub/Sub. Values are of the form &#x60;projects/&lt;project&gt;/topics/&lt;topic&gt;&#x60;. The project needs to be the same project as this config is in. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :messageFormat => any(),
          :serviceAccountEmail => any(),
          :topic => any()
        }

  field(:messageFormat)
  field(:serviceAccountEmail)
  field(:topic)
end

defimpl Poison.Decoder, for: GoogleApi.SourceRepo.V1.Model.PubsubConfig do
  def decode(value, options) do
    GoogleApi.SourceRepo.V1.Model.PubsubConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SourceRepo.V1.Model.PubsubConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
