# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SourceRepo.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.SourceRepo.V1.Connection
  import GoogleApi.SourceRepo.V1.RequestBuilder


  @doc """
  Creates a repo in the given project with the given name.  If the named repository already exists, &#x60;CreateRepo&#x60; returns &#x60;ALREADY_EXISTS&#x60;.

  ## Parameters

  - connection (GoogleApi.SourceRepo.V1.Connection): Connection to server
  - parent (String): The project in which to create the repo. Values are of the form &#x60;projects/&lt;project&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :body (Repo): 

  ## Returns

  {:ok, %GoogleApi.SourceRepo.V1.Model.Repo{}} on success
  {:error, info} on failure
  """
  @spec sourcerepo_projects_repos_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SourceRepo.V1.Model.Repo.t} | {:error, Tesla.Env.t}
  def sourcerepo_projects_repos_create(connection, parent, opts \\ []) do
    optional_params = %{
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{parent}/repos")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SourceRepo.V1.Model.Repo{})
  end

  @doc """
  Deletes a repo.

  ## Parameters

  - connection (GoogleApi.SourceRepo.V1.Connection): Connection to server
  - name (String): The name of the repo to delete. Values are of the form &#x60;projects/&lt;project&gt;/repos/&lt;repo&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.

  ## Returns

  {:ok, %GoogleApi.SourceRepo.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec sourcerepo_projects_repos_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SourceRepo.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def sourcerepo_projects_repos_delete(connection, name, opts \\ []) do
    optional_params = %{
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/#{name}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SourceRepo.V1.Model.Empty{})
  end

  @doc """
  Returns information about a repo.

  ## Parameters

  - connection (GoogleApi.SourceRepo.V1.Connection): Connection to server
  - name (String): The name of the requested repository. Values are of the form &#x60;projects/&lt;project&gt;/repos/&lt;repo&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.

  ## Returns

  {:ok, %GoogleApi.SourceRepo.V1.Model.Repo{}} on success
  {:error, info} on failure
  """
  @spec sourcerepo_projects_repos_get(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SourceRepo.V1.Model.Repo.t} | {:error, Tesla.Env.t}
  def sourcerepo_projects_repos_get(connection, name, opts \\ []) do
    optional_params = %{
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{name}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SourceRepo.V1.Model.Repo{})
  end

  @doc """
  Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.

  ## Parameters

  - connection (GoogleApi.SourceRepo.V1.Connection): Connection to server
  - resource (String): REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.
  - opts (KeywordList): [optional] Optional parameters
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.

  ## Returns

  {:ok, %GoogleApi.SourceRepo.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec sourcerepo_projects_repos_get_iam_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SourceRepo.V1.Model.Policy.t} | {:error, Tesla.Env.t}
  def sourcerepo_projects_repos_get_iam_policy(connection, resource, opts \\ []) do
    optional_params = %{
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{resource}:getIamPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SourceRepo.V1.Model.Policy{})
  end

  @doc """
  Returns all repos belonging to a project. The sizes of the repos are not set by ListRepos.  To get the size of a repo, use GetRepo.

  ## Parameters

  - connection (GoogleApi.SourceRepo.V1.Connection): Connection to server
  - name (String): The project ID whose repos should be listed. Values are of the form &#x60;projects/&lt;project&gt;&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :page_size (Integer): Maximum number of repositories to return; between 1 and 500. If not set or zero, defaults to 100 at the server.
    - :page_token (String): Resume listing repositories where a prior ListReposResponse left off. This is an opaque token that must be obtained from a recent, prior ListReposResponse&#39;s next_page_token field.

  ## Returns

  {:ok, %GoogleApi.SourceRepo.V1.Model.ListReposResponse{}} on success
  {:error, info} on failure
  """
  @spec sourcerepo_projects_repos_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SourceRepo.V1.Model.ListReposResponse.t} | {:error, Tesla.Env.t}
  def sourcerepo_projects_repos_list(connection, name, opts \\ []) do
    optional_params = %{
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"pageSize" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/#{name}/repos")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SourceRepo.V1.Model.ListReposResponse{})
  end

  @doc """
  Sets the access control policy on the specified resource. Replaces any existing policy.

  ## Parameters

  - connection (GoogleApi.SourceRepo.V1.Connection): Connection to server
  - resource (String): REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
  - opts (KeywordList): [optional] Optional parameters
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :body (SetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.SourceRepo.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec sourcerepo_projects_repos_set_iam_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SourceRepo.V1.Model.Policy.t} | {:error, Tesla.Env.t}
  def sourcerepo_projects_repos_set_iam_policy(connection, resource, opts \\ []) do
    optional_params = %{
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{resource}:setIamPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SourceRepo.V1.Model.Policy{})
  end

  @doc """
  Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.

  ## Parameters

  - connection (GoogleApi.SourceRepo.V1.Connection): Connection to server
  - resource (String): REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.
  - opts (KeywordList): [optional] Optional parameters
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :body (TestIamPermissionsRequest): 

  ## Returns

  {:ok, %GoogleApi.SourceRepo.V1.Model.TestIamPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec sourcerepo_projects_repos_test_iam_permissions(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SourceRepo.V1.Model.TestIamPermissionsResponse.t} | {:error, Tesla.Env.t}
  def sourcerepo_projects_repos_test_iam_permissions(connection, resource, opts \\ []) do
    optional_params = %{
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/#{resource}:testIamPermissions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SourceRepo.V1.Model.TestIamPermissionsResponse{})
  end
end
