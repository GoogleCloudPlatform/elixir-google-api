# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DriveActivity.V2.Model.TargetReference do
  @moduledoc """
  A lightweight reference to the target of activity.

  ## Attributes

  *   `drive` (*type:* `GoogleApi.DriveActivity.V2.Model.DriveReference.t`, *default:* `nil`) - The target is a shared drive.
  *   `driveItem` (*type:* `GoogleApi.DriveActivity.V2.Model.DriveItemReference.t`, *default:* `nil`) - The target is a Drive item.
  *   `teamDrive` (*type:* `GoogleApi.DriveActivity.V2.Model.TeamDriveReference.t`, *default:* `nil`) - This field is deprecated; please use the `drive` field instead.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :drive => GoogleApi.DriveActivity.V2.Model.DriveReference.t(),
          :driveItem => GoogleApi.DriveActivity.V2.Model.DriveItemReference.t(),
          :teamDrive => GoogleApi.DriveActivity.V2.Model.TeamDriveReference.t()
        }

  field(:drive, as: GoogleApi.DriveActivity.V2.Model.DriveReference)
  field(:driveItem, as: GoogleApi.DriveActivity.V2.Model.DriveItemReference)
  field(:teamDrive, as: GoogleApi.DriveActivity.V2.Model.TeamDriveReference)
end

defimpl Poison.Decoder, for: GoogleApi.DriveActivity.V2.Model.TargetReference do
  def decode(value, options) do
    GoogleApi.DriveActivity.V2.Model.TargetReference.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DriveActivity.V2.Model.TargetReference do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
