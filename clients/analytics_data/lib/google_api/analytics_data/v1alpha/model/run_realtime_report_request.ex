# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AnalyticsData.V1alpha.Model.RunRealtimeReportRequest do
  @moduledoc """
  The request to generate a realtime report.

  ## Attributes

  *   `dimensionFilter` (*type:* `GoogleApi.AnalyticsData.V1alpha.Model.FilterExpression.t`, *default:* `nil`) - The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter.
  *   `dimensions` (*type:* `list(GoogleApi.AnalyticsData.V1alpha.Model.Dimension.t)`, *default:* `nil`) - The dimensions requested and displayed.
  *   `limit` (*type:* `String.t`, *default:* `nil`) - The number of rows to return. If the `limit` parameter is unspecified, 10,000 rows are returned. The API returns a maximum of 100,000 rows per request, no matter how many you ask for.
  *   `metricAggregations` (*type:* `list(String.t)`, *default:* `nil`) - Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to "RESERVED_(MetricAggregation)".
  *   `metricFilter` (*type:* `GoogleApi.AnalyticsData.V1alpha.Model.FilterExpression.t`, *default:* `nil`) - The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter.
  *   `metrics` (*type:* `list(GoogleApi.AnalyticsData.V1alpha.Model.Metric.t)`, *default:* `nil`) - The metrics requested and displayed.
  *   `orderBys` (*type:* `list(GoogleApi.AnalyticsData.V1alpha.Model.OrderBy.t)`, *default:* `nil`) - Specifies how rows are ordered in the response.
  *   `returnPropertyQuota` (*type:* `boolean()`, *default:* `nil`) - Toggles whether to return the current state of this Analytics Property's Realtime quota. Quota is returned in [PropertyQuota](#PropertyQuota).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dimensionFilter => GoogleApi.AnalyticsData.V1alpha.Model.FilterExpression.t() | nil,
          :dimensions => list(GoogleApi.AnalyticsData.V1alpha.Model.Dimension.t()) | nil,
          :limit => String.t() | nil,
          :metricAggregations => list(String.t()) | nil,
          :metricFilter => GoogleApi.AnalyticsData.V1alpha.Model.FilterExpression.t() | nil,
          :metrics => list(GoogleApi.AnalyticsData.V1alpha.Model.Metric.t()) | nil,
          :orderBys => list(GoogleApi.AnalyticsData.V1alpha.Model.OrderBy.t()) | nil,
          :returnPropertyQuota => boolean() | nil
        }

  field(:dimensionFilter, as: GoogleApi.AnalyticsData.V1alpha.Model.FilterExpression)
  field(:dimensions, as: GoogleApi.AnalyticsData.V1alpha.Model.Dimension, type: :list)
  field(:limit)
  field(:metricAggregations, type: :list)
  field(:metricFilter, as: GoogleApi.AnalyticsData.V1alpha.Model.FilterExpression)
  field(:metrics, as: GoogleApi.AnalyticsData.V1alpha.Model.Metric, type: :list)
  field(:orderBys, as: GoogleApi.AnalyticsData.V1alpha.Model.OrderBy, type: :list)
  field(:returnPropertyQuota)
end

defimpl Poison.Decoder, for: GoogleApi.AnalyticsData.V1alpha.Model.RunRealtimeReportRequest do
  def decode(value, options) do
    GoogleApi.AnalyticsData.V1alpha.Model.RunRealtimeReportRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AnalyticsData.V1alpha.Model.RunRealtimeReportRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
