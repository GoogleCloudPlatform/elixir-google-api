# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.OSConfig.V1.Model.PatchRollout do
  @moduledoc """
  Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.

  ## Attributes

  *   `disruptionBudget` (*type:* `GoogleApi.OSConfig.V1.Model.FixedOrPercent.t`, *default:* `nil`) - The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up. During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps. A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget. For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone. For example, if the disruption budget has a fixed value of `10`, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.
  *   `mode` (*type:* `String.t`, *default:* `nil`) - Mode of the patch rollout.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :disruptionBudget => GoogleApi.OSConfig.V1.Model.FixedOrPercent.t() | nil,
          :mode => String.t() | nil
        }

  field(:disruptionBudget, as: GoogleApi.OSConfig.V1.Model.FixedOrPercent)
  field(:mode)
end

defimpl Poison.Decoder, for: GoogleApi.OSConfig.V1.Model.PatchRollout do
  def decode(value, options) do
    GoogleApi.OSConfig.V1.Model.PatchRollout.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.OSConfig.V1.Model.PatchRollout do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
