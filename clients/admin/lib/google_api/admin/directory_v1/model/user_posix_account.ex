# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Admin.Directory_v1.Model.UserPosixAccount do
  @moduledoc """
  JSON template for a POSIX account entry. Description of the field family: go/fbs-posix.

  ## Attributes

  *   `accountId` (*type:* `String.t`, *default:* `nil`) - A POSIX account field identifier.
  *   `gecos` (*type:* `String.t`, *default:* `nil`) - The GECOS (user information) for this account.
  *   `gid` (*type:* `String.t`, *default:* `nil`) - The default group ID.
  *   `homeDirectory` (*type:* `String.t`, *default:* `nil`) - The path to the home directory for this account.
  *   `operatingSystemType` (*type:* `String.t`, *default:* `nil`) - The operating system type for this account.
  *   `primary` (*type:* `boolean()`, *default:* `nil`) - If this is user's primary account within the SystemId.
  *   `shell` (*type:* `String.t`, *default:* `nil`) - The path to the login shell for this account.
  *   `systemId` (*type:* `String.t`, *default:* `nil`) - System identifier for which account Username or Uid apply to.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - The POSIX compliant user ID.
  *   `username` (*type:* `String.t`, *default:* `nil`) - The username of the account.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accountId => String.t(),
          :gecos => String.t(),
          :gid => String.t(),
          :homeDirectory => String.t(),
          :operatingSystemType => String.t(),
          :primary => boolean(),
          :shell => String.t(),
          :systemId => String.t(),
          :uid => String.t(),
          :username => String.t()
        }

  field(:accountId)
  field(:gecos)
  field(:gid)
  field(:homeDirectory)
  field(:operatingSystemType)
  field(:primary)
  field(:shell)
  field(:systemId)
  field(:uid)
  field(:username)
end

defimpl Poison.Decoder, for: GoogleApi.Admin.Directory_v1.Model.UserPosixAccount do
  def decode(value, options) do
    GoogleApi.Admin.Directory_v1.Model.UserPosixAccount.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Admin.Directory_v1.Model.UserPosixAccount do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
