# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Admin.Directory_v1.Model.UserLocation do
  @moduledoc """
  JSON template for a location entry.

  ## Attributes

  *   `area` (*type:* `String.t`, *default:* `nil`) - Textual location. This is most useful for display purposes to concisely describe the location. For example, "Mountain View, CA", "Near Seattle", "US-NYC-9TH 9A209A".
  *   `buildingId` (*type:* `String.t`, *default:* `nil`) - Building Identifier.
  *   `customType` (*type:* `String.t`, *default:* `nil`) - Custom Type.
  *   `deskCode` (*type:* `String.t`, *default:* `nil`) - Most specific textual code of individual desk location.
  *   `floorName` (*type:* `String.t`, *default:* `nil`) - Floor name/number.
  *   `floorSection` (*type:* `String.t`, *default:* `nil`) - Floor section. More specific location within the floor. For example, if a floor is divided into sections "A", "B", and "C", this field would identify one of those values.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Each entry can have a type which indicates standard types of that entry. For example location could be of types default and desk. In addition to standard type, an entry can have a custom type and can give it any name. Such types should have "custom" as type and also have a customType value.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :area => String.t(),
          :buildingId => String.t(),
          :customType => String.t(),
          :deskCode => String.t(),
          :floorName => String.t(),
          :floorSection => String.t(),
          :type => String.t()
        }

  field(:area)
  field(:buildingId)
  field(:customType)
  field(:deskCode)
  field(:floorName)
  field(:floorSection)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Admin.Directory_v1.Model.UserLocation do
  def decode(value, options) do
    GoogleApi.Admin.Directory_v1.Model.UserLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Admin.Directory_v1.Model.UserLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
