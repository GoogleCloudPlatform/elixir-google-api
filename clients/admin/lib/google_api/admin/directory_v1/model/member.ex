# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Admin.Directory_v1.Model.Member do
  @moduledoc """
  JSON template for Member resource in Directory API.

  ## Attributes

  *   `delivery_settings` (*type:* `String.t`, *default:* `nil`) - Delivery settings of member
  *   `email` (*type:* `String.t`, *default:* `nil`) - Email of member (Read-only)
  *   `etag` (*type:* `String.t`, *default:* `nil`) - ETag of the resource.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The unique ID of the group member. A member id can be used as a member request URI's memberKey. Unique identifier of group (Read-only) Unique identifier of member (Read-only)
  *   `kind` (*type:* `String.t`, *default:* `admin#directory#member`) - Kind of resource this is.
  *   `role` (*type:* `String.t`, *default:* `nil`) - Role of member
  *   `status` (*type:* `String.t`, *default:* `nil`) - Status of member (Immutable)
  *   `type` (*type:* `String.t`, *default:* `nil`) - Type of member (Immutable)
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :delivery_settings => String.t(),
          :email => String.t(),
          :etag => String.t(),
          :id => String.t(),
          :kind => String.t(),
          :role => String.t(),
          :status => String.t(),
          :type => String.t()
        }

  field(:delivery_settings)
  field(:email)
  field(:etag)
  field(:id)
  field(:kind)
  field(:role)
  field(:status)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Admin.Directory_v1.Model.Member do
  def decode(value, options) do
    GoogleApi.Admin.Directory_v1.Model.Member.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Admin.Directory_v1.Model.Member do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
