# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.GamesManagement.V1management.Model.Player do
  @moduledoc """
  This is a JSON template for a Player resource.

  ## Attributes

  - avatarImageUrl (String.t): The base URL for the image that represents the player. Defaults to: `null`.
  - bannerUrlLandscape (String.t): The url to the landscape mode player banner image. Defaults to: `null`.
  - bannerUrlPortrait (String.t): The url to the portrait mode player banner image. Defaults to: `null`.
  - displayName (String.t): The name to display for the player. Defaults to: `null`.
  - experienceInfo (GamesPlayerExperienceInfoResource): An object to represent Play Game experience information for the player. Defaults to: `null`.
  - kind (String.t): Uniquely identifies the type of this resource. Value is always the fixed string gamesManagement#player. Defaults to: `null`.
  - lastPlayedWith (GamesPlayedResource): Details about the last time this player played a multiplayer game with the currently authenticated player. Populated for PLAYED_WITH player collection members. Defaults to: `null`.
  - name (PlayerName):  Defaults to: `null`.
  - originalPlayerId (String.t): The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs. Defaults to: `null`.
  - playerId (String.t): The ID of the player. Defaults to: `null`.
  - profileSettings (ProfileSettings): The player&#39;s profile settings. Controls whether or not the player&#39;s profile is visible to other players. Defaults to: `null`.
  - title (String.t): The player&#39;s title rewarded for their game activities. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :avatarImageUrl => any(),
          :bannerUrlLandscape => any(),
          :bannerUrlPortrait => any(),
          :displayName => any(),
          :experienceInfo =>
            GoogleApi.GamesManagement.V1management.Model.GamesPlayerExperienceInfoResource.t(),
          :kind => any(),
          :lastPlayedWith => GoogleApi.GamesManagement.V1management.Model.GamesPlayedResource.t(),
          :name => GoogleApi.GamesManagement.V1management.Model.PlayerName.t(),
          :originalPlayerId => any(),
          :playerId => any(),
          :profileSettings => GoogleApi.GamesManagement.V1management.Model.ProfileSettings.t(),
          :title => any()
        }

  field(:avatarImageUrl)
  field(:bannerUrlLandscape)
  field(:bannerUrlPortrait)
  field(:displayName)

  field(
    :experienceInfo,
    as: GoogleApi.GamesManagement.V1management.Model.GamesPlayerExperienceInfoResource
  )

  field(:kind)
  field(:lastPlayedWith, as: GoogleApi.GamesManagement.V1management.Model.GamesPlayedResource)
  field(:name, as: GoogleApi.GamesManagement.V1management.Model.PlayerName)
  field(:originalPlayerId)
  field(:playerId)
  field(:profileSettings, as: GoogleApi.GamesManagement.V1management.Model.ProfileSettings)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.GamesManagement.V1management.Model.Player do
  def decode(value, options) do
    GoogleApi.GamesManagement.V1management.Model.Player.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GamesManagement.V1management.Model.Player do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
