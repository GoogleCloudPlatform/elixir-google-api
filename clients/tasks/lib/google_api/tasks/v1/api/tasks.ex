# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Tasks.V1.Api.Tasks do
  @moduledoc """
  API calls for all endpoints tagged `Tasks`.
  """

  alias GoogleApi.Tasks.V1.Connection
  import GoogleApi.Tasks.V1.RequestBuilder


  @doc """
  Clears all completed tasks from the specified task list. The affected tasks will be marked as &#39;hidden&#39; and no longer be returned by default when retrieving all tasks for a task list.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_clear(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def tasks_tasks_clear(connection, tasklist, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/lists/{tasklist}/clear", %{
         "tasklist" => URI.encode_www_form(tasklist)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Deletes the specified task from the task list.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - task (String): Task identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def tasks_tasks_delete(connection, tasklist, task, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/lists/{tasklist}/tasks/{task}", %{
         "tasklist" => URI.encode_www_form(tasklist),
         "task" => URI.encode_www_form(task)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Returns the specified task.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - task (String): Task identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Tasks.V1.Model.Task{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Tasks.V1.Model.Task.t} | {:error, Tesla.Env.t}
  def tasks_tasks_get(connection, tasklist, task, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/lists/{tasklist}/tasks/{task}", %{
         "tasklist" => URI.encode_www_form(tasklist),
         "task" => URI.encode_www_form(task)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Tasks.V1.Model.Task{})
  end

  @doc """
  Creates a new task on the specified task list.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :parent (String): Parent task identifier. If the task is created at the top level, this parameter is omitted. Optional.
    - :previous (String): Previous sibling task identifier. If the task is created at the first position among its siblings, this parameter is omitted. Optional.
    - :body (Task): 

  ## Returns

  {:ok, %GoogleApi.Tasks.V1.Model.Task{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_insert(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Tasks.V1.Model.Task.t} | {:error, Tesla.Env.t}
  def tasks_tasks_insert(connection, tasklist, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"parent" => :query,
      :"previous" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/lists/{tasklist}/tasks", %{
         "tasklist" => URI.encode_www_form(tasklist)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Tasks.V1.Model.Task{})
  end

  @doc """
  Returns all tasks in the specified task list.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :completed_max (String): Upper bound for a task&#39;s completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.
    - :completed_min (String): Lower bound for a task&#39;s completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.
    - :due_max (String): Upper bound for a task&#39;s due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.
    - :due_min (String): Lower bound for a task&#39;s due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.
    - :max_results (String): Maximum number of task lists returned on one page. Optional. The default is 100.
    - :page_token (String): Token specifying the result page to return. Optional.
    - :show_completed (Boolean): Flag indicating whether completed tasks are returned in the result. Optional. The default is True.
    - :show_deleted (Boolean): Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.
    - :show_hidden (Boolean): Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.
    - :updated_min (String): Lower bound for a task&#39;s last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.

  ## Returns

  {:ok, %GoogleApi.Tasks.V1.Model.Tasks{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Tasks.V1.Model.Tasks.t} | {:error, Tesla.Env.t}
  def tasks_tasks_list(connection, tasklist, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"completedMax" => :query,
      :"completedMin" => :query,
      :"dueMax" => :query,
      :"dueMin" => :query,
      :"maxResults" => :query,
      :"pageToken" => :query,
      :"showCompleted" => :query,
      :"showDeleted" => :query,
      :"showHidden" => :query,
      :"updatedMin" => :query
    }
    %{}
    |> method(:get)
    |> url("/lists/{tasklist}/tasks", %{
         "tasklist" => URI.encode_www_form(tasklist)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Tasks.V1.Model.Tasks{})
  end

  @doc """
  Moves the specified task to another position in the task list. This can include putting it as a child task under a new parent and/or move it to a different position among its sibling tasks.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - task (String): Task identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :parent (String): New parent task identifier. If the task is moved to the top level, this parameter is omitted. Optional.
    - :previous (String): New previous sibling task identifier. If the task is moved to the first position among its siblings, this parameter is omitted. Optional.

  ## Returns

  {:ok, %GoogleApi.Tasks.V1.Model.Task{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_move(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Tasks.V1.Model.Task.t} | {:error, Tesla.Env.t}
  def tasks_tasks_move(connection, tasklist, task, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"parent" => :query,
      :"previous" => :query
    }
    %{}
    |> method(:post)
    |> url("/lists/{tasklist}/tasks/{task}/move", %{
         "tasklist" => URI.encode_www_form(tasklist),
         "task" => URI.encode_www_form(task)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Tasks.V1.Model.Task{})
  end

  @doc """
  Updates the specified task. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - task (String): Task identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Task): 

  ## Returns

  {:ok, %GoogleApi.Tasks.V1.Model.Task{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_patch(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Tasks.V1.Model.Task.t} | {:error, Tesla.Env.t}
  def tasks_tasks_patch(connection, tasklist, task, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/lists/{tasklist}/tasks/{task}", %{
         "tasklist" => URI.encode_www_form(tasklist),
         "task" => URI.encode_www_form(task)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Tasks.V1.Model.Task{})
  end

  @doc """
  Updates the specified task.

  ## Parameters

  - connection (GoogleApi.Tasks.V1.Connection): Connection to server
  - tasklist (String): Task list identifier.
  - task (String): Task identifier.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Task): 

  ## Returns

  {:ok, %GoogleApi.Tasks.V1.Model.Task{}} on success
  {:error, info} on failure
  """
  @spec tasks_tasks_update(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Tasks.V1.Model.Task.t} | {:error, Tesla.Env.t}
  def tasks_tasks_update(connection, tasklist, task, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/lists/{tasklist}/tasks/{task}", %{
         "tasklist" => URI.encode_www_form(tasklist),
         "task" => URI.encode_www_form(task)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Tasks.V1.Model.Task{})
  end
end
