# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.CreateAuthUriResponse do
  @moduledoc """
  Response of creating the IDP authentication URL.

  ## Attributes

  - allProviders ([String.t]): all providers the user has once used to do federated login Defaults to: `null`.
  - authUri (String.t): The URI used by the IDP to authenticate the user. Defaults to: `null`.
  - captchaRequired (boolean()): True if captcha is required. Defaults to: `null`.
  - forExistingProvider (boolean()): True if the authUri is for user&#39;s existing provider. Defaults to: `null`.
  - kind (String.t): The fixed string identitytoolkit#CreateAuthUriResponse\&quot;. Defaults to: `null`.
  - providerId (String.t): The provider ID of the auth URI. Defaults to: `null`.
  - registered (boolean()): Whether the user is registered if the identifier is an email. Defaults to: `null`.
  - sessionId (String.t): Session ID which should be passed in the following verifyAssertion request. Defaults to: `null`.
  - signinMethods ([String.t]): All sign-in methods this user has used. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allProviders => list(any()),
          :authUri => any(),
          :captchaRequired => any(),
          :forExistingProvider => any(),
          :kind => any(),
          :providerId => any(),
          :registered => any(),
          :sessionId => any(),
          :signinMethods => list(any())
        }

  field(:allProviders, type: :list)
  field(:authUri)
  field(:captchaRequired)
  field(:forExistingProvider)
  field(:kind)
  field(:providerId)
  field(:registered)
  field(:sessionId)
  field(:signinMethods, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.IdentityToolkit.V3.Model.CreateAuthUriResponse do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.CreateAuthUriResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IdentityToolkit.V3.Model.CreateAuthUriResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
