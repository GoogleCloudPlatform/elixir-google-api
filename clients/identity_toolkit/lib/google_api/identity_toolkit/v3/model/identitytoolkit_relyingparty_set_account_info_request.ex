# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartySetAccountInfoRequest do
  @moduledoc """
  Request to set the account information.

  ## Attributes

  - captchaChallenge (String.t): The captcha challenge. Defaults to `nil`.
  - captchaResponse (String.t): Response to the captcha. Defaults to `nil`.
  - createdAt (String.t): The timestamp when the account is created. Defaults to `nil`.
  - customAttributes (String.t): The custom attributes to be set in the user's id token. Defaults to `nil`.
  - delegatedProjectNumber (String.t): GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. Defaults to `nil`.
  - deleteAttribute (list(String.t)): The attributes users request to delete. Defaults to `nil`.
  - deleteProvider (list(String.t)): The IDPs the user request to delete. Defaults to `nil`.
  - disableUser (boolean()): Whether to disable the user. Defaults to `nil`.
  - displayName (String.t): The name of the user. Defaults to `nil`.
  - email (String.t): The email of the user. Defaults to `nil`.
  - emailVerified (boolean()): Mark the email as verified or not. Defaults to `nil`.
  - idToken (String.t): The GITKit token of the authenticated user. Defaults to `nil`.
  - instanceId (String.t): Instance id token of the app. Defaults to `nil`.
  - lastLoginAt (String.t): Last login timestamp. Defaults to `nil`.
  - localId (String.t): The local ID of the user. Defaults to `nil`.
  - oobCode (String.t): The out-of-band code of the change email request. Defaults to `nil`.
  - password (String.t): The new password of the user. Defaults to `nil`.
  - phoneNumber (String.t): Privileged caller can update user with specified phone number. Defaults to `nil`.
  - photoUrl (String.t): The photo url of the user. Defaults to `nil`.
  - provider (list(String.t)): The associated IDPs of the user. Defaults to `nil`.
  - returnSecureToken (boolean()): Whether return sts id token and refresh token instead of gitkit token. Defaults to `nil`.
  - upgradeToFederatedLogin (boolean()): Mark the user to upgrade to federated login. Defaults to `nil`.
  - validSince (String.t): Timestamp in seconds for valid login token. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :captchaChallenge => String.t(),
          :captchaResponse => String.t(),
          :createdAt => String.t(),
          :customAttributes => String.t(),
          :delegatedProjectNumber => String.t(),
          :deleteAttribute => list(String.t()),
          :deleteProvider => list(String.t()),
          :disableUser => boolean(),
          :displayName => String.t(),
          :email => String.t(),
          :emailVerified => boolean(),
          :idToken => String.t(),
          :instanceId => String.t(),
          :lastLoginAt => String.t(),
          :localId => String.t(),
          :oobCode => String.t(),
          :password => String.t(),
          :phoneNumber => String.t(),
          :photoUrl => String.t(),
          :provider => list(String.t()),
          :returnSecureToken => boolean(),
          :upgradeToFederatedLogin => boolean(),
          :validSince => String.t()
        }

  field(:captchaChallenge)
  field(:captchaResponse)
  field(:createdAt)
  field(:customAttributes)
  field(:delegatedProjectNumber)
  field(:deleteAttribute, type: :list)
  field(:deleteProvider, type: :list)
  field(:disableUser)
  field(:displayName)
  field(:email)
  field(:emailVerified)
  field(:idToken)
  field(:instanceId)
  field(:lastLoginAt)
  field(:localId)
  field(:oobCode)
  field(:password)
  field(:phoneNumber)
  field(:photoUrl)
  field(:provider, type: :list)
  field(:returnSecureToken)
  field(:upgradeToFederatedLogin)
  field(:validSince)
end

defimpl Poison.Decoder,
  for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartySetAccountInfoRequest do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartySetAccountInfoRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartySetAccountInfoRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
