# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.UserInfo do
  @moduledoc """
  Template for an individual account info.

  ## Attributes

  - createdAt (String.t): User creation timestamp. Defaults to: `null`.
  - customAttributes (String.t): The custom attributes to be set in the user&#39;s id token. Defaults to: `null`.
  - customAuth (boolean()): Whether the user is authenticated by the developer. Defaults to: `null`.
  - disabled (boolean()): Whether the user is disabled. Defaults to: `null`.
  - displayName (String.t): The name of the user. Defaults to: `null`.
  - email (String.t): The email of the user. Defaults to: `null`.
  - emailVerified (boolean()): Whether the email has been verified. Defaults to: `null`.
  - lastLoginAt (String.t): last login timestamp. Defaults to: `null`.
  - localId (String.t): The local ID of the user. Defaults to: `null`.
  - passwordHash (binary()): The user&#39;s hashed password. Defaults to: `null`.
  - passwordUpdatedAt (float()): The timestamp when the password was last updated. Defaults to: `null`.
  - phoneNumber (String.t): User&#39;s phone number. Defaults to: `null`.
  - photoUrl (String.t): The URL of the user profile photo. Defaults to: `null`.
  - providerUserInfo ([UserInfoProviderUserInfo]): The IDP of the user. Defaults to: `null`.
  - rawPassword (String.t): The user&#39;s plain text password. Defaults to: `null`.
  - salt (binary()): The user&#39;s password salt. Defaults to: `null`.
  - screenName (String.t): User&#39;s screen name at Twitter or login name at Github. Defaults to: `null`.
  - validSince (String.t): Timestamp in seconds for valid login token. Defaults to: `null`.
  - version (integer()): Version of the user&#39;s password. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createdAt => any(),
          :customAttributes => any(),
          :customAuth => any(),
          :disabled => any(),
          :displayName => any(),
          :email => any(),
          :emailVerified => any(),
          :lastLoginAt => any(),
          :localId => any(),
          :passwordHash => any(),
          :passwordUpdatedAt => any(),
          :phoneNumber => any(),
          :photoUrl => any(),
          :providerUserInfo =>
            list(GoogleApi.IdentityToolkit.V3.Model.UserInfoProviderUserInfo.t()),
          :rawPassword => any(),
          :salt => any(),
          :screenName => any(),
          :validSince => any(),
          :version => any()
        }

  field(:createdAt)
  field(:customAttributes)
  field(:customAuth)
  field(:disabled)
  field(:displayName)
  field(:email)
  field(:emailVerified)
  field(:lastLoginAt)
  field(:localId)
  field(:passwordHash)
  field(:passwordUpdatedAt)
  field(:phoneNumber)
  field(:photoUrl)

  field(
    :providerUserInfo,
    as: GoogleApi.IdentityToolkit.V3.Model.UserInfoProviderUserInfo,
    type: :list
  )

  field(:rawPassword)
  field(:salt)
  field(:screenName)
  field(:validSince)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.IdentityToolkit.V3.Model.UserInfo do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.UserInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IdentityToolkit.V3.Model.UserInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
