# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyVerifyAssertionRequest do
  @moduledoc """
  Request to verify the IDP assertion.

  ## Attributes

  - autoCreate (boolean()): When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist. Defaults to `nil`.
  - delegatedProjectNumber (String.t): GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. Defaults to `nil`.
  - idToken (String.t): The GITKit token of the authenticated user. Defaults to `nil`.
  - instanceId (String.t): Instance id token of the app. Defaults to `nil`.
  - pendingIdToken (String.t): The GITKit token for the non-trusted IDP pending to be confirmed by the user. Defaults to `nil`.
  - postBody (String.t): The post body if the request is a HTTP POST. Defaults to `nil`.
  - requestUri (String.t): The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP. Defaults to `nil`.
  - returnIdpCredential (boolean()): Whether return 200 and IDP credential rather than throw exception when federated id is already linked. Defaults to `nil`.
  - returnRefreshToken (boolean()): Whether to return refresh tokens. Defaults to `nil`.
  - returnSecureToken (boolean()): Whether return sts id token and refresh token instead of gitkit token. Defaults to `nil`.
  - sessionId (String.t): Session ID, which should match the one in previous createAuthUri request. Defaults to `nil`.
  - tenantId (String.t): For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from. Defaults to `nil`.
  - tenantProjectNumber (String.t): Tenant project number to be used for idp discovery. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :autoCreate => boolean(),
          :delegatedProjectNumber => String.t(),
          :idToken => String.t(),
          :instanceId => String.t(),
          :pendingIdToken => String.t(),
          :postBody => String.t(),
          :requestUri => String.t(),
          :returnIdpCredential => boolean(),
          :returnRefreshToken => boolean(),
          :returnSecureToken => boolean(),
          :sessionId => String.t(),
          :tenantId => String.t(),
          :tenantProjectNumber => String.t()
        }

  field(:autoCreate)
  field(:delegatedProjectNumber)
  field(:idToken)
  field(:instanceId)
  field(:pendingIdToken)
  field(:postBody)
  field(:requestUri)
  field(:returnIdpCredential)
  field(:returnRefreshToken)
  field(:returnSecureToken)
  field(:sessionId)
  field(:tenantId)
  field(:tenantProjectNumber)
end

defimpl Poison.Decoder,
  for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyVerifyAssertionRequest do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyVerifyAssertionRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyVerifyAssertionRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
