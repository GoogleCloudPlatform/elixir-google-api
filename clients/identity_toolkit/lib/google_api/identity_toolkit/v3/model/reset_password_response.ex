# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.ResetPasswordResponse do
  @moduledoc """
  Response of resetting the password.

  ## Attributes

  - email (String.t): The user's email. If the out-of-band code is for email recovery, the user's original email. Defaults to `nil`.
  - kind (String.t): The fixed string "identitytoolkit#ResetPasswordResponse". Defaults to `identitytoolkit#ResetPasswordResponse`.
  - newEmail (String.t): If the out-of-band code is for email recovery, the user's new email. Defaults to `nil`.
  - requestType (String.t): The request type. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :email => String.t(),
          :kind => String.t(),
          :newEmail => String.t(),
          :requestType => String.t()
        }

  field(:email)
  field(:kind)
  field(:newEmail)
  field(:requestType)
end

defimpl Poison.Decoder, for: GoogleApi.IdentityToolkit.V3.Model.ResetPasswordResponse do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.ResetPasswordResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IdentityToolkit.V3.Model.ResetPasswordResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
