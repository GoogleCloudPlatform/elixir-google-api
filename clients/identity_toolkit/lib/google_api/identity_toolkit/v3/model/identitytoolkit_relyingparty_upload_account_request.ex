# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyUploadAccountRequest do
  @moduledoc """
  Request to upload user account in batch.

  ## Attributes

  - allowOverwrite (Boolean): Whether allow overwrite existing account when user local_id exists. Defaults to: `null`.
  - delegatedProjectNumber (String): GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration. Defaults to: `null`.
  - hashAlgorithm (String): The password hash algorithm. Defaults to: `null`.
  - memoryCost (Integer): Memory cost for hash calculation. Used by scrypt similar algorithms. Defaults to: `null`.
  - rounds (Integer): Rounds for hash calculation. Used by scrypt and similar algorithms. Defaults to: `null`.
  - saltSeparator (String): The salt separator. Defaults to: `null`.
  - sanityCheck (Boolean): If true, backend will do sanity check(including duplicate email and federated id) when uploading account. Defaults to: `null`.
  - signerKey (String): The key for to hash the password. Defaults to: `null`.
  - targetProjectId (String): Specify which project (field value is actually project id) to operate. Only used when provided credential. Defaults to: `null`.
  - users (List[UserInfo]): The account info to be stored. Defaults to: `null`.
  """

  defstruct [
    :"allowOverwrite",
    :"delegatedProjectNumber",
    :"hashAlgorithm",
    :"memoryCost",
    :"rounds",
    :"saltSeparator",
    :"sanityCheck",
    :"signerKey",
    :"targetProjectId",
    :"users"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyUploadAccountRequest do
  import GoogleApi.IdentityToolkit.V3.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"users", :list, GoogleApi.IdentityToolkit.V3.Model.UserInfo, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyUploadAccountRequest do
  def encode(value, options) do
    GoogleApi.IdentityToolkit.V3.Deserializer.serialize_non_nil(value, options)
  end
end

