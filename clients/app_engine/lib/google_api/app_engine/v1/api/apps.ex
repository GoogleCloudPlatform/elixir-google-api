# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AppEngine.V1.Api.Apps do
  @moduledoc """
  API calls for all endpoints tagged `Apps`.
  """

  alias GoogleApi.AppEngine.V1.Connection
  import GoogleApi.AppEngine.V1.RequestBuilder


  @doc """
  Creates an App Engine application for a Google Cloud Platform project. Required fields: id - The ID of the target Cloud Platform project. location - The region (https://cloud.google.com/appengine/docs/locations) where you want the App Engine application located.For more information about App Engine applications, see Managing Projects, Applications, and Billing (https://cloud.google.com/appengine/docs/python/console/).

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :body (Application): 

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_create(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_create(connection, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/apps")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Gets information about an application.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the Application resource to get. Example: apps/myapp.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Application{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_get(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Application.t} | {:error, Tesla.Env.t}
  def appengine_apps_get(connection, apps_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}", %{
         "appsId" => URI.encode_www_form(apps_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Application{})
  end

  @doc """
  Get information about a location.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Resource name for the location.
  - locations_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Location{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_locations_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Location.t} | {:error, Tesla.Env.t}
  def appengine_apps_locations_get(connection, apps_id, locations_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/locations/{locationsId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "locationsId" => URI.encode_www_form(locations_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Location{})
  end

  @doc """
  Lists information about the supported locations for this service.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. The resource that owns the locations collection, if applicable.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :filter (String): The standard list filter.
    - :page_token (String): The standard list page token.
    - :page_size (Integer): The standard list page size.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.ListLocationsResponse{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_locations_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.ListLocationsResponse.t} | {:error, Tesla.Env.t}
  def appengine_apps_locations_list(connection, apps_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"filter" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/locations", %{
         "appsId" => URI.encode_www_form(apps_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.ListLocationsResponse{})
  end

  @doc """
  Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. The name of the operation resource.
  - operations_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_operations_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_operations_get(connection, apps_id, operations_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/operations/{operationsId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "operationsId" => URI.encode_www_form(operations_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \&quot;/v1/{name&#x3D;users/*}/operations\&quot; to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. The name of the operation&#39;s parent resource.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :filter (String): The standard list filter.
    - :page_token (String): The standard list page token.
    - :page_size (Integer): The standard list page size.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.ListOperationsResponse{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_operations_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.ListOperationsResponse.t} | {:error, Tesla.Env.t}
  def appengine_apps_operations_list(connection, apps_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"filter" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/operations", %{
         "appsId" => URI.encode_www_form(apps_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.ListOperationsResponse{})
  end

  @doc """
  Updates the specified Application resource. You can update the following fields: auth_domain - Google authentication domain for controlling user access to the application. default_cookie_expiration - Cookie expiration policy for the application.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the Application resource to update. Example: apps/myapp.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :update_mask (String): Standard field mask for the set of fields to be updated.
    - :body (Application): 

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_patch(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_patch(connection, apps_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"updateMask" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/apps/{appsId}", %{
         "appsId" => URI.encode_www_form(apps_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Recreates the required App Engine features for the specified App Engine application, for example a Cloud Storage bucket or App Engine service account. Use this method if you receive an error message about a missing feature, for example, Error retrieving the App Engine service account.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the application to repair. Example: apps/myapp
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :body (RepairApplicationRequest): 

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_repair(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_repair(connection, apps_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/apps/{appsId}:repair", %{
         "appsId" => URI.encode_www_form(apps_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Deletes the specified service and all enclosed versions.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource requested. Example: apps/myapp/services/default.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_delete(connection, apps_id, services_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/apps/{appsId}/services/{servicesId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Gets the current configuration of the specified service.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource requested. Example: apps/myapp/services/default.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Service{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Service.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_get(connection, apps_id, services_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/services/{servicesId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Service{})
  end

  @doc """
  Lists all the services in the application.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;parent&#x60;. Name of the parent Application resource. Example: apps/myapp.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :page_token (String): Continuation token for fetching the next page of results.
    - :page_size (Integer): Maximum results to return per page.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.ListServicesResponse{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.ListServicesResponse.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_list(connection, apps_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/services", %{
         "appsId" => URI.encode_www_form(apps_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.ListServicesResponse{})
  end

  @doc """
  Updates the configuration of the specified service.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource to update. Example: apps/myapp/services/default.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :update_mask (String): Standard field mask for the set of fields to be updated.
    - :migrate_traffic (Boolean): Set to true to gradually shift traffic to one or more versions that you specify. By default, traffic is shifted immediately. For gradual traffic migration, the target versions must be located within instances that are configured for both warmup requests (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#inboundservicetype) and automatic scaling (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#automaticscaling). You must specify the shardBy (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services#shardby) field in the Service resource. Gradual traffic migration is not supported in the App Engine flexible environment. For examples, see Migrating and Splitting Traffic (https://cloud.google.com/appengine/docs/admin-api/migrating-splitting-traffic).
    - :body (Service): 

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_patch(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_patch(connection, apps_id, services_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"updateMask" => :query,
      :"migrateTraffic" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/apps/{appsId}/services/{servicesId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Deploys code and resource files to a new version.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;parent&#x60;. Name of the parent resource to create this version under. Example: apps/myapp/services/default.
  - services_id (String): Part of &#x60;parent&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :body (Version): 

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_create(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_create(connection, apps_id, services_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Deletes an existing Version resource.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - versions_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_delete(connection, apps_id, services_id, versions_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions/{versionsId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id),
         "versionsId" => URI.encode_www_form(versions_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Gets the specified Version resource. By default, only a BASIC_VIEW will be returned. Specify the FULL_VIEW parameter to get the full resource.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource requested. Example: apps/myapp/services/default/versions/v1.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - versions_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :view (String): Controls the set of fields returned in the Get response.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Version{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Version.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_get(connection, apps_id, services_id, versions_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"view" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions/{versionsId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id),
         "versionsId" => URI.encode_www_form(versions_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Version{})
  end

  @doc """
  Enables debugging on a VM instance. This allows you to use the SSH command to connect to the virtual machine where the instance lives. While in \&quot;debug mode\&quot;, the instance continues to serve live traffic. You should delete the instance when you are done debugging and then allow the system to take over and determine if another instance should be started.Only applicable for instances in App Engine flexible environment.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource requested. Example: apps/myapp/services/default/versions/v1/instances/instance-1.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - versions_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - instances_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :body (DebugInstanceRequest): 

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_instances_debug(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_instances_debug(connection, apps_id, services_id, versions_id, instances_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}:debug", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id),
         "versionsId" => URI.encode_www_form(versions_id),
         "instancesId" => URI.encode_www_form(instances_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Stops a running instance.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource requested. Example: apps/myapp/services/default/versions/v1/instances/instance-1.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - versions_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - instances_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_instances_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_instances_delete(connection, apps_id, services_id, versions_id, instances_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id),
         "versionsId" => URI.encode_www_form(versions_id),
         "instancesId" => URI.encode_www_form(instances_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end

  @doc """
  Gets instance information.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource requested. Example: apps/myapp/services/default/versions/v1/instances/instance-1.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - versions_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - instances_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Instance{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_instances_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Instance.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_instances_get(connection, apps_id, services_id, versions_id, instances_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances/{instancesId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id),
         "versionsId" => URI.encode_www_form(versions_id),
         "instancesId" => URI.encode_www_form(instances_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Instance{})
  end

  @doc """
  Lists the instances of a version.Tip: To aggregate details about instances over time, see the Stackdriver Monitoring API (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list).

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;parent&#x60;. Name of the parent Version resource. Example: apps/myapp/services/default/versions/v1.
  - services_id (String): Part of &#x60;parent&#x60;. See documentation of &#x60;appsId&#x60;.
  - versions_id (String): Part of &#x60;parent&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :page_token (String): Continuation token for fetching the next page of results.
    - :page_size (Integer): Maximum results to return per page.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.ListInstancesResponse{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_instances_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.ListInstancesResponse.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_instances_list(connection, apps_id, services_id, versions_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions/{versionsId}/instances", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id),
         "versionsId" => URI.encode_www_form(versions_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.ListInstancesResponse{})
  end

  @doc """
  Lists the versions of a service.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;parent&#x60;. Name of the parent Service resource. Example: apps/myapp/services/default.
  - services_id (String): Part of &#x60;parent&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :page_token (String): Continuation token for fetching the next page of results.
    - :page_size (Integer): Maximum results to return per page.
    - :view (String): Controls the set of fields returned in the List response.

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.ListVersionsResponse{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.ListVersionsResponse.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_list(connection, apps_id, services_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query,
      :"view" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.ListVersionsResponse{})
  end

  @doc """
  Updates the specified Version resource. You can specify the following fields depending on the App Engine environment and type of scaling that the version resource uses: serving_status (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.serving_status):  For Version resources that use basic scaling, manual scaling, or run in  the App Engine flexible environment. instance_class (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.instance_class):  For Version resources that run in the App Engine standard environment. automatic_scaling.min_idle_instances (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine standard environment. automatic_scaling.max_idle_instances (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine standard environment. automatic_scaling.min_total_instances (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine Flexible environment. automatic_scaling.max_total_instances (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine Flexible environment. automatic_scaling.cool_down_period_sec (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine Flexible environment. automatic_scaling.cpu_utilization.target_utilization (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):  For Version resources that use automatic scaling and run in the App  Engine Flexible environment.

  ## Parameters

  - connection (GoogleApi.AppEngine.V1.Connection): Connection to server
  - apps_id (String): Part of &#x60;name&#x60;. Name of the resource to update. Example: apps/myapp/services/default/versions/1.
  - services_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - versions_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;appsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :callback (String): JSONP
    - :__/xgafv (String): V1 error format.
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :update_mask (String): Standard field mask for the set of fields to be updated.
    - :body (Version): 

  ## Returns

  {:ok, %GoogleApi.AppEngine.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec appengine_apps_services_versions_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.AppEngine.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def appengine_apps_services_versions_patch(connection, apps_id, services_id, versions_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"callback" => :query,
      :"$.xgafv" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"updateMask" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/apps/{appsId}/services/{servicesId}/versions/{versionsId}", %{
         "appsId" => URI.encode_www_form(apps_id),
         "servicesId" => URI.encode_www_form(services_id),
         "versionsId" => URI.encode_www_form(versions_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppEngine.V1.Model.Operation{})
  end
end
