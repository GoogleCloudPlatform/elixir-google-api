# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AppEngine.V1.Model.Location do
  @moduledoc """
  A resource that represents Google Cloud Platform location.

  ## Attributes

  - labels (Map[String, String]): Cross-service attributes for the location. For example {\&quot;cloud.googleapis.com/region\&quot;: \&quot;us-east1\&quot;}  Defaults to: `null`.
  - locationId (String): The canonical id for this location. For example: \&quot;us-east1\&quot;. Defaults to: `null`.
  - metadata (Object): Service-specific metadata. For example the available capacity at the given location. Defaults to: `null`.
  - name (String): Resource name for the location, which may vary between implementations. For example: \&quot;projects/example-project/locations/us-east1\&quot; Defaults to: `null`.
  """

  defstruct [
    :"labels",
    :"locationId",
    :"metadata",
    :"name"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.AppEngine.V1.Model.Location do
  import GoogleApi.AppEngine.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"metadata", :struct, GoogleApi.AppEngine.V1.Model.Object, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppEngine.V1.Model.Location do
  def encode(value, options) do
    GoogleApi.AppEngine.V1.Deserializer.serialize_non_nil(value, options)
  end
end

