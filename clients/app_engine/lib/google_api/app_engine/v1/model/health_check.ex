# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AppEngine.V1.Model.HealthCheck do
  @moduledoc """
  Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. Only applicable for instances in App Engine flexible environment.

  ## Attributes

  - host (String.t): Host header to send when performing an HTTP health check. Example: \&quot;myapp.appspot.com\&quot; Defaults to: `null`.
  - checkInterval (String.t): Interval between health checks. Defaults to: `null`.
  - disableHealthCheck (boolean()): Whether to explicitly disable health checks for this instance. Defaults to: `null`.
  - healthyThreshold (integer()): Number of consecutive successful health checks required before receiving traffic. Defaults to: `null`.
  - restartThreshold (integer()): Number of consecutive failed health checks required before an instance is restarted. Defaults to: `null`.
  - timeout (String.t): Time before the health check is considered failed. Defaults to: `null`.
  - unhealthyThreshold (integer()): Number of consecutive failed health checks required before removing traffic. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :host => any(),
          :checkInterval => any(),
          :disableHealthCheck => any(),
          :healthyThreshold => any(),
          :restartThreshold => any(),
          :timeout => any(),
          :unhealthyThreshold => any()
        }

  field(:host)
  field(:checkInterval)
  field(:disableHealthCheck)
  field(:healthyThreshold)
  field(:restartThreshold)
  field(:timeout)
  field(:unhealthyThreshold)
end

defimpl Poison.Decoder, for: GoogleApi.AppEngine.V1.Model.HealthCheck do
  def decode(value, options) do
    GoogleApi.AppEngine.V1.Model.HealthCheck.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppEngine.V1.Model.HealthCheck do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
