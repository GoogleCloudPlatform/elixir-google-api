# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RealTimeBidding.V1.Model.ServingStatus do
  @moduledoc """
  Serving status of the creative for a transaction type or a region.

  ## Attributes

  *   `status` (*type:* `String.t`, *default:* `nil`) - Serving status for the given transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Can be used to filter the response of the creatives.list method.
  *   `topics` (*type:* `list(GoogleApi.RealTimeBidding.V1.Model.PolicyTopicEntry.t)`, *default:* `nil`) - Policy topics related to the serving decision for this transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Topics may be present only if status is DISAPPROVED.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :status => String.t(),
          :topics => list(GoogleApi.RealTimeBidding.V1.Model.PolicyTopicEntry.t())
        }

  field(:status)
  field(:topics, as: GoogleApi.RealTimeBidding.V1.Model.PolicyTopicEntry, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.RealTimeBidding.V1.Model.ServingStatus do
  def decode(value, options) do
    GoogleApi.RealTimeBidding.V1.Model.ServingStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.RealTimeBidding.V1.Model.ServingStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
