# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RealTimeBidding.V1.Model.CreativeServingDecision do
  @moduledoc """
  Top level status and detected attributes of a creative.

  ## Attributes

  *   `adTechnologyProviders` (*type:* `GoogleApi.RealTimeBidding.V1.Model.AdTechnologyProviders.t`, *default:* `nil`) - The detected ad technology providers.
  *   `chinaServingStatus` (*type:* `GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t`, *default:* `nil`) - The serving status of this creative in China. When approved or disapproved, this status applies to both deals and open auction in China. When pending review, this creative is allowed to serve for deals but not for open auction.
  *   `dealsServingStatus` (*type:* `GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t`, *default:* `nil`) - Status of this creative when bidding on PG and PD deals (outside of Russia and China).
  *   `detectedAdvertisers` (*type:* `list(GoogleApi.RealTimeBidding.V1.Model.AdvertiserAndBrand.t)`, *default:* `nil`) - Detected advertisers and brands.
  *   `detectedAttributes` (*type:* `list(String.t)`, *default:* `nil`) - Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
  *   `detectedClickThroughUrls` (*type:* `list(String.t)`, *default:* `nil`) - The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method.
  *   `detectedDomains` (*type:* `list(String.t)`, *default:* `nil`) - The detected domains for this creative.
  *   `detectedLanguages` (*type:* `list(String.t)`, *default:* `nil`) - The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method.
  *   `detectedProductCategories` (*type:* `list(integer())`, *default:* `nil`) - Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method.
  *   `detectedSensitiveCategories` (*type:* `list(integer())`, *default:* `nil`) - Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.
  *   `detectedVendorIds` (*type:* `list(integer())`, *default:* `nil`) - IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
  *   `lastStatusUpdate` (*type:* `DateTime.t`, *default:* `nil`) - The last time the creative status was updated. Can be used to filter the response of the creatives.list method.
  *   `openAuctionServingStatus` (*type:* `GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t`, *default:* `nil`) - Status of this creative when bidding in open auction, private auction, or auction packages (outside of Russia and China).
  *   `russiaServingStatus` (*type:* `GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t`, *default:* `nil`) - The serving status of this creative in Russia. When approved or disapproved, this status applies to both deals and open auction in Russia. When pending review, this creative is allowed to serve for deals but not for open auction.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adTechnologyProviders => GoogleApi.RealTimeBidding.V1.Model.AdTechnologyProviders.t(),
          :chinaServingStatus => GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t(),
          :dealsServingStatus => GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t(),
          :detectedAdvertisers => list(GoogleApi.RealTimeBidding.V1.Model.AdvertiserAndBrand.t()),
          :detectedAttributes => list(String.t()),
          :detectedClickThroughUrls => list(String.t()),
          :detectedDomains => list(String.t()),
          :detectedLanguages => list(String.t()),
          :detectedProductCategories => list(integer()),
          :detectedSensitiveCategories => list(integer()),
          :detectedVendorIds => list(integer()),
          :lastStatusUpdate => DateTime.t(),
          :openAuctionServingStatus => GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t(),
          :russiaServingStatus => GoogleApi.RealTimeBidding.V1.Model.ServingStatus.t()
        }

  field(:adTechnologyProviders, as: GoogleApi.RealTimeBidding.V1.Model.AdTechnologyProviders)
  field(:chinaServingStatus, as: GoogleApi.RealTimeBidding.V1.Model.ServingStatus)
  field(:dealsServingStatus, as: GoogleApi.RealTimeBidding.V1.Model.ServingStatus)

  field(:detectedAdvertisers,
    as: GoogleApi.RealTimeBidding.V1.Model.AdvertiserAndBrand,
    type: :list
  )

  field(:detectedAttributes, type: :list)
  field(:detectedClickThroughUrls, type: :list)
  field(:detectedDomains, type: :list)
  field(:detectedLanguages, type: :list)
  field(:detectedProductCategories, type: :list)
  field(:detectedSensitiveCategories, type: :list)
  field(:detectedVendorIds, type: :list)
  field(:lastStatusUpdate, as: DateTime)
  field(:openAuctionServingStatus, as: GoogleApi.RealTimeBidding.V1.Model.ServingStatus)
  field(:russiaServingStatus, as: GoogleApi.RealTimeBidding.V1.Model.ServingStatus)
end

defimpl Poison.Decoder, for: GoogleApi.RealTimeBidding.V1.Model.CreativeServingDecision do
  def decode(value, options) do
    GoogleApi.RealTimeBidding.V1.Model.CreativeServingDecision.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.RealTimeBidding.V1.Model.CreativeServingDecision do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
