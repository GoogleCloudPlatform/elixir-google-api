# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.TagManager.V2.Model.UserPermission do
  @moduledoc """
  Represents a user&#39;s permissions to an account and its container.

  ## Attributes

  - accountAccess (AccountAccess): GTM Account access permissions. Defaults to: `null`.
  - accountId (String): The Account ID uniquely identifies the GTM Account. Defaults to: `null`.
  - containerAccess (List[ContainerAccess]): GTM Container access permissions. Defaults to: `null`.
  - emailAddress (String): User&#39;s email address. Defaults to: `null`.
  - path (String): GTM UserPermission&#39;s API relative path. Defaults to: `null`.
  """

  defstruct [
    :"accountAccess",
    :"accountId",
    :"containerAccess",
    :"emailAddress",
    :"path"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.TagManager.V2.Model.UserPermission do
  import GoogleApi.TagManager.V2.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"accountAccess", :struct, GoogleApi.TagManager.V2.Model.AccountAccess, options)
    |> deserialize(:"containerAccess", :list, GoogleApi.TagManager.V2.Model.ContainerAccess, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TagManager.V2.Model.UserPermission do
  def encode(value, options) do
    GoogleApi.TagManager.V2.Deserializer.serialize_non_nil(value, options)
  end
end

