# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.TagManager.V2.Model.Parameter do
  @moduledoc """
  Represents a Google Tag Manager Parameter.

  ## Attributes

  - key (String.t): The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. Defaults to: `null`.
  - list ([Parameter]): This list parameter&#39;s parameters (keys will be ignored). Defaults to: `null`.
  - map ([Parameter]): This map parameter&#39;s parameters (must have keys; keys must be unique). Defaults to: `null`.
  - type (String.t): The parameter type. Valid values are:  - boolean: The value represents a boolean, represented as &#39;true&#39; or &#39;false&#39;  - integer: The value represents a 64-bit signed integer value, in base 10  - list: A list of parameters should be specified  - map: A map of parameters should be specified  - template: The value represents any text; this can include variable references (even variable references that might return non-string types) Defaults to: `null`.
    - Enum - one of [boolean, integer, list, map, template, typeUnspecified]
  - value (String.t): A parameter&#39;s value (may contain variable references such as \&quot;{{myVariable}}\&quot;) as appropriate to the specified type. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :key => any(),
          :list => list(GoogleApi.TagManager.V2.Model.Parameter.t()),
          :map => list(GoogleApi.TagManager.V2.Model.Parameter.t()),
          :type => any(),
          :value => any()
        }

  field(:key)
  field(:list, as: GoogleApi.TagManager.V2.Model.Parameter, type: :list)
  field(:map, as: GoogleApi.TagManager.V2.Model.Parameter, type: :list)
  field(:type)
  field(:value)
end

defimpl Poison.Decoder, for: GoogleApi.TagManager.V2.Model.Parameter do
  def decode(value, options) do
    GoogleApi.TagManager.V2.Model.Parameter.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TagManager.V2.Model.Parameter do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
