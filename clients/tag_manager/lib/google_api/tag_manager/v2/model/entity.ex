# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.TagManager.V2.Model.Entity do
  @moduledoc """
  A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.

  ## Attributes

  - changeStatus (String.t): Represents how the entity has been changed in the workspace. Defaults to `nil`.
  - folder (GoogleApi.TagManager.V2.Model.Folder.t): The Folder being represented by the entity. Defaults to `nil`.
  - tag (GoogleApi.TagManager.V2.Model.Tag.t): The tag being represented by the entity. Defaults to `nil`.
  - trigger (GoogleApi.TagManager.V2.Model.Trigger.t): The trigger being represented by the entity. Defaults to `nil`.
  - variable (GoogleApi.TagManager.V2.Model.Variable.t): The variable being represented by the entity. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :changeStatus => String.t(),
          :folder => GoogleApi.TagManager.V2.Model.Folder.t(),
          :tag => GoogleApi.TagManager.V2.Model.Tag.t(),
          :trigger => GoogleApi.TagManager.V2.Model.Trigger.t(),
          :variable => GoogleApi.TagManager.V2.Model.Variable.t()
        }

  field(:changeStatus)
  field(:folder, as: GoogleApi.TagManager.V2.Model.Folder)
  field(:tag, as: GoogleApi.TagManager.V2.Model.Tag)
  field(:trigger, as: GoogleApi.TagManager.V2.Model.Trigger)
  field(:variable, as: GoogleApi.TagManager.V2.Model.Variable)
end

defimpl Poison.Decoder, for: GoogleApi.TagManager.V2.Model.Entity do
  def decode(value, options) do
    GoogleApi.TagManager.V2.Model.Entity.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TagManager.V2.Model.Entity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
