# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Fitness.V1.Model.ListSessionsResponse do
  @moduledoc """


  ## Attributes

  *   `deletedSession` (*type:* `list(GoogleApi.Fitness.V1.Model.Session.t)`, *default:* `nil`) - If <code>includeDeleted</code> is set to true in the request, and
      <var>startTime</var> and <var>endTime</var> are omitted, this will include
      sessions which were deleted since the last sync.
  *   `hasMoreData` (*type:* `boolean()`, *default:* `nil`) - Flag to indicate server has more data to transfer.
      DO NOT USE THIS FIELD. It is never populated in responses from the server.
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - The sync token which is used to sync further changes. This will only be
      provided if both <var>startTime</var> and <var>endTime</var> are omitted
      from the request.
  *   `session` (*type:* `list(GoogleApi.Fitness.V1.Model.Session.t)`, *default:* `nil`) - Sessions with an end time that is between <var>startTime</var> and
      <var>endTime</var> of the request.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deletedSession => list(GoogleApi.Fitness.V1.Model.Session.t()),
          :hasMoreData => boolean(),
          :nextPageToken => String.t(),
          :session => list(GoogleApi.Fitness.V1.Model.Session.t())
        }

  field(:deletedSession, as: GoogleApi.Fitness.V1.Model.Session, type: :list)
  field(:hasMoreData)
  field(:nextPageToken)
  field(:session, as: GoogleApi.Fitness.V1.Model.Session, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Fitness.V1.Model.ListSessionsResponse do
  def decode(value, options) do
    GoogleApi.Fitness.V1.Model.ListSessionsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Fitness.V1.Model.ListSessionsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
