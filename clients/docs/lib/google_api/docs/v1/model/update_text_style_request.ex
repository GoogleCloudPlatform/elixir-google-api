# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Docs.V1.Model.UpdateTextStyleRequest do
  @moduledoc """
  Update the styling of text.

  ## Attributes

  *   `fields` (*type:* `String.t`, *default:* `nil`) - The fields that should be updated.

      At least one field must be specified. The root `text_style` is implied and
      should not be specified. A single `"*"` can be used as short-hand for
      listing every field.

      For example, to update the text style to bold, set `fields` to `"bold"`.

      To reset a property to its default value, include its field name in the
      field mask but leave the field itself unset.
  *   `range` (*type:* `GoogleApi.Docs.V1.Model.Range.t`, *default:* `nil`) - The range of text to style.

      The range may be extended to include adjacent newlines.

      If the range fully contains a paragraph belonging to a list, the
      paragraph's bullet is also updated with the matching text style.

      Ranges cannot be inserted inside a relative UpdateTextStyleRequest.
  *   `textStyle` (*type:* `GoogleApi.Docs.V1.Model.TextStyle.t`, *default:* `nil`) - The styles to set on the text.

      If the value for a particular style matches that of the parent, that style
      will be set to inherit.

      Certain text style changes may cause other changes in order to to mirror
      the behavior of the Docs editor. See the documentation of
      TextStyle for more information.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fields => String.t(),
          :range => GoogleApi.Docs.V1.Model.Range.t(),
          :textStyle => GoogleApi.Docs.V1.Model.TextStyle.t()
        }

  field(:fields)
  field(:range, as: GoogleApi.Docs.V1.Model.Range)
  field(:textStyle, as: GoogleApi.Docs.V1.Model.TextStyle)
end

defimpl Poison.Decoder, for: GoogleApi.Docs.V1.Model.UpdateTextStyleRequest do
  def decode(value, options) do
    GoogleApi.Docs.V1.Model.UpdateTextStyleRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Docs.V1.Model.UpdateTextStyleRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
