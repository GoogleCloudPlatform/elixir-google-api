# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Docs.V1.Model.MergeTableCellsRequest do
  @moduledoc """
  Merges cells in a Table.

  ## Attributes

  *   `tableRange` (*type:* `GoogleApi.Docs.V1.Model.TableRange.t`, *default:* `nil`) - The table range specifying which cells of the table to merge.

      Any text in the cells being merged will be concatenated and stored in the
      "head" cell of the range. This is the upper-left cell of the range when
      the content direction is left to right, and the upper-right cell of the
      range otherwise.

      If the range is non-rectangular (which can occur in some cases where the
      range covers cells that are already merged or where the table is
      non-rectangular), a 400 bad request error is returned.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :tableRange => GoogleApi.Docs.V1.Model.TableRange.t()
        }

  field(:tableRange, as: GoogleApi.Docs.V1.Model.TableRange)
end

defimpl Poison.Decoder, for: GoogleApi.Docs.V1.Model.MergeTableCellsRequest do
  def decode(value, options) do
    GoogleApi.Docs.V1.Model.MergeTableCellsRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Docs.V1.Model.MergeTableCellsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
