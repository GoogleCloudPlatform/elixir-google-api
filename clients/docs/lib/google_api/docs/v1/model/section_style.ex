# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Docs.V1.Model.SectionStyle do
  @moduledoc """
  The styling that applies to a section.

  ## Attributes

  *   `columnProperties` (*type:* `list(GoogleApi.Docs.V1.Model.SectionColumnProperties.t)`, *default:* `nil`) - The section's columns properties.

      If empty, the section contains one column with the default properties in
      the Docs editor.
  *   `columnSeparatorStyle` (*type:* `String.t`, *default:* `nil`) - The style of column separators.

      This style can be set even when there is one column in the section.
  *   `contentDirection` (*type:* `String.t`, *default:* `nil`) - The content direction of this section. If unset, the value defaults to
      LEFT_TO_RIGHT.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columnProperties => list(GoogleApi.Docs.V1.Model.SectionColumnProperties.t()),
          :columnSeparatorStyle => String.t(),
          :contentDirection => String.t()
        }

  field(:columnProperties, as: GoogleApi.Docs.V1.Model.SectionColumnProperties, type: :list)
  field(:columnSeparatorStyle)
  field(:contentDirection)
end

defimpl Poison.Decoder, for: GoogleApi.Docs.V1.Model.SectionStyle do
  def decode(value, options) do
    GoogleApi.Docs.V1.Model.SectionStyle.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Docs.V1.Model.SectionStyle do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
