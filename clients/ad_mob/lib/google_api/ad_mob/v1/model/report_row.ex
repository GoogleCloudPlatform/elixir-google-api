# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AdMob.V1.Model.ReportRow do
  @moduledoc """
  A row of the returning report.

  ## Attributes

  *   `dimensionValues` (*type:* `%{optional(String.t) => GoogleApi.AdMob.V1.Model.ReportRowDimensionValue.t}`, *default:* `nil`) - Map of dimension values in a row, with keys as enum name of the dimensions.
  *   `metricValues` (*type:* `%{optional(String.t) => GoogleApi.AdMob.V1.Model.ReportRowMetricValue.t}`, *default:* `nil`) - Map of metric values in a row, with keys as enum name of the metrics. If
      a metric being requested has no value returned, the map will not include
      it.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dimensionValues => %{
            optional(String.t()) => GoogleApi.AdMob.V1.Model.ReportRowDimensionValue.t()
          },
          :metricValues => %{
            optional(String.t()) => GoogleApi.AdMob.V1.Model.ReportRowMetricValue.t()
          }
        }

  field(:dimensionValues, as: GoogleApi.AdMob.V1.Model.ReportRowDimensionValue, type: :map)
  field(:metricValues, as: GoogleApi.AdMob.V1.Model.ReportRowMetricValue, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.AdMob.V1.Model.ReportRow do
  def decode(value, options) do
    GoogleApi.AdMob.V1.Model.ReportRow.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AdMob.V1.Model.ReportRow do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
