# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_FaceDetectionConfig do
  @moduledoc """
  Config for FACE_DETECTION.

  ## Attributes

  *   `includeAttributes` (*type:* `boolean()`, *default:* `nil`) - Whether to enable face attributes detection, such as glasses, dark_glasses, mouth_open etc. Ignored if 'include_bounding_boxes' is set to false.
  *   `includeBoundingBoxes` (*type:* `boolean()`, *default:* `nil`) - Whether bounding boxes are included in the face annotation output.
  *   `model` (*type:* `String.t`, *default:* `nil`) - Model to use for face detection. Supported values: "builtin/stable" (the default if unset) and "builtin/latest".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :includeAttributes => boolean(),
          :includeBoundingBoxes => boolean(),
          :model => String.t()
        }

  field(:includeAttributes)
  field(:includeBoundingBoxes)
  field(:model)
end

defimpl Poison.Decoder,
  for: GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_FaceDetectionConfig do
  def decode(value, options) do
    GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_FaceDetectionConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_FaceDetectionConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
