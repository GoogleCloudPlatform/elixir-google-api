# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Genomics.V1.Model.Experiment do
  @moduledoc """


  ## Attributes

  - instrumentModel (String.t): The instrument model used as part of this experiment. This maps to sequencing technology in the SAM spec. Defaults to: `null`.
  - libraryId (String.t): A client-supplied library identifier; a library is a collection of DNA fragments which have been prepared for sequencing from a sample. This field is important for quality control as error or bias can be introduced during sample preparation. Defaults to: `null`.
  - platformUnit (String.t): The platform unit used as part of this experiment, for example flowcell-barcode.lane for Illumina or slide for SOLiD. Corresponds to the @RG PU field in the SAM spec. Defaults to: `null`.
  - sequencingCenter (String.t): The sequencing center used as part of this experiment. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :instrumentModel => any(),
          :libraryId => any(),
          :platformUnit => any(),
          :sequencingCenter => any()
        }

  field(:instrumentModel)
  field(:libraryId)
  field(:platformUnit)
  field(:sequencingCenter)
end

defimpl Poison.Decoder, for: GoogleApi.Genomics.V1.Model.Experiment do
  def decode(value, options) do
    GoogleApi.Genomics.V1.Model.Experiment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Genomics.V1.Model.Experiment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
