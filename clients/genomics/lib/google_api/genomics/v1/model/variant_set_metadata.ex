# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Genomics.V1.Model.VariantSetMetadata do
  @moduledoc """
  Metadata describes a single piece of variant call metadata. These data include a top level key and either a single value string (value) or a list of key-value pairs (info.) Value and info are mutually exclusive.

  ## Attributes

  - info (%{optional(String.t) &#x3D;&gt; [ErrorUnknown]}): Remaining structured metadata key-value pairs. This must be of the form map&lt;string, string[]&gt; (string key mapping to a list of string values). Defaults to: `null`.
  - description (String.t): A textual description of this metadata. Defaults to: `null`.
  - id (String.t): User-provided ID field, not enforced by this API. Two or more pieces of structured metadata with identical id and key fields are considered equivalent. Defaults to: `null`.
  - key (String.t): The top-level key. Defaults to: `null`.
  - number (String.t): The number of values that can be included in a field described by this metadata. Defaults to: `null`.
  - type (String.t): The type of data. Possible types include: Integer, Float, Flag, Character, and String. Defaults to: `null`.
    - Enum - one of [TYPE_UNSPECIFIED, INTEGER, FLOAT, FLAG, CHARACTER, STRING]
  - value (String.t): The value field for simple metadata Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :info => map(),
          :description => any(),
          :id => any(),
          :key => any(),
          :number => any(),
          :type => any(),
          :value => any()
        }

  field(:info, type: :map)
  field(:description)
  field(:id)
  field(:key)
  field(:number)
  field(:type)
  field(:value)
end

defimpl Poison.Decoder, for: GoogleApi.Genomics.V1.Model.VariantSetMetadata do
  def decode(value, options) do
    GoogleApi.Genomics.V1.Model.VariantSetMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Genomics.V1.Model.VariantSetMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
