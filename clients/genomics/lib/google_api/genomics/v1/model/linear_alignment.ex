# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Genomics.V1.Model.LinearAlignment do
  @moduledoc """
  A linear alignment can be represented by one CIGAR string. Describes the mapped position and local alignment of the read to the reference.

  ## Attributes

  - cigar (List[CigarUnit]): Represents the local alignment of this sequence (alignment matches, indels, etc) against the reference. Defaults to: `null`.
  - mappingQuality (Integer): The mapping quality of this alignment. Represents how likely the read maps to this position as opposed to other locations.  Specifically, this is -10 log10 Pr(mapping position is wrong), rounded to the nearest integer. Defaults to: `null`.
  - position (Position): The position of this alignment. Defaults to: `null`.
  """

  defstruct [
    :"cigar",
    :"mappingQuality",
    :"position"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Genomics.V1.Model.LinearAlignment do
  import GoogleApi.Genomics.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"cigar", :list, GoogleApi.Genomics.V1.Model.CigarUnit, options)
    |> deserialize(:"position", :struct, GoogleApi.Genomics.V1.Model.Position, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Genomics.V1.Model.LinearAlignment do
  def encode(value, options) do
    GoogleApi.Genomics.V1.Deserializer.serialize_non_nil(value, options)
  end
end

