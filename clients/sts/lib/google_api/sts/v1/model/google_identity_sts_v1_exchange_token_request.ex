# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.STS.V1.Model.GoogleIdentityStsV1ExchangeTokenRequest do
  @moduledoc """
  Request message for ExchangeToken.

  ## Attributes

  *   `grantType` (*type:* `String.t`, *default:* `nil`) - Required. The grant type. Must be `urn:ietf:params:oauth:grant-type:token-exchange`, which indicates a token exchange.
  *   `options` (*type:* `String.t`, *default:* `nil`) - A set of features that Security Token Service supports, in addition to the standard OAuth 2.0 token exchange, formatted as a serialized JSON object of Options.
  *   `requestedTokenType` (*type:* `String.t`, *default:* `nil`) - Required. An identifier for the type of requested security token. Must be `urn:ietf:params:oauth:token-type:access_token`.
  *   `subjectToken` (*type:* `String.t`, *default:* `nil`) - Required. The input token. You can use a Google-issued OAuth 2.0 access token with this field to obtain an access token with new security attributes applied, such as a Credential Access Boundary. If an access token already contains security attributes, you cannot apply additional security attributes.
  *   `subjectTokenType` (*type:* `String.t`, *default:* `nil`) - Required. An identifier that indicates the type of the security token in the `subject_token` parameter. Must be `urn:ietf:params:oauth:token-type:access_token`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :grantType => String.t(),
          :options => String.t(),
          :requestedTokenType => String.t(),
          :subjectToken => String.t(),
          :subjectTokenType => String.t()
        }

  field(:grantType)
  field(:options)
  field(:requestedTokenType)
  field(:subjectToken)
  field(:subjectTokenType)
end

defimpl Poison.Decoder, for: GoogleApi.STS.V1.Model.GoogleIdentityStsV1ExchangeTokenRequest do
  def decode(value, options) do
    GoogleApi.STS.V1.Model.GoogleIdentityStsV1ExchangeTokenRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.STS.V1.Model.GoogleIdentityStsV1ExchangeTokenRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
