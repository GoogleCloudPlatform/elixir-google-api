# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SecretManager.V1.Model.Rotation do
  @moduledoc """
  The rotation time and period for a Secret. At next_rotation_time, Secret Manager will send a Pub/Sub notification to the topics configured on the Secret. Secret.topics must be set to configure rotation.

  ## Attributes

  *   `nextRotationTime` (*type:* `DateTime.t`, *default:* `nil`) - Optional. Timestamp in UTC at which the Secret is scheduled to rotate. next_rotation_time MUST be set if rotation_period is set.
  *   `rotationPeriod` (*type:* `String.t`, *default:* `nil`) - Input only. The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years). If rotation_period is set, next_rotation_time must be set. next_rotation_time will be advanced by this period when the service automatically sends rotation notifications.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :nextRotationTime => DateTime.t() | nil,
          :rotationPeriod => String.t() | nil
        }

  field(:nextRotationTime, as: DateTime)
  field(:rotationPeriod)
end

defimpl Poison.Decoder, for: GoogleApi.SecretManager.V1.Model.Rotation do
  def decode(value, options) do
    GoogleApi.SecretManager.V1.Model.Rotation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SecretManager.V1.Model.Rotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
