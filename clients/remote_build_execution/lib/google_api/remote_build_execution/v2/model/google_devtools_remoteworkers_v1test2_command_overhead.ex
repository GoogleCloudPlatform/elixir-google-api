# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemoteworkersV1test2CommandOverhead do
  @moduledoc """
  DEPRECATED - use CommandResult instead.
  Can be used as part of CompleteRequest.metadata, or are part of a more
  sophisticated message.

  ## Attributes

  *   `duration` (*type:* `String.t`, *default:* `nil`) - The elapsed time between calling Accept and Complete. The server will also
      have its own idea of what this should be, but this excludes the overhead of
      the RPCs and the bot response time.
  *   `overhead` (*type:* `String.t`, *default:* `nil`) - The amount of time *not* spent executing the command (ie
      uploading/downloading files).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :duration => String.t(),
          :overhead => String.t()
        }

  field(:duration)
  field(:overhead)
end

defimpl Poison.Decoder,
  for: GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemoteworkersV1test2CommandOverhead do
  def decode(value, options) do
    GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemoteworkersV1test2CommandOverhead.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemoteworkersV1test2CommandOverhead do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
