# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest do
  @moduledoc """
  The request used for `CreateWorkerPool`.

  ## Attributes

  *   `parent` (*type:* `String.t`, *default:* `nil`) - Resource name of the instance in which to create the new worker pool.
      Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
  *   `poolId` (*type:* `String.t`, *default:* `nil`) - ID of the created worker pool.
      A valid pool ID must:
      be 6-50 characters long,
      contain only lowercase letters, digits, hyphens and underscores,
      start with a lowercase letter, and
      end with a lowercase letter or a digit.
  *   `workerPool` (*type:* `GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.t`, *default:* `nil`) - Specifies the worker pool to create.
      The name in the worker pool, if specified, is ignored.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :parent => String.t(),
          :poolId => String.t(),
          :workerPool =>
            GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.t()
        }

  field(:parent)
  field(:poolId)

  field(:workerPool,
    as:
      GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool
  )
end

defimpl Poison.Decoder,
  for:
    GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest do
  def decode(value, options) do
    GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
