# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RemoteBuildExecution.V2.Model.BuildBazelSemverSemVer do
  @moduledoc """
  The full version of a given tool.

  ## Attributes

  *   `major` (*type:* `integer()`, *default:* `nil`) - The major version, e.g 10 for 10.2.3.
  *   `minor` (*type:* `integer()`, *default:* `nil`) - The minor version, e.g. 2 for 10.2.3.
  *   `patch` (*type:* `integer()`, *default:* `nil`) - The patch version, e.g 3 for 10.2.3.
  *   `prerelease` (*type:* `String.t`, *default:* `nil`) - The pre-release version. Either this field or major/minor/patch fields must be filled. They are mutually exclusive. Pre-release versions are assumed to be earlier than any released versions.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :major => integer() | nil,
          :minor => integer() | nil,
          :patch => integer() | nil,
          :prerelease => String.t() | nil
        }

  field(:major)
  field(:minor)
  field(:patch)
  field(:prerelease)
end

defimpl Poison.Decoder, for: GoogleApi.RemoteBuildExecution.V2.Model.BuildBazelSemverSemVer do
  def decode(value, options) do
    GoogleApi.RemoteBuildExecution.V2.Model.BuildBazelSemverSemVer.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.RemoteBuildExecution.V2.Model.BuildBazelSemverSemVer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
