# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest do
  @moduledoc """
  The request used for `UpdateInstance`.

  ## Attributes

  *   `instance` (*type:* `GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.t`, *default:* `nil`) - Specifies the instance to update.
  *   `loggingEnabled` (*type:* `boolean()`, *default:* `nil`) - Deprecated, use instance.logging_enabled instead.
      Whether to enable Stackdriver logging for this instance.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Deprecated, use instance.Name instead.
      Name of the instance to update.
      Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
  *   `updateMask` (*type:* `String.t`, *default:* `nil`) - The update mask applies to instance. For the `FieldMask` definition, see
      https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
      If an empty update_mask is provided, only the non-default valued field in
      the worker pool field will be updated. Note that in order to update a field
      to the default value (zero, false, empty string) an explicit update_mask
      must be provided.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :instance =>
            GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.t(),
          :loggingEnabled => boolean(),
          :name => String.t(),
          :updateMask => String.t()
        }

  field(:instance,
    as:
      GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance
  )

  field(:loggingEnabled)
  field(:name)
  field(:updateMask)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest do
  def decode(value, options) do
    GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.RemoteBuildExecution.V2.Model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
