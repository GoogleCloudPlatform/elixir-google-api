# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FirebaseHosting.V1beta1.Model.Domain do
  @moduledoc """
  The intended behavior and status information of a domain.

  ## Attributes

  *   `domainName` (*type:* `String.t`, *default:* `nil`) - Required. The domain name of the association.
  *   `domainRedirect` (*type:* `GoogleApi.FirebaseHosting.V1beta1.Model.DomainRedirect.t`, *default:* `nil`) - If set, the domain should redirect with the provided parameters.
  *   `provisioning` (*type:* `GoogleApi.FirebaseHosting.V1beta1.Model.DomainProvisioning.t`, *default:* `nil`) - Output only. Information about the provisioning of certificates and the health of the DNS resolution for the domain.
  *   `site` (*type:* `String.t`, *default:* `nil`) - Required. The site name of the association.
  *   `status` (*type:* `String.t`, *default:* `nil`) - Output only. Additional status of the domain association.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which the domain was last updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :domainName => String.t(),
          :domainRedirect => GoogleApi.FirebaseHosting.V1beta1.Model.DomainRedirect.t(),
          :provisioning => GoogleApi.FirebaseHosting.V1beta1.Model.DomainProvisioning.t(),
          :site => String.t(),
          :status => String.t(),
          :updateTime => DateTime.t()
        }

  field(:domainName)
  field(:domainRedirect, as: GoogleApi.FirebaseHosting.V1beta1.Model.DomainRedirect)
  field(:provisioning, as: GoogleApi.FirebaseHosting.V1beta1.Model.DomainProvisioning)
  field(:site)
  field(:status)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.FirebaseHosting.V1beta1.Model.Domain do
  def decode(value, options) do
    GoogleApi.FirebaseHosting.V1beta1.Model.Domain.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FirebaseHosting.V1beta1.Model.Domain do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
