# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FirebaseHosting.V1beta1.Model.SiteConfig do
  @moduledoc """
  A `SiteConfig` contains metadata associated with a specific site that controls Firebase Hosting serving behavior

  ## Attributes

  *   `cloudLoggingEnabled` (*type:* `boolean()`, *default:* `nil`) - Whether or not web requests made by site visitors are logged via Cloud Logging.
  *   `maxVersions` (*type:* `String.t`, *default:* `nil`) - The number of FINALIZED versions that will be held for a site before automatic deletion. When a new version is deployed, content for versions in storage in excess of this number will be deleted, and will no longer be billed for storage usage. Oldest versions will be deleted first; sites are created with an unlimited number of max_versions by default.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cloudLoggingEnabled => boolean() | nil,
          :maxVersions => String.t() | nil
        }

  field(:cloudLoggingEnabled)
  field(:maxVersions)
end

defimpl Poison.Decoder, for: GoogleApi.FirebaseHosting.V1beta1.Model.SiteConfig do
  def decode(value, options) do
    GoogleApi.FirebaseHosting.V1beta1.Model.SiteConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FirebaseHosting.V1beta1.Model.SiteConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
