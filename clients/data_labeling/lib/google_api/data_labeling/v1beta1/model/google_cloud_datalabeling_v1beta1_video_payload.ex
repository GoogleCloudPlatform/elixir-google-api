# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1VideoPayload do
  @moduledoc """
  Container of information of a video.

  ## Attributes

  *   `frameRate` (*type:* `number()`, *default:* `nil`) - FPS of the video.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Video format.
  *   `signedUri` (*type:* `String.t`, *default:* `nil`) - Signed uri of the video file in the service bucket.
  *   `videoThumbnails` (*type:* `list(GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1VideoThumbnail.t)`, *default:* `nil`) - The list of video thumbnails.
  *   `videoUri` (*type:* `String.t`, *default:* `nil`) - Video uri from the user bucket.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :frameRate => number(),
          :mimeType => String.t(),
          :signedUri => String.t(),
          :videoThumbnails =>
            list(
              GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1VideoThumbnail.t()
            ),
          :videoUri => String.t()
        }

  field(:frameRate)
  field(:mimeType)
  field(:signedUri)

  field(:videoThumbnails,
    as: GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1VideoThumbnail,
    type: :list
  )

  field(:videoUri)
end

defimpl Poison.Decoder,
  for: GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1VideoPayload do
  def decode(value, options) do
    GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1VideoPayload.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1VideoPayload do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
