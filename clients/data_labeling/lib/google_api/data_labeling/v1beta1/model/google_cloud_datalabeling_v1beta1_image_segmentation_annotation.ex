# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation do
  @moduledoc """
  Image segmentation annotation.

  ## Attributes

  *   `annotationColors` (*type:* `%{optional(String.t) => GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1AnnotationSpec.t}`, *default:* `nil`) - The mapping between rgb color and annotation spec. The key is the rgb color represented in format of rgb(0, 0, 0). The value is the AnnotationSpec.
  *   `imageBytes` (*type:* `String.t`, *default:* `nil`) - A byte string of a full image's color map.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Image format.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotationColors => %{
            optional(String.t()) =>
              GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1AnnotationSpec.t()
          },
          :imageBytes => String.t(),
          :mimeType => String.t()
        }

  field(:annotationColors,
    as: GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1AnnotationSpec,
    type: :map
  )

  field(:imageBytes)
  field(:mimeType)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation do
  def decode(value, options) do
    GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.DataLabeling.V1beta1.Model.GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
