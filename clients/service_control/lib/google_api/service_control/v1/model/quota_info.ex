# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceControl.V1.Model.QuotaInfo do
  @moduledoc """
  Contains the quota information for a quota check response.

  ## Attributes

  - limitExceeded ([String.t]): Quota Metrics that have exceeded quota limits. For QuotaGroup-based quota, this is QuotaGroup.name For QuotaLimit-based quota, this is QuotaLimit.name See: google.api.Quota Deprecated: Use quota_metrics to get per quota group limit exceeded status. Defaults to: `null`.
  - quotaConsumed (%{optional(String.t) &#x3D;&gt; integer()}): Map of quota group name to the actual number of tokens consumed. If the quota check was not successful, then this will not be populated due to no quota consumption.  We are not merging this field with &#39;quota_metrics&#39; field because of the complexity of scaling in Chemist client code base. For simplicity, we will keep this field for Castor (that scales quota usage) and &#39;quota_metrics&#39; for SuperQuota (that doesn&#39;t scale quota usage).  Defaults to: `null`.
  - quotaMetrics ([MetricValueSet]): Quota metrics to indicate the usage. Depending on the check request, one or more of the following metrics will be included:  1. For rate quota, per quota group or per quota metric incremental usage will be specified using the following delta metric:   \&quot;serviceruntime.googleapis.com/api/consumer/quota_used_count\&quot;  2. For allocation quota, per quota metric total usage will be specified using the following gauge metric:   \&quot;serviceruntime.googleapis.com/allocation/consumer/quota_used_count\&quot;  3. For both rate quota and allocation quota, the quota limit reached condition will be specified using the following boolean metric:   \&quot;serviceruntime.googleapis.com/quota/exceeded\&quot; Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :limitExceeded => list(any()),
          :quotaConsumed => map(),
          :quotaMetrics => list(GoogleApi.ServiceControl.V1.Model.MetricValueSet.t())
        }

  field(:limitExceeded, type: :list)
  field(:quotaConsumed, type: :map)
  field(:quotaMetrics, as: GoogleApi.ServiceControl.V1.Model.MetricValueSet, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceControl.V1.Model.QuotaInfo do
  def decode(value, options) do
    GoogleApi.ServiceControl.V1.Model.QuotaInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceControl.V1.Model.QuotaInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
