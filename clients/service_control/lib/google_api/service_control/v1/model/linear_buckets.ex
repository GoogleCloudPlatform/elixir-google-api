# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceControl.V1.Model.LinearBuckets do
  @moduledoc """
  Describing buckets with constant width.

  ## Attributes

  - numFiniteBuckets (integer()): The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is &#x60;num_finite_buckets&#x60; + 2. See comments on &#x60;bucket_options&#x60; for details. Defaults to: `null`.
  - offset (float()): The i&#39;th linear bucket covers the interval   [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive. Defaults to: `null`.
  - width (float()): The i&#39;th linear bucket covers the interval   [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive. Must be strictly positive. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :numFiniteBuckets => any(),
          :offset => any(),
          :width => any()
        }

  field(:numFiniteBuckets)
  field(:offset)
  field(:width)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceControl.V1.Model.LinearBuckets do
  def decode(value, options) do
    GoogleApi.ServiceControl.V1.Model.LinearBuckets.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceControl.V1.Model.LinearBuckets do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
