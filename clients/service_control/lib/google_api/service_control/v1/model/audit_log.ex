# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceControl.V1.Model.AuditLog do
  @moduledoc """
  Common audit log format for Google Cloud Platform API operations.  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"authenticationInfo",
    :"authorizationInfo",
    :"methodName",
    :"numResponseItems",
    :"request",
    :"requestMetadata",
    :"resourceName",
    :"response",
    :"serviceData",
    :"serviceName",
    :"status"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.ServiceControl.V1.Model.AuditLog do
  import GoogleApi.ServiceControl.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"authenticationInfo", :struct, GoogleApi.ServiceControl.V1.Model.AuthenticationInfo, options)
    |> deserialize(:"authorizationInfo", :list, GoogleApi.ServiceControl.V1.Model.AuthorizationInfo, options)
    |> deserialize(:"request", :struct, GoogleApi.ServiceControl.V1.Model.Object, options)
    |> deserialize(:"requestMetadata", :struct, GoogleApi.ServiceControl.V1.Model.RequestMetadata, options)
    |> deserialize(:"response", :struct, GoogleApi.ServiceControl.V1.Model.Object, options)
    |> deserialize(:"serviceData", :struct, GoogleApi.ServiceControl.V1.Model.Object, options)
    |> deserialize(:"status", :struct, GoogleApi.ServiceControl.V1.Model.Status, options)
  end
end

