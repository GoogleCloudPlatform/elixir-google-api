# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceControl.V1.Model.Auth do
  @moduledoc """
  This message defines request authentication attributes. Terminology is based on the JSON Web Token (JWT) standard, but the terms also correlate to concepts in other standards.

  ## Attributes

  - accessLevels ([String.t]): A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \&quot;//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\&quot;  Example: \&quot;//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\&quot; Defaults to: `null`.
  - audiences ([String.t]): The intended audience(s) for this authentication information. Reflects the audience (&#x60;aud&#x60;) claim within a JWT. The audience value(s) depends on the &#x60;issuer&#x60;, but typically include one or more of the following pieces of information:  *  The services intended to receive the credential such as    [\&quot;pubsub.googleapis.com\&quot;, \&quot;storage.googleapis.com\&quot;] *  A set of service-based scopes. For example,    [\&quot;https://www.googleapis.com/auth/cloud-platform\&quot;] *  The client id of an app, such as the Firebase project id for JWTs    from Firebase Auth.  Consult the documentation for the credential issuer to determine the information provided. Defaults to: `null`.
  - claims (%{optional(String.t) &#x3D;&gt; String.t}): Structured claims presented with the credential. JWTs include &#x60;{key: value}&#x60; pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT:     {&#39;iss&#39;: &#39;accounts.google.com&#39;,     &#39;sub&#39;: &#39;113289723416554971153&#39;,     &#39;aud&#39;: [&#39;123456789012&#39;, &#39;pubsub.googleapis.com&#39;],     &#39;azp&#39;: &#39;123456789012.apps.googleusercontent.com&#39;,     &#39;email&#39;: &#39;jsmith@example.com&#39;,     &#39;iat&#39;: 1353601026,     &#39;exp&#39;: 1353604926}  SAML assertions are similarly specified, but with an identity provider dependent structure. Defaults to: `null`.
  - presenter (String.t): The authorized presenter of the credential. Reflects the optional Authorized Presenter (&#x60;azp&#x60;) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \&quot;123456789012.apps.googleusercontent.com\&quot;. Defaults to: `null`.
  - principal (String.t): The authenticated principal. Reflects the issuer (&#x60;iss&#x60;) and subject (&#x60;sub&#x60;) claims within a JWT. The issuer and subject should be &#x60;/&#x60; delimited, with &#x60;/&#x60; percent-encoded within the subject fragment. For Google accounts, the principal format is: \&quot;https://accounts.google.com/{id}\&quot; Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessLevels => list(any()),
          :audiences => list(any()),
          :claims => map(),
          :presenter => any(),
          :principal => any()
        }

  field(:accessLevels, type: :list)
  field(:audiences, type: :list)
  field(:claims, type: :map)
  field(:presenter)
  field(:principal)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceControl.V1.Model.Auth do
  def decode(value, options) do
    GoogleApi.ServiceControl.V1.Model.Auth.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceControl.V1.Model.Auth do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
