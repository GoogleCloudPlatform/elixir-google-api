# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceControl.V2.Model.CheckRequest do
  @moduledoc """
  Request message for the Check method.

  ## Attributes

  *   `attributes` (*type:* `GoogleApi.ServiceControl.V2.Model.AttributeContext.t`, *default:* `nil`) - Describes attributes about the operation being executed by the service.
  *   `flags` (*type:* `String.t`, *default:* `nil`) - Optional. Contains a comma-separated list of flags.
  *   `resources` (*type:* `list(GoogleApi.ServiceControl.V2.Model.ResourceInfo.t)`, *default:* `nil`) - Describes the resources and the policies applied to each resource.
  *   `serviceConfigId` (*type:* `String.t`, *default:* `nil`) - Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributes => GoogleApi.ServiceControl.V2.Model.AttributeContext.t(),
          :flags => String.t(),
          :resources => list(GoogleApi.ServiceControl.V2.Model.ResourceInfo.t()),
          :serviceConfigId => String.t()
        }

  field(:attributes, as: GoogleApi.ServiceControl.V2.Model.AttributeContext)
  field(:flags)
  field(:resources, as: GoogleApi.ServiceControl.V2.Model.ResourceInfo, type: :list)
  field(:serviceConfigId)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceControl.V2.Model.CheckRequest do
  def decode(value, options) do
    GoogleApi.ServiceControl.V2.Model.CheckRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceControl.V2.Model.CheckRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
