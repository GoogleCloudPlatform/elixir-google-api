# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CustomSearch.V1.Model.SearchQueries do
  @moduledoc """
  Query metadata for the previous, current, and next pages of results.

  ## Attributes

  *   `nextPage` (*type:* `list(GoogleApi.CustomSearch.V1.Model.SearchQueriesNextPage.t)`, *default:* `nil`) - Metadata representing the next page of results, if applicable.
  *   `previousPage` (*type:* `list(GoogleApi.CustomSearch.V1.Model.SearchQueriesPreviousPage.t)`, *default:* `nil`) - Metadata representing the previous page of results, if applicable.
  *   `request` (*type:* `list(GoogleApi.CustomSearch.V1.Model.SearchQueriesRequest.t)`, *default:* `nil`) - Metadata representing the current request.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :nextPage => list(GoogleApi.CustomSearch.V1.Model.SearchQueriesNextPage.t()),
          :previousPage => list(GoogleApi.CustomSearch.V1.Model.SearchQueriesPreviousPage.t()),
          :request => list(GoogleApi.CustomSearch.V1.Model.SearchQueriesRequest.t())
        }

  field(:nextPage, as: GoogleApi.CustomSearch.V1.Model.SearchQueriesNextPage, type: :list)
  field(:previousPage, as: GoogleApi.CustomSearch.V1.Model.SearchQueriesPreviousPage, type: :list)
  field(:request, as: GoogleApi.CustomSearch.V1.Model.SearchQueriesRequest, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CustomSearch.V1.Model.SearchQueries do
  def decode(value, options) do
    GoogleApi.CustomSearch.V1.Model.SearchQueries.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CustomSearch.V1.Model.SearchQueries do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
