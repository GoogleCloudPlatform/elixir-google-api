# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.CustomSearch.V1.Model.Result do
  @moduledoc """


  ## Attributes

  - cacheId (String.t):  Defaults to `nil`.
  - displayLink (String.t):  Defaults to `nil`.
  - fileFormat (String.t):  Defaults to `nil`.
  - formattedUrl (String.t):  Defaults to `nil`.
  - htmlFormattedUrl (String.t):  Defaults to `nil`.
  - htmlSnippet (String.t):  Defaults to `nil`.
  - htmlTitle (String.t):  Defaults to `nil`.
  - image (GoogleApi.CustomSearch.V1.Model.ResultImage.t):  Defaults to `nil`.
  - kind (String.t):  Defaults to `customsearch#result`.
  - labels (list(GoogleApi.CustomSearch.V1.Model.ResultLabels.t)):  Defaults to `nil`.
  - link (String.t):  Defaults to `nil`.
  - mime (String.t):  Defaults to `nil`.
  - pagemap (map()):  Defaults to `nil`.
  - snippet (String.t):  Defaults to `nil`.
  - title (String.t):  Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cacheId => String.t(),
          :displayLink => String.t(),
          :fileFormat => String.t(),
          :formattedUrl => String.t(),
          :htmlFormattedUrl => String.t(),
          :htmlSnippet => String.t(),
          :htmlTitle => String.t(),
          :image => GoogleApi.CustomSearch.V1.Model.ResultImage.t(),
          :kind => String.t(),
          :labels => list(GoogleApi.CustomSearch.V1.Model.ResultLabels.t()),
          :link => String.t(),
          :mime => String.t(),
          :pagemap => map(),
          :snippet => String.t(),
          :title => String.t()
        }

  field(:cacheId)
  field(:displayLink)
  field(:fileFormat)
  field(:formattedUrl)
  field(:htmlFormattedUrl)
  field(:htmlSnippet)
  field(:htmlTitle)
  field(:image, as: GoogleApi.CustomSearch.V1.Model.ResultImage)
  field(:kind)
  field(:labels, as: GoogleApi.CustomSearch.V1.Model.ResultLabels, type: :list)
  field(:link)
  field(:mime)
  field(:pagemap, type: :map)
  field(:snippet)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.CustomSearch.V1.Model.Result do
  def decode(value, options) do
    GoogleApi.CustomSearch.V1.Model.Result.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CustomSearch.V1.Model.Result do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
