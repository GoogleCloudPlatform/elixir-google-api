# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CustomSearch.V1.Model.Query do
  @moduledoc """


  ## Attributes

  *   `googleHost` (*type:* `String.t`, *default:* `nil`) - 
  *   `hq` (*type:* `String.t`, *default:* `nil`) - 
  *   `startIndex` (*type:* `integer()`, *default:* `nil`) - 
  *   `safe` (*type:* `String.t`, *default:* `nil`) - 
  *   `relatedSite` (*type:* `String.t`, *default:* `nil`) - 
  *   `inputEncoding` (*type:* `String.t`, *default:* `nil`) - 
  *   `language` (*type:* `String.t`, *default:* `nil`) - 
  *   `outputEncoding` (*type:* `String.t`, *default:* `nil`) - 
  *   `totalResults` (*type:* `String.t`, *default:* `nil`) - 
  *   `filter` (*type:* `String.t`, *default:* `nil`) - 
  *   `linkSite` (*type:* `String.t`, *default:* `nil`) - 
  *   `sort` (*type:* `String.t`, *default:* `nil`) - 
  *   `orTerms` (*type:* `String.t`, *default:* `nil`) - 
  *   `gl` (*type:* `String.t`, *default:* `nil`) - 
  *   `siteSearch` (*type:* `String.t`, *default:* `nil`) - 
  *   `siteSearchFilter` (*type:* `String.t`, *default:* `nil`) - 
  *   `imgSize` (*type:* `String.t`, *default:* `nil`) - 
  *   `fileType` (*type:* `String.t`, *default:* `nil`) - 
  *   `imgType` (*type:* `String.t`, *default:* `nil`) - 
  *   `rights` (*type:* `String.t`, *default:* `nil`) - 
  *   `disableCnTwTranslation` (*type:* `String.t`, *default:* `nil`) - 
  *   `lowRange` (*type:* `String.t`, *default:* `nil`) - 
  *   `excludeTerms` (*type:* `String.t`, *default:* `nil`) - 
  *   `imgColorType` (*type:* `String.t`, *default:* `nil`) - 
  *   `hl` (*type:* `String.t`, *default:* `nil`) - 
  *   `imgDominantColor` (*type:* `String.t`, *default:* `nil`) - 
  *   `startPage` (*type:* `integer()`, *default:* `nil`) - 
  *   `count` (*type:* `integer()`, *default:* `nil`) - 
  *   `searchTerms` (*type:* `String.t`, *default:* `nil`) - 
  *   `exactTerms` (*type:* `String.t`, *default:* `nil`) - 
  *   `cx` (*type:* `String.t`, *default:* `nil`) - 
  *   `title` (*type:* `String.t`, *default:* `nil`) - 
  *   `dateRestrict` (*type:* `String.t`, *default:* `nil`) - 
  *   `cr` (*type:* `String.t`, *default:* `nil`) - 
  *   `searchType` (*type:* `String.t`, *default:* `nil`) - 
  *   `highRange` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :googleHost => String.t(),
          :hq => String.t(),
          :startIndex => integer(),
          :safe => String.t(),
          :relatedSite => String.t(),
          :inputEncoding => String.t(),
          :language => String.t(),
          :outputEncoding => String.t(),
          :totalResults => String.t(),
          :filter => String.t(),
          :linkSite => String.t(),
          :sort => String.t(),
          :orTerms => String.t(),
          :gl => String.t(),
          :siteSearch => String.t(),
          :siteSearchFilter => String.t(),
          :imgSize => String.t(),
          :fileType => String.t(),
          :imgType => String.t(),
          :rights => String.t(),
          :disableCnTwTranslation => String.t(),
          :lowRange => String.t(),
          :excludeTerms => String.t(),
          :imgColorType => String.t(),
          :hl => String.t(),
          :imgDominantColor => String.t(),
          :startPage => integer(),
          :count => integer(),
          :searchTerms => String.t(),
          :exactTerms => String.t(),
          :cx => String.t(),
          :title => String.t(),
          :dateRestrict => String.t(),
          :cr => String.t(),
          :searchType => String.t(),
          :highRange => String.t()
        }

  field(:googleHost)
  field(:hq)
  field(:startIndex)
  field(:safe)
  field(:relatedSite)
  field(:inputEncoding)
  field(:language)
  field(:outputEncoding)
  field(:totalResults)
  field(:filter)
  field(:linkSite)
  field(:sort)
  field(:orTerms)
  field(:gl)
  field(:siteSearch)
  field(:siteSearchFilter)
  field(:imgSize)
  field(:fileType)
  field(:imgType)
  field(:rights)
  field(:disableCnTwTranslation)
  field(:lowRange)
  field(:excludeTerms)
  field(:imgColorType)
  field(:hl)
  field(:imgDominantColor)
  field(:startPage)
  field(:count)
  field(:searchTerms)
  field(:exactTerms)
  field(:cx)
  field(:title)
  field(:dateRestrict)
  field(:cr)
  field(:searchType)
  field(:highRange)
end

defimpl Poison.Decoder, for: GoogleApi.CustomSearch.V1.Model.Query do
  def decode(value, options) do
    GoogleApi.CustomSearch.V1.Model.Query.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CustomSearch.V1.Model.Query do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
