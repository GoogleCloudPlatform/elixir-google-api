# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Translate.V2.Model.TranslateTextRequest do
  @moduledoc """
  The main translation request message for the Cloud Translation API.

  ## Attributes

  - format (String.t): The format of the source text, in either HTML (default) or plain-text. A value of \&quot;html\&quot; indicates HTML and a value of \&quot;text\&quot; indicates plain-text. Defaults to: `null`.
  - model (String.t): The &#x60;model&#x60; type requested for this translation. Valid values are listed in public documentation. Defaults to: `null`.
  - q ([String.t]): The input text to translate. Repeat this parameter to perform translation operations on multiple text inputs. Defaults to: `null`.
  - source (String.t): The language of the source text, set to one of the language codes listed in Language Support. If the source language is not specified, the API will attempt to identify the source language automatically and return it within the response. Defaults to: `null`.
  - target (String.t): The language to use for translation of the input text, set to one of the language codes listed in Language Support. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :format => any(),
          :model => any(),
          :q => list(any()),
          :source => any(),
          :target => any()
        }

  field(:format)
  field(:model)
  field(:q, type: :list)
  field(:source)
  field(:target)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V2.Model.TranslateTextRequest do
  def decode(value, options) do
    GoogleApi.Translate.V2.Model.TranslateTextRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V2.Model.TranslateTextRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
