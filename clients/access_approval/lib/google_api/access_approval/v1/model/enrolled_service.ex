# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AccessApproval.V1.Model.EnrolledService do
  @moduledoc """
  Represents the enrollment of a cloud resource into a specific service.

  ## Attributes

  *   `cloudProduct` (*type:* `String.t`, *default:* `nil`) - The product for which Access Approval will be enrolled. Allowed values are listed below (case-sensitive): 1. all 2. ga-only 3. appengine.googleapis.com 4. bigquery.googleapis.com 5. bigtable.googleapis.com 6. cloudkms.googleapis.com 7. compute.googleapis.com 8. dataflow.googleapis.com 9. iam.googleapis.com 10. pubsub.googleapis.com 11. storage.googleapis.com Note: 'all' will enroll the resource in all products supported at both 'GA' and 'Preview' levels. 'ga-only' will only enroll the resource in products supported at 'GA' level.
  *   `enrollmentLevel` (*type:* `String.t`, *default:* `nil`) - The enrollment level of the service.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cloudProduct => String.t(),
          :enrollmentLevel => String.t()
        }

  field(:cloudProduct)
  field(:enrollmentLevel)
end

defimpl Poison.Decoder, for: GoogleApi.AccessApproval.V1.Model.EnrolledService do
  def decode(value, options) do
    GoogleApi.AccessApproval.V1.Model.EnrolledService.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AccessApproval.V1.Model.EnrolledService do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
