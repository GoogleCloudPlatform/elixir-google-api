# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Prediction.V16.Model.Insert do
  @moduledoc """
  

  ## Attributes

  - id (String): The unique name for the predictive model. Defaults to: `null`.
  - modelType (String): Type of predictive model (classification or regression). Defaults to: `null`.
  - sourceModel (String): The Id of the model to be copied over. Defaults to: `null`.
  - storageDataLocation (String): Google storage location of the training data file. Defaults to: `null`.
  - storagePMMLLocation (String): Google storage location of the preprocessing pmml file. Defaults to: `null`.
  - storagePMMLModelLocation (String): Google storage location of the pmml model file. Defaults to: `null`.
  - trainingInstances (List[InsertTrainingInstances]): Instances to train model on. Defaults to: `null`.
  - utility (List[Map[String, Float]]): A class weighting function, which allows the importance weights for class labels to be specified (Categorical models only). Defaults to: `null`.
  """

  defstruct [
    :"id",
    :"modelType",
    :"sourceModel",
    :"storageDataLocation",
    :"storagePMMLLocation",
    :"storagePMMLModelLocation",
    :"trainingInstances",
    :"utility"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Prediction.V16.Model.Insert do
  import GoogleApi.Prediction.V16.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"trainingInstances", :list, GoogleApi.Prediction.V16.Model.InsertTrainingInstances, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Prediction.V16.Model.Insert do
  def encode(value, options) do
    GoogleApi.Prediction.V16.Deserializer.serialize_non_nil(value, options)
  end
end

