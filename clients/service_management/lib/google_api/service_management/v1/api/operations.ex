# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.ServiceManagement.V1.Api.Operations do
  @moduledoc """
  API calls for all endpoints tagged `Operations`.
  """

  alias GoogleApi.ServiceManagement.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Gets the latest state of a long-running operation.  Clients can use this
  method to poll the operation result at intervals as recommended by the API
  service.

  ## Parameters

  - connection (GoogleApi.ServiceManagement.V1.Connection): Connection to server
  - name (String.t): The name of the operation resource.
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").

  ## Returns

  {:ok, %GoogleApi.ServiceManagement.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec servicemanagement_operations_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.ServiceManagement.V1.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def servicemanagement_operations_get(connection, name, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/{+name}", %{
        "name" => URI.encode(name, &URI.char_unreserved?/1)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.ServiceManagement.V1.Model.Operation{}])
  end

  @doc """
  Lists service operations that match the specified filter in the request.

  ## Parameters

  - connection (GoogleApi.ServiceManagement.V1.Connection): Connection to server
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").
    - :filter (String.t): A string for filtering Operations.
  The following filter fields are supported&#58;

  * serviceName&#58; Required. Only `=` operator is allowed.
  * startTime&#58; The time this job was started, in ISO 8601 format.
    Allowed operators are `>=`,  `>`, `<=`, and `<`.
  * status&#58; Can be `done`, `in_progress`, or `failed`. Allowed
    operators are `=`, and `!=`.

  Filter expression supports conjunction (AND) and disjunction (OR)
  logical operators. However, the serviceName restriction must be at the
  top-level and can only be combined with other restrictions via the AND
  logical operator.

  Examples&#58;

  * `serviceName={some-service}.googleapis.com`
  * `serviceName={some-service}.googleapis.com AND startTime>="2017-02-01"`
  * `serviceName={some-service}.googleapis.com AND status=done`
  * `serviceName={some-service}.googleapis.com AND (status=done OR startTime>="2017-02-01")`
    - :name (String.t): Not used.
    - :pageSize (integer()): The maximum number of operations to return. If unspecified, defaults to
  50. The maximum value is 100.
    - :pageToken (String.t): The standard list page token.

  ## Returns

  {:ok, %GoogleApi.ServiceManagement.V1.Model.ListOperationsResponse{}} on success
  {:error, info} on failure
  """
  @spec servicemanagement_operations_list(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.ServiceManagement.V1.Model.ListOperationsResponse.t()}
          | {:error, Tesla.Env.t()}
  def servicemanagement_operations_list(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :filter => :query,
      :name => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/operations", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.ServiceManagement.V1.Model.ListOperationsResponse{}]
    )
  end
end
