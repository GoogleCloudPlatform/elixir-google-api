# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceManagement.V1.Model.Service do
  @moduledoc """
  &#x60;Service&#x60; is the root object of Google service configuration schema. It describes basic information about a service, such as the name and the title, and delegates other aspects to sub-sections. Each sub-section is either a proto message or a repeated proto message that configures a specific aspect, such as auth. See each proto message definition for details.  Example:      type: google.api.Service     config_version: 3     name: calendar.googleapis.com     title: Google Calendar API     apis:     - name: google.calendar.v3.Calendar     authentication:       providers:       - id: google_calendar_auth         jwks_uri: https://www.googleapis.com/oauth2/v1/certs         issuer: https://securetoken.google.com       rules:       - selector: \&quot;*\&quot;         requirements:           provider_id: google_calendar_auth
  """

  @derive [Poison.Encoder]
  defstruct [
    :"apis",
    :"authentication",
    :"backend",
    :"configVersion",
    :"context",
    :"control",
    :"customError",
    :"documentation",
    :"endpoints",
    :"enums",
    :"experimental",
    :"http",
    :"id",
    :"logging",
    :"logs",
    :"metrics",
    :"monitoredResources",
    :"monitoring",
    :"name",
    :"producerProjectId",
    :"quota",
    :"sourceInfo",
    :"systemParameters",
    :"systemTypes",
    :"title",
    :"types",
    :"usage",
    :"visibility"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.ServiceManagement.V1.Model.Service do
  import GoogleApi.ServiceManagement.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"apis", :list, GoogleApi.ServiceManagement.V1.Model.Api, options)
    |> deserialize(:"authentication", :struct, GoogleApi.ServiceManagement.V1.Model.Authentication, options)
    |> deserialize(:"backend", :struct, GoogleApi.ServiceManagement.V1.Model.Backend, options)
    |> deserialize(:"context", :struct, GoogleApi.ServiceManagement.V1.Model.Context, options)
    |> deserialize(:"control", :struct, GoogleApi.ServiceManagement.V1.Model.Control, options)
    |> deserialize(:"customError", :struct, GoogleApi.ServiceManagement.V1.Model.CustomError, options)
    |> deserialize(:"documentation", :struct, GoogleApi.ServiceManagement.V1.Model.Documentation, options)
    |> deserialize(:"endpoints", :list, GoogleApi.ServiceManagement.V1.Model.Endpoint, options)
    |> deserialize(:"enums", :list, GoogleApi.ServiceManagement.V1.Model.Enum, options)
    |> deserialize(:"experimental", :struct, GoogleApi.ServiceManagement.V1.Model.Experimental, options)
    |> deserialize(:"http", :struct, GoogleApi.ServiceManagement.V1.Model.Http, options)
    |> deserialize(:"logging", :struct, GoogleApi.ServiceManagement.V1.Model.Logging, options)
    |> deserialize(:"logs", :list, GoogleApi.ServiceManagement.V1.Model.LogDescriptor, options)
    |> deserialize(:"metrics", :list, GoogleApi.ServiceManagement.V1.Model.MetricDescriptor, options)
    |> deserialize(:"monitoredResources", :list, GoogleApi.ServiceManagement.V1.Model.MonitoredResourceDescriptor, options)
    |> deserialize(:"monitoring", :struct, GoogleApi.ServiceManagement.V1.Model.Monitoring, options)
    |> deserialize(:"quota", :struct, GoogleApi.ServiceManagement.V1.Model.Quota, options)
    |> deserialize(:"sourceInfo", :struct, GoogleApi.ServiceManagement.V1.Model.SourceInfo, options)
    |> deserialize(:"systemParameters", :struct, GoogleApi.ServiceManagement.V1.Model.SystemParameters, options)
    |> deserialize(:"systemTypes", :list, GoogleApi.ServiceManagement.V1.Model.Type, options)
    |> deserialize(:"types", :list, GoogleApi.ServiceManagement.V1.Model.Type, options)
    |> deserialize(:"usage", :struct, GoogleApi.ServiceManagement.V1.Model.Usage, options)
    |> deserialize(:"visibility", :struct, GoogleApi.ServiceManagement.V1.Model.Visibility, options)
  end
end

