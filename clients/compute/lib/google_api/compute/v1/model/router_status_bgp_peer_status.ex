# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.RouterStatusBgpPeerStatus do
  @moduledoc """


  ## Attributes

  - advertisedRoutes ([Route]): Routes that were advertised to the remote BGP peer Defaults to: `null`.
  - ipAddress (String.t): IP address of the local BGP interface. Defaults to: `null`.
  - linkedVpnTunnel (String.t): URL of the VPN tunnel that this BGP peer controls. Defaults to: `null`.
  - name (String.t): Name of this BGP peer. Unique within the Routers resource. Defaults to: `null`.
  - numLearnedRoutes (integer()): Number of routes learned from the remote BGP Peer. Defaults to: `null`.
  - peerIpAddress (String.t): IP address of the remote BGP interface. Defaults to: `null`.
  - state (String.t): BGP state as specified in RFC1771. Defaults to: `null`.
  - status (String.t): Status of the BGP peer: {UP, DOWN} Defaults to: `null`.
    - Enum - one of [DOWN, UNKNOWN, UP]
  - uptime (String.t): Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours, 59 minutes, 59 seconds Defaults to: `null`.
  - uptimeSeconds (String.t): Time this session has been up, in seconds. Format: 145 Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :advertisedRoutes => list(GoogleApi.Compute.V1.Model.Route.t()),
          :ipAddress => any(),
          :linkedVpnTunnel => any(),
          :name => any(),
          :numLearnedRoutes => any(),
          :peerIpAddress => any(),
          :state => any(),
          :status => any(),
          :uptime => any(),
          :uptimeSeconds => any()
        }

  field(:advertisedRoutes, as: GoogleApi.Compute.V1.Model.Route, type: :list)
  field(:ipAddress)
  field(:linkedVpnTunnel)
  field(:name)
  field(:numLearnedRoutes)
  field(:peerIpAddress)
  field(:state)
  field(:status)
  field(:uptime)
  field(:uptimeSeconds)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.RouterStatusBgpPeerStatus do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.RouterStatusBgpPeerStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.RouterStatusBgpPeerStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
