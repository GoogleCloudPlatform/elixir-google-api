# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.HealthCheck do
  @moduledoc """
  An HealthCheck resource. This resource defines a template for how individual virtual machines should be checked for health, via one of the supported protocols.

  ## Attributes

  - checkIntervalSec (integer()): How often (in seconds) to send a health check. The default value is 5 seconds. Defaults to `nil`.
  - creationTimestamp (String.t): [Output Only] Creation timestamp in 3339 text format. Defaults to `nil`.
  - description (String.t): An optional description of this resource. Provide this property when you create the resource. Defaults to `nil`.
  - healthyThreshold (integer()): A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2. Defaults to `nil`.
  - http2HealthCheck (GoogleApi.Compute.V1.Model.HTTP2HealthCheck.t):  Defaults to `nil`.
  - httpHealthCheck (GoogleApi.Compute.V1.Model.HTTPHealthCheck.t):  Defaults to `nil`.
  - httpsHealthCheck (GoogleApi.Compute.V1.Model.HTTPSHealthCheck.t):  Defaults to `nil`.
  - id (String.t): [Output Only] The unique identifier for the resource. This identifier is defined by the server. Defaults to `nil`.
  - kind (String.t): Type of the resource. Defaults to `compute#healthCheck`.
  - name (String.t): Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. Defaults to `nil`.
  - selfLink (String.t): [Output Only] Server-defined URL for the resource. Defaults to `nil`.
  - sslHealthCheck (GoogleApi.Compute.V1.Model.SSLHealthCheck.t):  Defaults to `nil`.
  - tcpHealthCheck (GoogleApi.Compute.V1.Model.TCPHealthCheck.t):  Defaults to `nil`.
  - timeoutSec (integer()): How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec. Defaults to `nil`.
  - type (String.t): Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field. Defaults to `nil`.
  - unhealthyThreshold (integer()): A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :checkIntervalSec => integer(),
          :creationTimestamp => String.t(),
          :description => String.t(),
          :healthyThreshold => integer(),
          :http2HealthCheck => GoogleApi.Compute.V1.Model.HTTP2HealthCheck.t(),
          :httpHealthCheck => GoogleApi.Compute.V1.Model.HTTPHealthCheck.t(),
          :httpsHealthCheck => GoogleApi.Compute.V1.Model.HTTPSHealthCheck.t(),
          :id => String.t(),
          :kind => String.t(),
          :name => String.t(),
          :selfLink => String.t(),
          :sslHealthCheck => GoogleApi.Compute.V1.Model.SSLHealthCheck.t(),
          :tcpHealthCheck => GoogleApi.Compute.V1.Model.TCPHealthCheck.t(),
          :timeoutSec => integer(),
          :type => String.t(),
          :unhealthyThreshold => integer()
        }

  field(:checkIntervalSec)
  field(:creationTimestamp)
  field(:description)
  field(:healthyThreshold)
  field(:http2HealthCheck, as: GoogleApi.Compute.V1.Model.HTTP2HealthCheck)
  field(:httpHealthCheck, as: GoogleApi.Compute.V1.Model.HTTPHealthCheck)
  field(:httpsHealthCheck, as: GoogleApi.Compute.V1.Model.HTTPSHealthCheck)
  field(:id)
  field(:kind)
  field(:name)
  field(:selfLink)
  field(:sslHealthCheck, as: GoogleApi.Compute.V1.Model.SSLHealthCheck)
  field(:tcpHealthCheck, as: GoogleApi.Compute.V1.Model.TCPHealthCheck)
  field(:timeoutSec)
  field(:type)
  field(:unhealthyThreshold)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.HealthCheck do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.HealthCheck.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.HealthCheck do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
