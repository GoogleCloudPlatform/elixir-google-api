# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Firestore.V1beta1.Model.TargetChange do
  @moduledoc """
  Targets being watched have changed.

  ## Attributes

  - cause (GoogleApi.Firestore.V1beta1.Model.Status.t): The error that resulted in this change, if applicable. Defaults to `nil`.
  - readTime (DateTime.t): The consistent `read_time` for the given `target_ids` (omitted when the
  target_ids are not at a consistent snapshot).

  The stream is guaranteed to send a `read_time` with `target_ids` empty
  whenever the entire stream reaches a new consistent snapshot. ADD,
  CURRENT, and RESET messages are guaranteed to (eventually) result in a
  new consistent snapshot (while NO_CHANGE and REMOVE messages are not).

  For a given stream, `read_time` is guaranteed to be monotonically
  increasing. Defaults to `nil`.
  - resumeToken (String.t): A token that can be used to resume the stream for the given `target_ids`,
  or all targets if `target_ids` is empty.

  Not set on every target change. Defaults to `nil`.
  - targetChangeType (String.t): The type of change that occurred. Defaults to `nil`.
  - targetIds (list(integer())): The target IDs of targets that have changed.

  If empty, the change applies to all targets.

  For `target_change_type=ADD`, the order of the target IDs matches the order
  of the requests to add the targets. This allows clients to unambiguously
  associate server-assigned target IDs with added targets.

  For other states, the order of the target IDs is not defined. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cause => GoogleApi.Firestore.V1beta1.Model.Status.t(),
          :readTime => DateTime.t(),
          :resumeToken => String.t(),
          :targetChangeType => String.t(),
          :targetIds => list(integer())
        }

  field(:cause, as: GoogleApi.Firestore.V1beta1.Model.Status)
  field(:readTime, as: DateTime)
  field(:resumeToken)
  field(:targetChangeType)
  field(:targetIds, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Firestore.V1beta1.Model.TargetChange do
  def decode(value, options) do
    GoogleApi.Firestore.V1beta1.Model.TargetChange.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firestore.V1beta1.Model.TargetChange do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
