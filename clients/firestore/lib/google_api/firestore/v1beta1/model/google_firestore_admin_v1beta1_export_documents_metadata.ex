# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1ExportDocumentsMetadata do
  @moduledoc """
  Metadata for ExportDocuments operations.

  ## Attributes

  - collectionIds (list(String.t)): Which collection ids are being exported. Defaults to `nil`.
  - endTime (DateTime.t): The time the operation ended, either successfully or otherwise. Unset if
  the operation is still active. Defaults to `nil`.
  - operationState (String.t): The state of the export operation. Defaults to `nil`.
  - outputUriPrefix (String.t): Where the entities are being exported to. Defaults to `nil`.
  - progressBytes (GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1Progress.t): An estimate of the number of bytes processed. Defaults to `nil`.
  - progressDocuments (GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1Progress.t): An estimate of the number of documents processed. Defaults to `nil`.
  - startTime (DateTime.t): The time that work began on the operation. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :collectionIds => list(String.t()),
          :endTime => DateTime.t(),
          :operationState => String.t(),
          :outputUriPrefix => String.t(),
          :progressBytes =>
            GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1Progress.t(),
          :progressDocuments =>
            GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1Progress.t(),
          :startTime => DateTime.t()
        }

  field(:collectionIds, type: :list)
  field(:endTime, as: DateTime)
  field(:operationState)
  field(:outputUriPrefix)
  field(:progressBytes, as: GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1Progress)

  field(
    :progressDocuments,
    as: GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1Progress
  )

  field(:startTime, as: DateTime)
end

defimpl Poison.Decoder,
  for: GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1ExportDocumentsMetadata do
  def decode(value, options) do
    GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1ExportDocumentsMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Firestore.V1beta1.Model.GoogleFirestoreAdminV1beta1ExportDocumentsMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
