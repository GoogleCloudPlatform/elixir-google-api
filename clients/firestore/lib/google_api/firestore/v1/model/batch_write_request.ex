# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Firestore.V1.Model.BatchWriteRequest do
  @moduledoc """
  The request for Firestore.BatchWrite.

  ## Attributes

  *   `labels` (*type:* `map()`, *default:* `nil`) - Labels associated with this batch write.
  *   `writes` (*type:* `list(GoogleApi.Firestore.V1.Model.Write.t)`, *default:* `nil`) - The writes to apply.

      Method does not apply writes atomically and does not guarantee ordering.
      Each write succeeds or fails independently. You cannot write to the same
      document more than once per request.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :labels => map(),
          :writes => list(GoogleApi.Firestore.V1.Model.Write.t())
        }

  field(:labels, type: :map)
  field(:writes, as: GoogleApi.Firestore.V1.Model.Write, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Firestore.V1.Model.BatchWriteRequest do
  def decode(value, options) do
    GoogleApi.Firestore.V1.Model.BatchWriteRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firestore.V1.Model.BatchWriteRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
