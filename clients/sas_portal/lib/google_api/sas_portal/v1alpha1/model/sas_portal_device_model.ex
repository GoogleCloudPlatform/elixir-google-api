# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceModel do
  @moduledoc """
  Information about the model of the device.

  ## Attributes

  *   `firmwareVersion` (*type:* `String.t`, *default:* `nil`) - The firmware version of the device.
  *   `hardwareVersion` (*type:* `String.t`, *default:* `nil`) - The hardware version of the device.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the device model.
  *   `softwareVersion` (*type:* `String.t`, *default:* `nil`) - The software version of the device.
  *   `vendor` (*type:* `String.t`, *default:* `nil`) - The name of the device vendor.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :firmwareVersion => String.t(),
          :hardwareVersion => String.t(),
          :name => String.t(),
          :softwareVersion => String.t(),
          :vendor => String.t()
        }

  field(:firmwareVersion)
  field(:hardwareVersion)
  field(:name)
  field(:softwareVersion)
  field(:vendor)
end

defimpl Poison.Decoder, for: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceModel do
  def decode(value, options) do
    GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceModel.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceModel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
