# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceConfig do
  @moduledoc """
  Information about the device configuration.

  ## Attributes

  *   `airInterface` (*type:* `GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceAirInterface.t`, *default:* `nil`) - Information about this device's air interface.
  *   `callSign` (*type:* `String.t`, *default:* `nil`) - The call sign of the device operator.
  *   `category` (*type:* `String.t`, *default:* `nil`) - FCC category of the device.
  *   `installationParams` (*type:* `GoogleApi.SASPortal.V1alpha1.Model.SasPortalInstallationParams.t`, *default:* `nil`) - Installation parameters for the device.
  *   `isSigned` (*type:* `boolean()`, *default:* `nil`) - Output only. Whether the configuration has been signed by a CPI.
  *   `measurementCapabilities` (*type:* `list(String.t)`, *default:* `nil`) - Measurement reporting capabilities of the device.
  *   `model` (*type:* `GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceModel.t`, *default:* `nil`) - Information about this device model.
  *   `state` (*type:* `String.t`, *default:* `nil`) - State of the configuration.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The last time the device configuration was edited.
  *   `userId` (*type:* `String.t`, *default:* `nil`) - The identifier of a device user.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :airInterface => GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceAirInterface.t(),
          :callSign => String.t(),
          :category => String.t(),
          :installationParams =>
            GoogleApi.SASPortal.V1alpha1.Model.SasPortalInstallationParams.t(),
          :isSigned => boolean(),
          :measurementCapabilities => list(String.t()),
          :model => GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceModel.t(),
          :state => String.t(),
          :updateTime => DateTime.t(),
          :userId => String.t()
        }

  field(:airInterface, as: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceAirInterface)
  field(:callSign)
  field(:category)
  field(:installationParams, as: GoogleApi.SASPortal.V1alpha1.Model.SasPortalInstallationParams)
  field(:isSigned)
  field(:measurementCapabilities, type: :list)
  field(:model, as: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceModel)
  field(:state)
  field(:updateTime, as: DateTime)
  field(:userId)
end

defimpl Poison.Decoder, for: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceConfig do
  def decode(value, options) do
    GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SASPortal.V1alpha1.Model.SasPortalDeviceConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
