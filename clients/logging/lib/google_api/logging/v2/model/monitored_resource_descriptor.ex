# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Logging.V2.Model.MonitoredResourceDescriptor do
  @moduledoc """
  An object that describes the schema of a MonitoredResource object using a type name and a set of labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of "gce_instance" and specifies the use of the labels "instance_id" and "zone" to identify particular VM instances.Different services can support different monitored resource types.The following are specific rules to service defined monitored resources for Monitoring and Logging:
  The type, display_name, description, labels and launch_stage  fields are all required.
  The first label of the monitored resource descriptor must be  resource_container. There are legacy monitored resource descritptors  start with project_id.
  It must include a location label.
  Maximum of default 5 service defined monitored resource descriptors  is allowed per service.
  Maximum of default 10 labels per monitored resource is allowed.The default maximum limit can be overridden. Please follow https://cloud.google.com/monitoring/quotas

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. A detailed description of the monitored resource type that might be used in documentation.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Optional. A concise name for the monitored resource type that might be displayed in user interfaces. It should be a Title Cased Noun Phrase, without any article or other determiners. For example, "Google Cloud SQL Database".
  *   `labels` (*type:* `list(GoogleApi.Logging.V2.Model.LabelDescriptor.t)`, *default:* `nil`) - Required. A set of labels used to describe instances of this monitored resource type. The label key name must follow:
      Only upper and lower-case letters, digits and underscores (_) are  allowed.
      Label name must start with a letter or digit.
      The maximum length of a label name is 100 characters.For example, an individual Google Cloud SQL database is identified by values for the labels database_id and location.
  *   `launchStage` (*type:* `String.t`, *default:* `nil`) - Optional. The launch stage of the monitored resource definition.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Optional. The resource name of the monitored resource descriptor: "projects/{project_id}/monitoredResourceDescriptors/{type}" where {type} is the value of the type field in this object and {project_id} is a project ID that provides API-specific context for accessing the type. APIs that do not use project information can use the resource name format "monitoredResourceDescriptors/{type}".
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. The monitored resource type. For example, the type cloudsql_database represents databases in Google Cloud SQL.All service defined monitored resource types must be prefixed with the service name, in the format of {service name}/{relative resource name}. The relative resource name must follow:
      Only upper and lower-case letters and digits are allowed.
      It must start with upper case character and is recommended to use Upper  Camel Case style.
      The maximum number of characters allowed for the relative_resource_name  is 100.Note there are legacy service monitored resources not following this rule.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t(),
          :displayName => String.t(),
          :labels => list(GoogleApi.Logging.V2.Model.LabelDescriptor.t()),
          :launchStage => String.t(),
          :name => String.t(),
          :type => String.t()
        }

  field(:description)
  field(:displayName)
  field(:labels, as: GoogleApi.Logging.V2.Model.LabelDescriptor, type: :list)
  field(:launchStage)
  field(:name)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Logging.V2.Model.MonitoredResourceDescriptor do
  def decode(value, options) do
    GoogleApi.Logging.V2.Model.MonitoredResourceDescriptor.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Logging.V2.Model.MonitoredResourceDescriptor do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
