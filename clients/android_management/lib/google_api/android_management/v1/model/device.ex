# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AndroidManagement.V1.Model.Device do
  @moduledoc """
  A device owned by an enterprise. Unless otherwise noted, all fields are read-only and cannot be modified by an update device request.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"apiLevel",
    :"appliedPolicyName",
    :"appliedPolicyVersion",
    :"appliedState",
    :"disabledReason",
    :"displays",
    :"enrollmentTime",
    :"enrollmentTokenData",
    :"enrollmentTokenName",
    :"hardwareInfo",
    :"hardwareStatusSamples",
    :"lastPolicyComplianceReportTime",
    :"lastPolicySyncTime",
    :"lastStatusReportTime",
    :"memoryEvents",
    :"memoryInfo",
    :"name",
    :"networkInfo",
    :"nonComplianceDetails",
    :"policyCompliant",
    :"policyName",
    :"powerManagementEvents",
    :"previousDeviceNames",
    :"softwareInfo",
    :"state",
    :"userName"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.AndroidManagement.V1.Model.Device do
  import GoogleApi.AndroidManagement.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"disabledReason", :struct, GoogleApi.AndroidManagement.V1.Model.UserFacingMessage, options)
    |> deserialize(:"displays", :list, GoogleApi.AndroidManagement.V1.Model.Display, options)
    |> deserialize(:"hardwareInfo", :struct, GoogleApi.AndroidManagement.V1.Model.HardwareInfo, options)
    |> deserialize(:"hardwareStatusSamples", :list, GoogleApi.AndroidManagement.V1.Model.HardwareStatus, options)
    |> deserialize(:"memoryEvents", :list, GoogleApi.AndroidManagement.V1.Model.MemoryEvent, options)
    |> deserialize(:"memoryInfo", :struct, GoogleApi.AndroidManagement.V1.Model.MemoryInfo, options)
    |> deserialize(:"networkInfo", :struct, GoogleApi.AndroidManagement.V1.Model.NetworkInfo, options)
    |> deserialize(:"nonComplianceDetails", :list, GoogleApi.AndroidManagement.V1.Model.NonComplianceDetail, options)
    |> deserialize(:"powerManagementEvents", :list, GoogleApi.AndroidManagement.V1.Model.PowerManagementEvent, options)
    |> deserialize(:"softwareInfo", :struct, GoogleApi.AndroidManagement.V1.Model.SoftwareInfo, options)
  end
end

