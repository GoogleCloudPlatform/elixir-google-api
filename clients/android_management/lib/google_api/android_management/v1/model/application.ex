# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AndroidManagement.V1.Model.Application do
  @moduledoc """
  Application information.

  ## Attributes

  - managedProperties (List[ManagedProperty]): The set of managed properties available to be pre-configured for the application. Defaults to: `null`.
  - name (String): The name of the application in the form enterprises/{enterpriseId}/applications/{package_name} Defaults to: `null`.
  - permissions (List[ApplicationPermission]): The permissions required by the app. Defaults to: `null`.
  - title (String): The title of the application. Localized. Defaults to: `null`.
  """

  defstruct [
    :"managedProperties",
    :"name",
    :"permissions",
    :"title"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.AndroidManagement.V1.Model.Application do
  import GoogleApi.AndroidManagement.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"managedProperties", :list, GoogleApi.AndroidManagement.V1.Model.ManagedProperty, options)
    |> deserialize(:"permissions", :list, GoogleApi.AndroidManagement.V1.Model.ApplicationPermission, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidManagement.V1.Model.Application do
  def encode(value, options) do
    GoogleApi.AndroidManagement.V1.Deserializer.serialize_non_nil(value, options)
  end
end

