# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidManagement.V1.Model.KioskCustomization do
  @moduledoc """
  Settings controlling the behavior of a device in kiosk mode. To enable kiosk mode, set kioskCustomLauncherEnabled to true or specify an app in the policy with installType KIOSK.

  ## Attributes

  *   `deviceSettings` (*type:* `String.t`, *default:* `nil`) - Specifies whether the Settings app is allowed in kiosk mode.
  *   `powerButtonActions` (*type:* `String.t`, *default:* `nil`) - Sets the behavior of a device in kiosk mode when a user presses and holds (long-presses) the Power button.
  *   `statusBar` (*type:* `String.t`, *default:* `nil`) - Specifies whether system info and notifications are disabled in kiosk mode.
  *   `systemErrorWarnings` (*type:* `String.t`, *default:* `nil`) - Specifies whether system error dialogs for crashed or unresponsive apps are blocked in kiosk mode. When blocked, the system will force-stop the app as if the user chooses the "close app" option on the UI.
  *   `systemNavigation` (*type:* `String.t`, *default:* `nil`) - Specifies which navigation features are enabled (e.g. Home, Overview buttons) in kiosk mode.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceSettings => String.t(),
          :powerButtonActions => String.t(),
          :statusBar => String.t(),
          :systemErrorWarnings => String.t(),
          :systemNavigation => String.t()
        }

  field(:deviceSettings)
  field(:powerButtonActions)
  field(:statusBar)
  field(:systemErrorWarnings)
  field(:systemNavigation)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidManagement.V1.Model.KioskCustomization do
  def decode(value, options) do
    GoogleApi.AndroidManagement.V1.Model.KioskCustomization.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidManagement.V1.Model.KioskCustomization do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
