# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.FirebaseDynamicLinks.V1.Model.ManagedShortLink do
  @moduledoc """
  Managed Short Link.

  ## Attributes

  - info (DynamicLinkInfo): Full Dyamic Link info Defaults to: `null`.
  - creationTime (DateTime.t): Creation timestamp of the short link. Defaults to: `null`.
  - flaggedAttribute ([String.t]): Attributes that have been flagged about this short url. Defaults to: `null`.
    - Enum - one of 
  - link (String.t): Short durable link url, for example, \&quot;https://sample.app.goo.gl/xyz123\&quot;.  Required. Defaults to: `null`.
  - linkName (String.t): Link name defined by the creator.  Required. Defaults to: `null`.
  - visibility (String.t): Visibility status of link. Defaults to: `null`.
    - Enum - one of [UNSPECIFIED_VISIBILITY, UNARCHIVED, ARCHIVED, NEVER_SHOWN]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :info => GoogleApi.FirebaseDynamicLinks.V1.Model.DynamicLinkInfo.t(),
          :creationTime => DateTime.t(),
          :flaggedAttribute => list(any()),
          :link => any(),
          :linkName => any(),
          :visibility => any()
        }

  field(:info, as: GoogleApi.FirebaseDynamicLinks.V1.Model.DynamicLinkInfo)
  field(:creationTime, as: DateTime)
  field(:flaggedAttribute, type: :list)
  field(:link)
  field(:linkName)
  field(:visibility)
end

defimpl Poison.Decoder, for: GoogleApi.FirebaseDynamicLinks.V1.Model.ManagedShortLink do
  def decode(value, options) do
    GoogleApi.FirebaseDynamicLinks.V1.Model.ManagedShortLink.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FirebaseDynamicLinks.V1.Model.ManagedShortLink do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
