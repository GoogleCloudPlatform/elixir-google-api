# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SearchConsole.V1.Model.RunMobileFriendlyTestResponse do
  @moduledoc """
  Mobile-friendly test response, including mobile-friendly issues and resource issues.

  ## Attributes

  - mobileFriendliness (String): Test verdict, whether the page is mobile friendly or not. Defaults to: `null`.
    - Enum - one of [MOBILE_FRIENDLY_TEST_RESULT_UNSPECIFIED, MOBILE_FRIENDLY, NOT_MOBILE_FRIENDLY]
  - mobileFriendlyIssues (List[MobileFriendlyIssue]): List of mobile-usability issues. Defaults to: `null`.
  - resourceIssues (List[ResourceIssue]): Information about embedded resources issues. Defaults to: `null`.
  - screenshot (Image): Screenshot of the requested URL. Defaults to: `null`.
  - testStatus (TestStatus): Final state of the test, can be either complete or an error. Defaults to: `null`.
  """

  defstruct [
    :"mobileFriendliness",
    :"mobileFriendlyIssues",
    :"resourceIssues",
    :"screenshot",
    :"testStatus"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.SearchConsole.V1.Model.RunMobileFriendlyTestResponse do
  import GoogleApi.SearchConsole.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"mobileFriendlyIssues", :list, GoogleApi.SearchConsole.V1.Model.MobileFriendlyIssue, options)
    |> deserialize(:"resourceIssues", :list, GoogleApi.SearchConsole.V1.Model.ResourceIssue, options)
    |> deserialize(:"screenshot", :struct, GoogleApi.SearchConsole.V1.Model.Image, options)
    |> deserialize(:"testStatus", :struct, GoogleApi.SearchConsole.V1.Model.TestStatus, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SearchConsole.V1.Model.RunMobileFriendlyTestResponse do
  def encode(value, options) do
    GoogleApi.SearchConsole.V1.Deserializer.serialize_non_nil(value, options)
  end
end

