# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudIdentity.V1.Model.ClientState do
  @moduledoc """
  Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users

  ## Attributes

  *   `assetTags` (*type:* `list(String.t)`, *default:* `nil`) - The caller can specify asset tags for this resource
  *   `complianceState` (*type:* `String.t`, *default:* `nil`) - The compliance state of the resource as specified by the API client.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time the client state data was created.
  *   `customId` (*type:* `String.t`, *default:* `nil`) - This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest
  *   `healthScore` (*type:* `String.t`, *default:* `nil`) - The Health score of the resource
  *   `keyValuePairs` (*type:* `%{optional(String.t) => GoogleApi.CloudIdentity.V1.Model.CustomAttributeValue.t}`, *default:* `nil`) - The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.
  *   `lastUpdateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time the client state data was last updated.
  *   `managed` (*type:* `String.t`, *default:* `nil`) - The management state of the resource as specified by the API client.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device_id}/deviceUsers/{device_user_id}/clientState/{partner_id}`, where partner_id corresponds to the partner storing the data.
  *   `ownerType` (*type:* `String.t`, *default:* `nil`) - Output only. The owner of the ClientState
  *   `scoreReason` (*type:* `String.t`, *default:* `nil`) - A descriptive cause of the health score.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :assetTags => list(String.t()),
          :complianceState => String.t(),
          :createTime => DateTime.t(),
          :customId => String.t(),
          :etag => String.t(),
          :healthScore => String.t(),
          :keyValuePairs => %{
            optional(String.t()) => GoogleApi.CloudIdentity.V1.Model.CustomAttributeValue.t()
          },
          :lastUpdateTime => DateTime.t(),
          :managed => String.t(),
          :name => String.t(),
          :ownerType => String.t(),
          :scoreReason => String.t()
        }

  field(:assetTags, type: :list)
  field(:complianceState)
  field(:createTime, as: DateTime)
  field(:customId)
  field(:etag)
  field(:healthScore)
  field(:keyValuePairs, as: GoogleApi.CloudIdentity.V1.Model.CustomAttributeValue, type: :map)
  field(:lastUpdateTime, as: DateTime)
  field(:managed)
  field(:name)
  field(:ownerType)
  field(:scoreReason)
end

defimpl Poison.Decoder, for: GoogleApi.CloudIdentity.V1.Model.ClientState do
  def decode(value, options) do
    GoogleApi.CloudIdentity.V1.Model.ClientState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudIdentity.V1.Model.ClientState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
