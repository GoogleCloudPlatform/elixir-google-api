# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudIdentity.V1.Model.GroupRelation do
  @moduledoc """
  Message representing a transitive group of a user or a group.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Display name for this group.
  *   `group` (*type:* `String.t`, *default:* `nil`) - Resource name for this group.
  *   `groupKey` (*type:* `GoogleApi.CloudIdentity.V1.Model.EntityKey.t`, *default:* `nil`) - Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Labels for Group resource.
  *   `relationType` (*type:* `String.t`, *default:* `nil`) - The relation between the member and the transitive group.
  *   `roles` (*type:* `list(GoogleApi.CloudIdentity.V1.Model.TransitiveMembershipRole.t)`, *default:* `nil`) - Membership roles of the member for the group.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t(),
          :group => String.t(),
          :groupKey => GoogleApi.CloudIdentity.V1.Model.EntityKey.t(),
          :labels => map(),
          :relationType => String.t(),
          :roles => list(GoogleApi.CloudIdentity.V1.Model.TransitiveMembershipRole.t())
        }

  field(:displayName)
  field(:group)
  field(:groupKey, as: GoogleApi.CloudIdentity.V1.Model.EntityKey)
  field(:labels, type: :map)
  field(:relationType)
  field(:roles, as: GoogleApi.CloudIdentity.V1.Model.TransitiveMembershipRole, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.CloudIdentity.V1.Model.GroupRelation do
  def decode(value, options) do
    GoogleApi.CloudIdentity.V1.Model.GroupRelation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudIdentity.V1.Model.GroupRelation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
