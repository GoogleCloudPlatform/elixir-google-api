# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.UpgradeAvailableEvent do
  @moduledoc """
  UpgradeAvailableEvent is a notification sent to customers when a new available version is released.

  ## Attributes

  *   `releaseChannel` (*type:* `GoogleApi.Container.V1.Model.ReleaseChannel.t`, *default:* `nil`) - The release channel of the version. If empty, it means a non-channel release.
  *   `resource` (*type:* `String.t`, *default:* `nil`) - Optional relative path to the resource. For example, the relative path of the node pool.
  *   `resourceType` (*type:* `String.t`, *default:* `nil`) - The resource type of the release version.
  *   `version` (*type:* `String.t`, *default:* `nil`) - The release version available for upgrade.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :releaseChannel => GoogleApi.Container.V1.Model.ReleaseChannel.t() | nil,
          :resource => String.t() | nil,
          :resourceType => String.t() | nil,
          :version => String.t() | nil
        }

  field(:releaseChannel, as: GoogleApi.Container.V1.Model.ReleaseChannel)
  field(:resource)
  field(:resourceType)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.UpgradeAvailableEvent do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.UpgradeAvailableEvent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.UpgradeAvailableEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
