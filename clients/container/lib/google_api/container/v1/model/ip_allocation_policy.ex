# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Container.V1.Model.IpAllocationPolicy do
  @moduledoc """
  Configuration for controlling how IPs are allocated in the cluster.

  ## Attributes

  - clusterIpv4Cidr (String.t): This field is deprecated, use cluster_ipv4_cidr_block. Defaults to: `null`.
  - clusterIpv4CidrBlock (String.t): The IP address range for the cluster pod IPs. If this field is set, then &#x60;cluster.cluster_ipv4_cidr&#x60; must be left blank.  This field is only applicable when &#x60;use_ip_aliases&#x60; is true.  Set to blank to have a range chosen with the default size.  Set to /netmask (e.g. &#x60;/14&#x60;) to have a range chosen with a specific netmask.  Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. &#x60;10.96.0.0/14&#x60;) from the RFC-1918 private networks (e.g. &#x60;10.0.0.0/8&#x60;, &#x60;172.16.0.0/12&#x60;, &#x60;192.168.0.0/16&#x60;) to pick a specific range to use. Defaults to: `null`.
  - clusterSecondaryRangeName (String.t): The name of the secondary range to be used for the cluster CIDR block.  The secondary range will be used for pod IP addresses. This must be an existing secondary range associated with the cluster subnetwork.  This field is only applicable with use_ip_aliases is true and create_subnetwork is false. Defaults to: `null`.
  - createSubnetwork (boolean()): Whether a new subnetwork will be created automatically for the cluster.  This field is only applicable when &#x60;use_ip_aliases&#x60; is true. Defaults to: `null`.
  - nodeIpv4Cidr (String.t): This field is deprecated, use node_ipv4_cidr_block. Defaults to: `null`.
  - nodeIpv4CidrBlock (String.t): The IP address range of the instance IPs in this cluster.  This is applicable only if &#x60;create_subnetwork&#x60; is true.  Set to blank to have a range chosen with the default size.  Set to /netmask (e.g. &#x60;/14&#x60;) to have a range chosen with a specific netmask.  Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. &#x60;10.96.0.0/14&#x60;) from the RFC-1918 private networks (e.g. &#x60;10.0.0.0/8&#x60;, &#x60;172.16.0.0/12&#x60;, &#x60;192.168.0.0/16&#x60;) to pick a specific range to use. Defaults to: `null`.
  - servicesIpv4Cidr (String.t): This field is deprecated, use services_ipv4_cidr_block. Defaults to: `null`.
  - servicesIpv4CidrBlock (String.t): The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size.  This field is only applicable when &#x60;use_ip_aliases&#x60; is true.  Set to blank to have a range chosen with the default size.  Set to /netmask (e.g. &#x60;/14&#x60;) to have a range chosen with a specific netmask.  Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. &#x60;10.96.0.0/14&#x60;) from the RFC-1918 private networks (e.g. &#x60;10.0.0.0/8&#x60;, &#x60;172.16.0.0/12&#x60;, &#x60;192.168.0.0/16&#x60;) to pick a specific range to use. Defaults to: `null`.
  - servicesSecondaryRangeName (String.t): The name of the secondary range to be used as for the services CIDR block.  The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork.  This field is only applicable with use_ip_aliases is true and create_subnetwork is false. Defaults to: `null`.
  - subnetworkName (String.t): A custom subnetwork name to be used if &#x60;create_subnetwork&#x60; is true.  If this field is empty, then an automatic name will be chosen for the new subnetwork. Defaults to: `null`.
  - useIpAliases (boolean()): Whether alias IPs will be used for pod IPs in the cluster. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clusterIpv4Cidr => any(),
          :clusterIpv4CidrBlock => any(),
          :clusterSecondaryRangeName => any(),
          :createSubnetwork => any(),
          :nodeIpv4Cidr => any(),
          :nodeIpv4CidrBlock => any(),
          :servicesIpv4Cidr => any(),
          :servicesIpv4CidrBlock => any(),
          :servicesSecondaryRangeName => any(),
          :subnetworkName => any(),
          :useIpAliases => any()
        }

  field(:clusterIpv4Cidr)
  field(:clusterIpv4CidrBlock)
  field(:clusterSecondaryRangeName)
  field(:createSubnetwork)
  field(:nodeIpv4Cidr)
  field(:nodeIpv4CidrBlock)
  field(:servicesIpv4Cidr)
  field(:servicesIpv4CidrBlock)
  field(:servicesSecondaryRangeName)
  field(:subnetworkName)
  field(:useIpAliases)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.IpAllocationPolicy do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.IpAllocationPolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.IpAllocationPolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
