# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Container.V1.Model.ServerConfig do
  @moduledoc """
  Kubernetes Engine service configuration.

  ## Attributes

  - defaultClusterVersion (String.t): Version of Kubernetes the service deploys by default. Defaults to `nil`.
  - defaultImageType (String.t): Default image type. Defaults to `nil`.
  - validImageTypes (list(String.t)): List of valid image types. Defaults to `nil`.
  - validMasterVersions (list(String.t)): List of valid master versions. Defaults to `nil`.
  - validNodeVersions (list(String.t)): List of valid node upgrade target versions. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :defaultClusterVersion => String.t(),
          :defaultImageType => String.t(),
          :validImageTypes => list(String.t()),
          :validMasterVersions => list(String.t()),
          :validNodeVersions => list(String.t())
        }

  field(:defaultClusterVersion)
  field(:defaultImageType)
  field(:validImageTypes, type: :list)
  field(:validMasterVersions, type: :list)
  field(:validNodeVersions, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.ServerConfig do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.ServerConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.ServerConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
