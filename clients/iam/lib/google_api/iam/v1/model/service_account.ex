# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.IAM.V1.Model.ServiceAccount do
  @moduledoc """
  A service account in the Identity and Access Management API.

  To create a service account, specify the `project_id` and the `account_id`
  for the account.  The `account_id` is unique within the project, and is used
  to generate the service account email address and a stable
  `unique_id`.

  If the account already exists, the account's resource name is returned
  in the format of projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}. The caller
  can use the name in other methods to access the account.

  All other methods can identify the service account using the format
  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
  Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
  the account. The `ACCOUNT` value can be the `email` address or the
  `unique_id` of the service account.

  ## Attributes

  - description (String.t): Optional. A user-specified opaque description of the service account.
  Must be less than or equal to 256 UTF-8 bytes. Defaults to `nil`.
  - disabled (boolean()): @OutputOnly A bool indicate if the service account is disabled.
  The field is currently in alpha phase. Defaults to `nil`.
  - displayName (String.t): Optional. A user-specified name for the service account.
  Must be less than or equal to 100 UTF-8 bytes. Defaults to `nil`.
  - email (String.t): @OutputOnly The email address of the service account. Defaults to `nil`.
  - etag (String.t): Optional. Note: `etag` is an inoperable legacy field that is only returned
  for backwards compatibility. Defaults to `nil`.
  - name (String.t): The resource name of the service account in the following format:
  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

  Requests using `-` as a wildcard for the `PROJECT_ID` will infer the
  project from the `account` and the `ACCOUNT` value can be the `email`
  address or the `unique_id` of the service account.

  In responses the resource name will always be in the format
  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Defaults to `nil`.
  - oauth2ClientId (String.t): @OutputOnly The OAuth2 client id for the service account.
  This is used in conjunction with the OAuth2 clientconfig API to make
  three legged OAuth2 (3LO) flows to access the data of Google users. Defaults to `nil`.
  - projectId (String.t): @OutputOnly The id of the project that owns the service account. Defaults to `nil`.
  - uniqueId (String.t): @OutputOnly The unique and stable id of the service account. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t(),
          :disabled => boolean(),
          :displayName => String.t(),
          :email => String.t(),
          :etag => String.t(),
          :name => String.t(),
          :oauth2ClientId => String.t(),
          :projectId => String.t(),
          :uniqueId => String.t()
        }

  field(:description)
  field(:disabled)
  field(:displayName)
  field(:email)
  field(:etag)
  field(:name)
  field(:oauth2ClientId)
  field(:projectId)
  field(:uniqueId)
end

defimpl Poison.Decoder, for: GoogleApi.IAM.V1.Model.ServiceAccount do
  def decode(value, options) do
    GoogleApi.IAM.V1.Model.ServiceAccount.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IAM.V1.Model.ServiceAccount do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
