# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.IAM.V1.Model.ServiceAccountKey do
  @moduledoc """
  Represents a service account key.

  A service account has two sets of key-pairs: user-managed, and
  system-managed.

  User-managed key-pairs can be created and deleted by users.  Users are
  responsible for rotating these keys periodically to ensure security of
  their service accounts.  Users retain the private key of these key-pairs,
  and Google retains ONLY the public key.

  System-managed keys are automatically rotated by Google, and are used for
  signing for a maximum of two weeks. The rotation process is probabilistic,
  and usage of the new key will gradually ramp up and down over the key's
  lifetime. We recommend caching the public key set for a service account for
  no more than 24 hours to ensure you have access to the latest keys.

  Public keys for all service accounts are also published at the OAuth2
  Service Account API.

  ## Attributes

  - keyAlgorithm (String.t): Specifies the algorithm (and possibly key size) for the key. Defaults to `nil`.
  - keyOrigin (String.t): The key origin. Defaults to `nil`.
  - name (String.t): The resource name of the service account key in the following format
  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Defaults to `nil`.
  - privateKeyData (String.t): The private key data. Only provided in `CreateServiceAccountKey`
  responses. Make sure to keep the private key data secure because it
  allows for the assertion of the service account identity.
  When base64 decoded, the private key data can be used to authenticate with
  Google API client libraries and with
  <a href="/sdk/gcloud/reference/auth/activate-service-account">gcloud
  auth activate-service-account</a>. Defaults to `nil`.
  - privateKeyType (String.t): The output format for the private key.
  Only provided in `CreateServiceAccountKey` responses, not
  in `GetServiceAccountKey` or `ListServiceAccountKey` responses.

  Google never exposes system-managed private keys, and never retains
  user-managed private keys. Defaults to `nil`.
  - publicKeyData (String.t): The public key data. Only provided in `GetServiceAccountKey` responses. Defaults to `nil`.
  - validAfterTime (DateTime.t): The key can be used after this timestamp. Defaults to `nil`.
  - validBeforeTime (DateTime.t): The key can be used before this timestamp. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :keyAlgorithm => String.t(),
          :keyOrigin => String.t(),
          :name => String.t(),
          :privateKeyData => String.t(),
          :privateKeyType => String.t(),
          :publicKeyData => String.t(),
          :validAfterTime => DateTime.t(),
          :validBeforeTime => DateTime.t()
        }

  field(:keyAlgorithm)
  field(:keyOrigin)
  field(:name)
  field(:privateKeyData)
  field(:privateKeyType)
  field(:publicKeyData)
  field(:validAfterTime, as: DateTime)
  field(:validBeforeTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.IAM.V1.Model.ServiceAccountKey do
  def decode(value, options) do
    GoogleApi.IAM.V1.Model.ServiceAccountKey.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IAM.V1.Model.ServiceAccountKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
