# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Manufacturers.V1.Model.Issue do
  @moduledoc """
  Product issue.

  ## Attributes

  - attribute (String.t): If present, the attribute that triggered the issue. For more information
  about attributes, see
  https://support.google.com/manufacturers/answer/6124116. Defaults to `nil`.
  - description (String.t): Longer description of the issue focused on how to resolve it. Defaults to `nil`.
  - destination (String.t): The destination this issue applies to. Defaults to `nil`.
  - resolution (String.t): What needs to happen to resolve the issue. Defaults to `nil`.
  - severity (String.t): The severity of the issue. Defaults to `nil`.
  - timestamp (DateTime.t): The timestamp when this issue appeared. Defaults to `nil`.
  - title (String.t): Short title describing the nature of the issue. Defaults to `nil`.
  - type (String.t): The server-generated type of the issue, for example,
  “INCORRECT_TEXT_FORMATTING”, “IMAGE_NOT_SERVEABLE”, etc. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attribute => String.t(),
          :description => String.t(),
          :destination => String.t(),
          :resolution => String.t(),
          :severity => String.t(),
          :timestamp => DateTime.t(),
          :title => String.t(),
          :type => String.t()
        }

  field(:attribute)
  field(:description)
  field(:destination)
  field(:resolution)
  field(:severity)
  field(:timestamp, as: DateTime)
  field(:title)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Manufacturers.V1.Model.Issue do
  def decode(value, options) do
    GoogleApi.Manufacturers.V1.Model.Issue.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Manufacturers.V1.Model.Issue do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
