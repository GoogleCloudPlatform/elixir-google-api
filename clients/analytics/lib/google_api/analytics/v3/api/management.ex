# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Analytics.V3.Api.Management do
  @moduledoc """
  API calls for all endpoints tagged `Management`.
  """

  alias GoogleApi.Analytics.V3.Connection
  import GoogleApi.Analytics.V3.RequestBuilder


  @doc """
  Lists account summaries (lightweight tree comprised of accounts/properties/profiles) to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of account summaries to include in this response, where the largest acceptable value is 1000.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.AccountSummaries{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_account_summaries_list(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.AccountSummaries.t} | {:error, Tesla.Env.t}
  def analytics_management_account_summaries_list(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accountSummaries")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.AccountSummaries{})
  end

  @doc """
  Removes a user from the given account.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to delete the user link for.
  - link_id (String): Link ID to delete the user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_account_user_links_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_account_user_links_delete(connection, account_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/entityUserLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Adds a new user to the given account.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityUserLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_account_user_links_insert(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLink.t} | {:error, Tesla.Env.t}
  def analytics_management_account_user_links_insert(connection, account_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/entityUserLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLink{})
  end

  @doc """
  Lists account-user links for a given account.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve the user links for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of account-user links to include in this response.
    - :start_index (Integer): An index of the first account-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLinks{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_account_user_links_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLinks.t} | {:error, Tesla.Env.t}
  def analytics_management_account_user_links_list(connection, account_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/entityUserLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLinks{})
  end

  @doc """
  Updates permissions for an existing user on the given account.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to update the account-user link for.
  - link_id (String): Link ID to update the account-user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityUserLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_account_user_links_update(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLink.t} | {:error, Tesla.Env.t}
  def analytics_management_account_user_links_update(connection, account_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/entityUserLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLink{})
  end

  @doc """
  Lists all accounts to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of accounts to include in this response.
    - :start_index (Integer): An index of the first account to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Accounts{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_accounts_list(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Accounts.t} | {:error, Tesla.Env.t}
  def analytics_management_accounts_list(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Accounts{})
  end

  @doc """
  List custom data sources to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account Id for the custom data sources to retrieve.
  - web_property_id (String): Web property Id for the custom data sources to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of custom data sources to include in this response.
    - :start_index (Integer): A 1-based index of the first custom data source to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomDataSources{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_data_sources_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomDataSources.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_data_sources_list(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDataSources")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomDataSources{})
  end

  @doc """
  Get a custom dimension to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom dimension to retrieve.
  - web_property_id (String): Web property ID for the custom dimension to retrieve.
  - custom_dimension_id (String): The ID of the custom dimension to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomDimension{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_dimensions_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomDimension.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_dimensions_get(connection, account_id, web_property_id, custom_dimension_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDimensions/#{custom_dimension_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomDimension{})
  end

  @doc """
  Create a new custom dimension.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom dimension to create.
  - web_property_id (String): Web property ID for the custom dimension to create.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (CustomDimension): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomDimension{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_dimensions_insert(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomDimension.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_dimensions_insert(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDimensions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomDimension{})
  end

  @doc """
  Lists custom dimensions to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom dimensions to retrieve.
  - web_property_id (String): Web property ID for the custom dimensions to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of custom dimensions to include in this response.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomDimensions{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_dimensions_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomDimensions.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_dimensions_list(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDimensions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomDimensions{})
  end

  @doc """
  Updates an existing custom dimension. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom dimension to update.
  - web_property_id (String): Web property ID for the custom dimension to update.
  - custom_dimension_id (String): Custom dimension ID for the custom dimension to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :ignore_custom_data_source_links (Boolean): Force the update and ignore any warnings related to the custom dimension being linked to a custom data source / data set.
    - :body (CustomDimension): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomDimension{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_dimensions_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomDimension.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_dimensions_patch(connection, account_id, web_property_id, custom_dimension_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"ignoreCustomDataSourceLinks" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDimensions/#{custom_dimension_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomDimension{})
  end

  @doc """
  Updates an existing custom dimension.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom dimension to update.
  - web_property_id (String): Web property ID for the custom dimension to update.
  - custom_dimension_id (String): Custom dimension ID for the custom dimension to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :ignore_custom_data_source_links (Boolean): Force the update and ignore any warnings related to the custom dimension being linked to a custom data source / data set.
    - :body (CustomDimension): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomDimension{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_dimensions_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomDimension.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_dimensions_update(connection, account_id, web_property_id, custom_dimension_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"ignoreCustomDataSourceLinks" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDimensions/#{custom_dimension_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomDimension{})
  end

  @doc """
  Get a custom metric to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom metric to retrieve.
  - web_property_id (String): Web property ID for the custom metric to retrieve.
  - custom_metric_id (String): The ID of the custom metric to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomMetric{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_metrics_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomMetric.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_metrics_get(connection, account_id, web_property_id, custom_metric_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customMetrics/#{custom_metric_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomMetric{})
  end

  @doc """
  Create a new custom metric.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom metric to create.
  - web_property_id (String): Web property ID for the custom dimension to create.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (CustomMetric): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomMetric{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_metrics_insert(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomMetric.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_metrics_insert(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customMetrics")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomMetric{})
  end

  @doc """
  Lists custom metrics to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom metrics to retrieve.
  - web_property_id (String): Web property ID for the custom metrics to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of custom metrics to include in this response.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomMetrics{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_metrics_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomMetrics.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_metrics_list(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customMetrics")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomMetrics{})
  end

  @doc """
  Updates an existing custom metric. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom metric to update.
  - web_property_id (String): Web property ID for the custom metric to update.
  - custom_metric_id (String): Custom metric ID for the custom metric to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :ignore_custom_data_source_links (Boolean): Force the update and ignore any warnings related to the custom metric being linked to a custom data source / data set.
    - :body (CustomMetric): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomMetric{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_metrics_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomMetric.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_metrics_patch(connection, account_id, web_property_id, custom_metric_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"ignoreCustomDataSourceLinks" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customMetrics/#{custom_metric_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomMetric{})
  end

  @doc """
  Updates an existing custom metric.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the custom metric to update.
  - web_property_id (String): Web property ID for the custom metric to update.
  - custom_metric_id (String): Custom metric ID for the custom metric to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :ignore_custom_data_source_links (Boolean): Force the update and ignore any warnings related to the custom metric being linked to a custom data source / data set.
    - :body (CustomMetric): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.CustomMetric{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_custom_metrics_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.CustomMetric.t} | {:error, Tesla.Env.t}
  def analytics_management_custom_metrics_update(connection, account_id, web_property_id, custom_metric_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"ignoreCustomDataSourceLinks" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customMetrics/#{custom_metric_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.CustomMetric{})
  end

  @doc """
  Delete an experiment.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the experiment belongs
  - web_property_id (String): Web property ID to which the experiment belongs
  - profile_id (String): View (Profile) ID to which the experiment belongs
  - experiment_id (String): ID of the experiment to delete
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_experiments_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_experiments_delete(connection, account_id, web_property_id, profile_id, experiment_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/experiments/#{experiment_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Returns an experiment to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve the experiment for.
  - web_property_id (String): Web property ID to retrieve the experiment for.
  - profile_id (String): View (Profile) ID to retrieve the experiment for.
  - experiment_id (String): Experiment ID to retrieve the experiment for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Experiment{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_experiments_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Experiment.t} | {:error, Tesla.Env.t}
  def analytics_management_experiments_get(connection, account_id, web_property_id, profile_id, experiment_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/experiments/#{experiment_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Experiment{})
  end

  @doc """
  Create a new experiment.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the experiment for.
  - web_property_id (String): Web property ID to create the experiment for.
  - profile_id (String): View (Profile) ID to create the experiment for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Experiment): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Experiment{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_experiments_insert(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Experiment.t} | {:error, Tesla.Env.t}
  def analytics_management_experiments_insert(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/experiments")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Experiment{})
  end

  @doc """
  Lists experiments to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve experiments for.
  - web_property_id (String): Web property ID to retrieve experiments for.
  - profile_id (String): View (Profile) ID to retrieve experiments for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of experiments to include in this response.
    - :start_index (Integer): An index of the first experiment to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Experiments{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_experiments_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Experiments.t} | {:error, Tesla.Env.t}
  def analytics_management_experiments_list(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/experiments")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Experiments{})
  end

  @doc """
  Update an existing experiment. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID of the experiment to update.
  - web_property_id (String): Web property ID of the experiment to update.
  - profile_id (String): View (Profile) ID of the experiment to update.
  - experiment_id (String): Experiment ID of the experiment to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Experiment): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Experiment{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_experiments_patch(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Experiment.t} | {:error, Tesla.Env.t}
  def analytics_management_experiments_patch(connection, account_id, web_property_id, profile_id, experiment_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/experiments/#{experiment_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Experiment{})
  end

  @doc """
  Update an existing experiment.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID of the experiment to update.
  - web_property_id (String): Web property ID of the experiment to update.
  - profile_id (String): View (Profile) ID of the experiment to update.
  - experiment_id (String): Experiment ID of the experiment to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Experiment): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Experiment{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_experiments_update(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Experiment.t} | {:error, Tesla.Env.t}
  def analytics_management_experiments_update(connection, account_id, web_property_id, profile_id, experiment_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/experiments/#{experiment_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Experiment{})
  end

  @doc """
  Delete a filter.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to delete the filter for.
  - filter_id (String): ID of the filter to be deleted.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Filter{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_filters_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Filter.t} | {:error, Tesla.Env.t}
  def analytics_management_filters_delete(connection, account_id, filter_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/filters/#{filter_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Filter{})
  end

  @doc """
  Returns a filters to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve filters for.
  - filter_id (String): Filter ID to retrieve filters for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Filter{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_filters_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Filter.t} | {:error, Tesla.Env.t}
  def analytics_management_filters_get(connection, account_id, filter_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/filters/#{filter_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Filter{})
  end

  @doc """
  Create a new filter.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create filter for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Filter): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Filter{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_filters_insert(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Filter.t} | {:error, Tesla.Env.t}
  def analytics_management_filters_insert(connection, account_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/filters")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Filter{})
  end

  @doc """
  Lists all filters for an account

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve filters for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of filters to include in this response.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Filters{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_filters_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Filters.t} | {:error, Tesla.Env.t}
  def analytics_management_filters_list(connection, account_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/filters")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Filters{})
  end

  @doc """
  Updates an existing filter. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the filter belongs.
  - filter_id (String): ID of the filter to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Filter): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Filter{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_filters_patch(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Filter.t} | {:error, Tesla.Env.t}
  def analytics_management_filters_patch(connection, account_id, filter_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/filters/#{filter_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Filter{})
  end

  @doc """
  Updates an existing filter.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the filter belongs.
  - filter_id (String): ID of the filter to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Filter): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Filter{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_filters_update(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Filter.t} | {:error, Tesla.Env.t}
  def analytics_management_filters_update(connection, account_id, filter_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/filters/#{filter_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Filter{})
  end

  @doc """
  Gets a goal to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve the goal for.
  - web_property_id (String): Web property ID to retrieve the goal for.
  - profile_id (String): View (Profile) ID to retrieve the goal for.
  - goal_id (String): Goal ID to retrieve the goal for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Goal{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_goals_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Goal.t} | {:error, Tesla.Env.t}
  def analytics_management_goals_get(connection, account_id, web_property_id, profile_id, goal_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/goals/#{goal_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Goal{})
  end

  @doc """
  Create a new goal.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the goal for.
  - web_property_id (String): Web property ID to create the goal for.
  - profile_id (String): View (Profile) ID to create the goal for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Goal): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Goal{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_goals_insert(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Goal.t} | {:error, Tesla.Env.t}
  def analytics_management_goals_insert(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/goals")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Goal{})
  end

  @doc """
  Lists goals to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve goals for. Can either be a specific account ID or &#39;~all&#39;, which refers to all the accounts that user has access to.
  - web_property_id (String): Web property ID to retrieve goals for. Can either be a specific web property ID or &#39;~all&#39;, which refers to all the web properties that user has access to.
  - profile_id (String): View (Profile) ID to retrieve goals for. Can either be a specific view (profile) ID or &#39;~all&#39;, which refers to all the views (profiles) that user has access to.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of goals to include in this response.
    - :start_index (Integer): An index of the first goal to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Goals{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_goals_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Goals.t} | {:error, Tesla.Env.t}
  def analytics_management_goals_list(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/goals")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Goals{})
  end

  @doc """
  Updates an existing goal. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to update the goal.
  - web_property_id (String): Web property ID to update the goal.
  - profile_id (String): View (Profile) ID to update the goal.
  - goal_id (String): Index of the goal to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Goal): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Goal{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_goals_patch(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Goal.t} | {:error, Tesla.Env.t}
  def analytics_management_goals_patch(connection, account_id, web_property_id, profile_id, goal_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/goals/#{goal_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Goal{})
  end

  @doc """
  Updates an existing goal.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to update the goal.
  - web_property_id (String): Web property ID to update the goal.
  - profile_id (String): View (Profile) ID to update the goal.
  - goal_id (String): Index of the goal to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Goal): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Goal{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_goals_update(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Goal.t} | {:error, Tesla.Env.t}
  def analytics_management_goals_update(connection, account_id, web_property_id, profile_id, goal_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/goals/#{goal_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Goal{})
  end

  @doc """
  Delete a profile filter link.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the profile filter link belongs.
  - web_property_id (String): Web property Id to which the profile filter link belongs.
  - profile_id (String): Profile ID to which the filter link belongs.
  - link_id (String): ID of the profile filter link to delete.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_filter_links_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_profile_filter_links_delete(connection, account_id, web_property_id, profile_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/profileFilterLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Returns a single profile filter link.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve profile filter link for.
  - web_property_id (String): Web property Id to retrieve profile filter link for.
  - profile_id (String): Profile ID to retrieve filter link for.
  - link_id (String): ID of the profile filter link.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.ProfileFilterLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_filter_links_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.ProfileFilterLink.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_filter_links_get(connection, account_id, web_property_id, profile_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/profileFilterLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.ProfileFilterLink{})
  end

  @doc """
  Create a new profile filter link.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create profile filter link for.
  - web_property_id (String): Web property Id to create profile filter link for.
  - profile_id (String): Profile ID to create filter link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ProfileFilterLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.ProfileFilterLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_filter_links_insert(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.ProfileFilterLink.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_filter_links_insert(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/profileFilterLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.ProfileFilterLink{})
  end

  @doc """
  Lists all profile filter links for a profile.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve profile filter links for.
  - web_property_id (String): Web property Id for profile filter links for. Can either be a specific web property ID or &#39;~all&#39;, which refers to all the web properties that user has access to.
  - profile_id (String): Profile ID to retrieve filter links for. Can either be a specific profile ID or &#39;~all&#39;, which refers to all the profiles that user has access to.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of profile filter links to include in this response.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.ProfileFilterLinks{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_filter_links_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.ProfileFilterLinks.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_filter_links_list(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/profileFilterLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.ProfileFilterLinks{})
  end

  @doc """
  Update an existing profile filter link. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which profile filter link belongs.
  - web_property_id (String): Web property Id to which profile filter link belongs
  - profile_id (String): Profile ID to which filter link belongs
  - link_id (String): ID of the profile filter link to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ProfileFilterLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.ProfileFilterLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_filter_links_patch(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.ProfileFilterLink.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_filter_links_patch(connection, account_id, web_property_id, profile_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/profileFilterLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.ProfileFilterLink{})
  end

  @doc """
  Update an existing profile filter link.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which profile filter link belongs.
  - web_property_id (String): Web property Id to which profile filter link belongs
  - profile_id (String): Profile ID to which filter link belongs
  - link_id (String): ID of the profile filter link to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ProfileFilterLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.ProfileFilterLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_filter_links_update(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.ProfileFilterLink.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_filter_links_update(connection, account_id, web_property_id, profile_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/profileFilterLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.ProfileFilterLink{})
  end

  @doc """
  Removes a user from the given view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to delete the user link for.
  - web_property_id (String): Web Property ID to delete the user link for.
  - profile_id (String): View (Profile) ID to delete the user link for.
  - link_id (String): Link ID to delete the user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_user_links_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_profile_user_links_delete(connection, account_id, web_property_id, profile_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/entityUserLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Adds a new user to the given view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the user link for.
  - web_property_id (String): Web Property ID to create the user link for.
  - profile_id (String): View (Profile) ID to create the user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityUserLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_user_links_insert(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLink.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_user_links_insert(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/entityUserLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLink{})
  end

  @doc """
  Lists profile-user links for a given view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID which the given view (profile) belongs to.
  - web_property_id (String): Web Property ID which the given view (profile) belongs to. Can either be a specific web property ID or &#39;~all&#39;, which refers to all the web properties that user has access to.
  - profile_id (String): View (Profile) ID to retrieve the profile-user links for. Can either be a specific profile ID or &#39;~all&#39;, which refers to all the profiles that user has access to.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of profile-user links to include in this response.
    - :start_index (Integer): An index of the first profile-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLinks{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_user_links_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLinks.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_user_links_list(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/entityUserLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLinks{})
  end

  @doc """
  Updates permissions for an existing user on the given view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to update the user link for.
  - web_property_id (String): Web Property ID to update the user link for.
  - profile_id (String): View (Profile ID) to update the user link for.
  - link_id (String): Link ID to update the user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityUserLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profile_user_links_update(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLink.t} | {:error, Tesla.Env.t}
  def analytics_management_profile_user_links_update(connection, account_id, web_property_id, profile_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/entityUserLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLink{})
  end

  @doc """
  Deletes a view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to delete the view (profile) for.
  - web_property_id (String): Web property ID to delete the view (profile) for.
  - profile_id (String): ID of the view (profile) to be deleted.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profiles_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_profiles_delete(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets a view (profile) to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve the view (profile) for.
  - web_property_id (String): Web property ID to retrieve the view (profile) for.
  - profile_id (String): View (Profile) ID to retrieve the view (profile) for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Profile{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profiles_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Profile.t} | {:error, Tesla.Env.t}
  def analytics_management_profiles_get(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Profile{})
  end

  @doc """
  Create a new view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the view (profile) for.
  - web_property_id (String): Web property ID to create the view (profile) for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Profile): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Profile{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profiles_insert(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Profile.t} | {:error, Tesla.Env.t}
  def analytics_management_profiles_insert(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Profile{})
  end

  @doc """
  Lists views (profiles) to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID for the view (profiles) to retrieve. Can either be a specific account ID or &#39;~all&#39;, which refers to all the accounts to which the user has access.
  - web_property_id (String): Web property ID for the views (profiles) to retrieve. Can either be a specific web property ID or &#39;~all&#39;, which refers to all the web properties to which the user has access.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of views (profiles) to include in this response.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Profiles{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profiles_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Profiles.t} | {:error, Tesla.Env.t}
  def analytics_management_profiles_list(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Profiles{})
  end

  @doc """
  Updates an existing view (profile). This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the view (profile) belongs
  - web_property_id (String): Web property ID to which the view (profile) belongs
  - profile_id (String): ID of the view (profile) to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Profile): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Profile{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profiles_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Profile.t} | {:error, Tesla.Env.t}
  def analytics_management_profiles_patch(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Profile{})
  end

  @doc """
  Updates an existing view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the view (profile) belongs
  - web_property_id (String): Web property ID to which the view (profile) belongs
  - profile_id (String): ID of the view (profile) to be updated.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Profile): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Profile{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_profiles_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Profile.t} | {:error, Tesla.Env.t}
  def analytics_management_profiles_update(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Profile{})
  end

  @doc """
  Delete a remarketing audience.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the remarketing audience belongs.
  - web_property_id (String): Web property ID to which the remarketing audience belongs.
  - remarketing_audience_id (String): The ID of the remarketing audience to delete.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_remarketing_audience_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_remarketing_audience_delete(connection, account_id, web_property_id, remarketing_audience_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/remarketingAudiences/#{remarketing_audience_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets a remarketing audience to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): The account ID of the remarketing audience to retrieve.
  - web_property_id (String): The web property ID of the remarketing audience to retrieve.
  - remarketing_audience_id (String): The ID of the remarketing audience to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.RemarketingAudience{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_remarketing_audience_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.RemarketingAudience.t} | {:error, Tesla.Env.t}
  def analytics_management_remarketing_audience_get(connection, account_id, web_property_id, remarketing_audience_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/remarketingAudiences/#{remarketing_audience_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.RemarketingAudience{})
  end

  @doc """
  Creates a new remarketing audience.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): The account ID for which to create the remarketing audience.
  - web_property_id (String): Web property ID for which to create the remarketing audience.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (RemarketingAudience): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.RemarketingAudience{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_remarketing_audience_insert(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.RemarketingAudience.t} | {:error, Tesla.Env.t}
  def analytics_management_remarketing_audience_insert(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/remarketingAudiences")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.RemarketingAudience{})
  end

  @doc """
  Lists remarketing audiences to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): The account ID of the remarketing audiences to retrieve.
  - web_property_id (String): The web property ID of the remarketing audiences to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of remarketing audiences to include in this response.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    - :type (String): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.RemarketingAudiences{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_remarketing_audience_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.RemarketingAudiences.t} | {:error, Tesla.Env.t}
  def analytics_management_remarketing_audience_list(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query,
      :"type" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/remarketingAudiences")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.RemarketingAudiences{})
  end

  @doc """
  Updates an existing remarketing audience. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): The account ID of the remarketing audience to update.
  - web_property_id (String): The web property ID of the remarketing audience to update.
  - remarketing_audience_id (String): The ID of the remarketing audience to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (RemarketingAudience): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.RemarketingAudience{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_remarketing_audience_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.RemarketingAudience.t} | {:error, Tesla.Env.t}
  def analytics_management_remarketing_audience_patch(connection, account_id, web_property_id, remarketing_audience_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/remarketingAudiences/#{remarketing_audience_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.RemarketingAudience{})
  end

  @doc """
  Updates an existing remarketing audience.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): The account ID of the remarketing audience to update.
  - web_property_id (String): The web property ID of the remarketing audience to update.
  - remarketing_audience_id (String): The ID of the remarketing audience to update.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (RemarketingAudience): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.RemarketingAudience{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_remarketing_audience_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.RemarketingAudience.t} | {:error, Tesla.Env.t}
  def analytics_management_remarketing_audience_update(connection, account_id, web_property_id, remarketing_audience_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/remarketingAudiences/#{remarketing_audience_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.RemarketingAudience{})
  end

  @doc """
  Lists segments to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of segments to include in this response.
    - :start_index (Integer): An index of the first segment to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Segments{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_segments_list(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Segments.t} | {:error, Tesla.Env.t}
  def analytics_management_segments_list(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/segments")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Segments{})
  end

  @doc """
  Deletes an unsampled report.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to delete the unsampled report for.
  - web_property_id (String): Web property ID to delete the unsampled reports for.
  - profile_id (String): View (Profile) ID to delete the unsampled report for.
  - unsampled_report_id (String): ID of the unsampled report to be deleted.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_unsampled_reports_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_unsampled_reports_delete(connection, account_id, web_property_id, profile_id, unsampled_report_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/unsampledReports/#{unsampled_report_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Returns a single unsampled report.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve unsampled report for.
  - web_property_id (String): Web property ID to retrieve unsampled reports for.
  - profile_id (String): View (Profile) ID to retrieve unsampled report for.
  - unsampled_report_id (String): ID of the unsampled report to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.UnsampledReport{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_unsampled_reports_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.UnsampledReport.t} | {:error, Tesla.Env.t}
  def analytics_management_unsampled_reports_get(connection, account_id, web_property_id, profile_id, unsampled_report_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/unsampledReports/#{unsampled_report_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.UnsampledReport{})
  end

  @doc """
  Create a new unsampled report.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the unsampled report for.
  - web_property_id (String): Web property ID to create the unsampled report for.
  - profile_id (String): View (Profile) ID to create the unsampled report for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (UnsampledReport): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.UnsampledReport{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_unsampled_reports_insert(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.UnsampledReport.t} | {:error, Tesla.Env.t}
  def analytics_management_unsampled_reports_insert(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/unsampledReports")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.UnsampledReport{})
  end

  @doc """
  Lists unsampled reports to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve unsampled reports for. Must be a specific account ID, ~all is not supported.
  - web_property_id (String): Web property ID to retrieve unsampled reports for. Must be a specific web property ID, ~all is not supported.
  - profile_id (String): View (Profile) ID to retrieve unsampled reports for. Must be a specific view (profile) ID, ~all is not supported.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of unsampled reports to include in this response.
    - :start_index (Integer): An index of the first unsampled report to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.UnsampledReports{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_unsampled_reports_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.UnsampledReports.t} | {:error, Tesla.Env.t}
  def analytics_management_unsampled_reports_list(connection, account_id, web_property_id, profile_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/profiles/#{profile_id}/unsampledReports")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.UnsampledReports{})
  end

  @doc """
  Delete data associated with a previous upload.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account Id for the uploads to be deleted.
  - web_property_id (String): Web property Id for the uploads to be deleted.
  - custom_data_source_id (String): Custom data source Id for the uploads to be deleted.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (AnalyticsDataimportDeleteUploadDataRequest): 

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_uploads_delete_upload_data(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_uploads_delete_upload_data(connection, account_id, web_property_id, custom_data_source_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDataSources/#{custom_data_source_id}/deleteUploadData")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  List uploads to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account Id for the upload to retrieve.
  - web_property_id (String): Web property Id for the upload to retrieve.
  - custom_data_source_id (String): Custom data source Id for upload to retrieve.
  - upload_id (String): Upload Id to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Upload{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_uploads_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Upload.t} | {:error, Tesla.Env.t}
  def analytics_management_uploads_get(connection, account_id, web_property_id, custom_data_source_id, upload_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDataSources/#{custom_data_source_id}/uploads/#{upload_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Upload{})
  end

  @doc """
  List uploads to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account Id for the uploads to retrieve.
  - web_property_id (String): Web property Id for the uploads to retrieve.
  - custom_data_source_id (String): Custom data source Id for uploads to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of uploads to include in this response.
    - :start_index (Integer): A 1-based index of the first upload to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Uploads{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_uploads_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Uploads.t} | {:error, Tesla.Env.t}
  def analytics_management_uploads_list(connection, account_id, web_property_id, custom_data_source_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDataSources/#{custom_data_source_id}/uploads")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Uploads{})
  end

  @doc """
  Upload data for a custom data source.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account Id associated with the upload.
  - web_property_id (String): Web property UA-string associated with the upload.
  - custom_data_source_id (String): Custom data source Id to which the data being uploaded belongs.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Upload{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_uploads_upload_data(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Upload.t} | {:error, Tesla.Env.t}
  def analytics_management_uploads_upload_data(connection, account_id, web_property_id, custom_data_source_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDataSources/#{custom_data_source_id}/uploads")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Upload{})
  end

  @doc """
  Upload data for a custom data source.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account Id associated with the upload.
  - web_property_id (String): Web property UA-string associated with the upload.
  - custom_data_source_id (String): Custom data source Id to which the data being uploaded belongs.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_uploads_upload_data_resumable(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_uploads_upload_data_resumable(connection, account_id, web_property_id, custom_data_source_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/resumable/upload/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDataSources/#{custom_data_source_id}/uploads")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Upload data for a custom data source.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account Id associated with the upload.
  - web_property_id (String): Web property UA-string associated with the upload.
  - custom_data_source_id (String): Custom data source Id to which the data being uploaded belongs.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Upload{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_uploads_upload_data_simple(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Upload.t} | {:error, Tesla.Env.t}
  def analytics_management_uploads_upload_data_simple(connection, account_id, web_property_id, custom_data_source_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/upload/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/customDataSources/#{custom_data_source_id}/uploads")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Upload{})
  end

  @doc """
  Deletes a web property-AdWords link.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): ID of the account which the given web property belongs to.
  - web_property_id (String): Web property ID to delete the AdWords link for.
  - web_property_ad_words_link_id (String): Web property AdWords link ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_web_property_ad_words_links_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_web_property_ad_words_links_delete(connection, account_id, web_property_id, web_property_ad_words_link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityAdWordsLinks/#{web_property_ad_words_link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Returns a web property-AdWords link to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): ID of the account which the given web property belongs to.
  - web_property_id (String): Web property ID to retrieve the AdWords link for.
  - web_property_ad_words_link_id (String): Web property-AdWords link ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityAdWordsLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_web_property_ad_words_links_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityAdWordsLink.t} | {:error, Tesla.Env.t}
  def analytics_management_web_property_ad_words_links_get(connection, account_id, web_property_id, web_property_ad_words_link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityAdWordsLinks/#{web_property_ad_words_link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityAdWordsLink{})
  end

  @doc """
  Creates a webProperty-AdWords link.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): ID of the Google Analytics account to create the link for.
  - web_property_id (String): Web property ID to create the link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityAdWordsLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityAdWordsLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_web_property_ad_words_links_insert(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityAdWordsLink.t} | {:error, Tesla.Env.t}
  def analytics_management_web_property_ad_words_links_insert(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityAdWordsLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityAdWordsLink{})
  end

  @doc """
  Lists webProperty-AdWords links for a given web property.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): ID of the account which the given web property belongs to.
  - web_property_id (String): Web property ID to retrieve the AdWords links for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of webProperty-AdWords links to include in this response.
    - :start_index (Integer): An index of the first webProperty-AdWords link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityAdWordsLinks{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_web_property_ad_words_links_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityAdWordsLinks.t} | {:error, Tesla.Env.t}
  def analytics_management_web_property_ad_words_links_list(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityAdWordsLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityAdWordsLinks{})
  end

  @doc """
  Updates an existing webProperty-AdWords link. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): ID of the account which the given web property belongs to.
  - web_property_id (String): Web property ID to retrieve the AdWords link for.
  - web_property_ad_words_link_id (String): Web property-AdWords link ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityAdWordsLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityAdWordsLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_web_property_ad_words_links_patch(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityAdWordsLink.t} | {:error, Tesla.Env.t}
  def analytics_management_web_property_ad_words_links_patch(connection, account_id, web_property_id, web_property_ad_words_link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityAdWordsLinks/#{web_property_ad_words_link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityAdWordsLink{})
  end

  @doc """
  Updates an existing webProperty-AdWords link.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): ID of the account which the given web property belongs to.
  - web_property_id (String): Web property ID to retrieve the AdWords link for.
  - web_property_ad_words_link_id (String): Web property-AdWords link ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityAdWordsLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityAdWordsLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_web_property_ad_words_links_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityAdWordsLink.t} | {:error, Tesla.Env.t}
  def analytics_management_web_property_ad_words_links_update(connection, account_id, web_property_id, web_property_ad_words_link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityAdWordsLinks/#{web_property_ad_words_link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityAdWordsLink{})
  end

  @doc """
  Gets a web property to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve the web property for.
  - web_property_id (String): ID to retrieve the web property for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Webproperty{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperties_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Webproperty.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperties_get(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Webproperty{})
  end

  @doc """
  Create a new property if the account has fewer than 20 properties. Web properties are visible in the Google Analytics interface only if they have at least one profile.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the web property for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Webproperty): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Webproperty{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperties_insert(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Webproperty.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperties_insert(connection, account_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Webproperty{})
  end

  @doc """
  Lists web properties to which the user has access.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to retrieve web properties for. Can either be a specific account ID or &#39;~all&#39;, which refers to all the accounts that user has access to.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of web properties to include in this response.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Webproperties{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperties_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Webproperties.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperties_list(connection, account_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Webproperties{})
  end

  @doc """
  Updates an existing web property. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the web property belongs
  - web_property_id (String): Web property ID
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Webproperty): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Webproperty{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperties_patch(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Webproperty.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperties_patch(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Webproperty{})
  end

  @doc """
  Updates an existing web property.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to which the web property belongs
  - web_property_id (String): Web property ID
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Webproperty): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.Webproperty{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperties_update(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.Webproperty.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperties_update(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.Webproperty{})
  end

  @doc """
  Removes a user from the given web property.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to delete the user link for.
  - web_property_id (String): Web Property ID to delete the user link for.
  - link_id (String): Link ID to delete the user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperty_user_links_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def analytics_management_webproperty_user_links_delete(connection, account_id, web_property_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityUserLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Adds a new user to the given web property.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to create the user link for.
  - web_property_id (String): Web Property ID to create the user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityUserLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperty_user_links_insert(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLink.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperty_user_links_insert(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityUserLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLink{})
  end

  @doc """
  Lists webProperty-user links for a given web property.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID which the given web property belongs to.
  - web_property_id (String): Web Property ID for the webProperty-user links to retrieve. Can either be a specific web property ID or &#39;~all&#39;, which refers to all the web properties that user has access to.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): The maximum number of webProperty-user Links to include in this response.
    - :start_index (Integer): An index of the first webProperty-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLinks{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperty_user_links_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLinks.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperty_user_links_list(connection, account_id, web_property_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"max-results" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityUserLinks")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLinks{})
  end

  @doc """
  Updates permissions for an existing user on the given web property.

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - account_id (String): Account ID to update the account-user link for.
  - web_property_id (String): Web property ID to update the account-user link for.
  - link_id (String): Link ID to update the account-user link for.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (EntityUserLink): 

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.EntityUserLink{}} on success
  {:error, info} on failure
  """
  @spec analytics_management_webproperty_user_links_update(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.EntityUserLink.t} | {:error, Tesla.Env.t}
  def analytics_management_webproperty_user_links_update(connection, account_id, web_property_id, link_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/analytics/v3/management/accounts/#{account_id}/webproperties/#{web_property_id}/entityUserLinks/#{link_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.EntityUserLink{})
  end
end
