# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Analytics.V3.Api.Data do
  @moduledoc """
  API calls for all endpoints tagged `Data`.
  """

  alias GoogleApi.Analytics.V3.Connection
  import GoogleApi.Analytics.V3.RequestBuilder


  @doc """
  Returns Analytics data for a view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - ids (String): Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
  - start_date (String): Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
  - end_date (String): End date for fetching Analytics data. Request can should specify an end date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is yesterday.
  - metrics (String): A comma-separated list of Analytics metrics. E.g., &#39;ga:sessions,ga:pageviews&#39;. At least one metric must be specified.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :dimensions (String): A comma-separated list of Analytics dimensions. E.g., &#39;ga:browser,ga:city&#39;.
    - :filters (String): A comma-separated list of dimension or metric filters to be applied to Analytics data.
    - :include_empty_rows (Boolean): The response will include empty rows if this parameter is set to true, the default is true
    - :max_results (Integer): The maximum number of entries to include in this feed.
    - :output (String): The selected format for the response. Default format is JSON.
    - :sampling_level (String): The desired sampling level.
    - :segment (String): An Analytics segment to be applied to data.
    - :sort (String): A comma-separated list of dimensions or metrics that determine the sort order for Analytics data.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.GaData{}} on success
  {:error, info} on failure
  """
  @spec analytics_data_ga_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.GaData.t} | {:error, Tesla.Env.t}
  def analytics_data_ga_get(connection, ids, start_date, end_date, metrics, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"dimensions" => :query,
      :"filters" => :query,
      :"include-empty-rows" => :query,
      :"max-results" => :query,
      :"output" => :query,
      :"samplingLevel" => :query,
      :"segment" => :query,
      :"sort" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/data/ga")
    |> add_param(:query, :"ids", ids)
    |> add_param(:query, :"start-date", start_date)
    |> add_param(:query, :"end-date", end_date)
    |> add_param(:query, :"metrics", metrics)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.GaData{})
  end

  @doc """
  Returns Analytics Multi-Channel Funnels data for a view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - ids (String): Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
  - start_date (String): Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
  - end_date (String): End date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
  - metrics (String): A comma-separated list of Multi-Channel Funnels metrics. E.g., &#39;mcf:totalConversions,mcf:totalConversionValue&#39;. At least one metric must be specified.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :dimensions (String): A comma-separated list of Multi-Channel Funnels dimensions. E.g., &#39;mcf:source,mcf:medium&#39;.
    - :filters (String): A comma-separated list of dimension or metric filters to be applied to the Analytics data.
    - :max_results (Integer): The maximum number of entries to include in this feed.
    - :sampling_level (String): The desired sampling level.
    - :sort (String): A comma-separated list of dimensions or metrics that determine the sort order for the Analytics data.
    - :start_index (Integer): An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.McfData{}} on success
  {:error, info} on failure
  """
  @spec analytics_data_mcf_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.McfData.t} | {:error, Tesla.Env.t}
  def analytics_data_mcf_get(connection, ids, start_date, end_date, metrics, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"dimensions" => :query,
      :"filters" => :query,
      :"max-results" => :query,
      :"samplingLevel" => :query,
      :"sort" => :query,
      :"start-index" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/data/mcf")
    |> add_param(:query, :"ids", ids)
    |> add_param(:query, :"start-date", start_date)
    |> add_param(:query, :"end-date", end_date)
    |> add_param(:query, :"metrics", metrics)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.McfData{})
  end

  @doc """
  Returns real time data for a view (profile).

  ## Parameters

  - connection (GoogleApi.Analytics.V3.Connection): Connection to server
  - ids (String): Unique table ID for retrieving real time data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
  - metrics (String): A comma-separated list of real time metrics. E.g., &#39;rt:activeUsers&#39;. At least one metric must be specified.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :dimensions (String): A comma-separated list of real time dimensions. E.g., &#39;rt:medium,rt:city&#39;.
    - :filters (String): A comma-separated list of dimension or metric filters to be applied to real time data.
    - :max_results (Integer): The maximum number of entries to include in this feed.
    - :sort (String): A comma-separated list of dimensions or metrics that determine the sort order for real time data.

  ## Returns

  {:ok, %GoogleApi.Analytics.V3.Model.RealtimeData{}} on success
  {:error, info} on failure
  """
  @spec analytics_data_realtime_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Analytics.V3.Model.RealtimeData.t} | {:error, Tesla.Env.t}
  def analytics_data_realtime_get(connection, ids, metrics, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"dimensions" => :query,
      :"filters" => :query,
      :"max-results" => :query,
      :"sort" => :query
    }
    %{}
    |> method(:get)
    |> url("/analytics/v3/data/realtime")
    |> add_param(:query, :"ids", ids)
    |> add_param(:query, :"metrics", metrics)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Analytics.V3.Model.RealtimeData{})
  end
end
