# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Analytics.V3.Model.LinkedForeignAccount do
  @moduledoc """
  JSON template for an Analytics Remarketing Audience Foreign Link.

  ## Attributes

  - accountId (String.t): Account ID to which this linked foreign account belongs. Defaults to `nil`.
  - eligibleForSearch (boolean()): Boolean indicating whether this is eligible for search. Defaults to `nil`.
  - id (String.t): Entity ad account link ID. Defaults to `nil`.
  - internalWebPropertyId (String.t): Internal ID for the web property to which this linked foreign account belongs. Defaults to `nil`.
  - kind (String.t): Resource type for linked foreign account. Defaults to `analytics#linkedForeignAccount`.
  - linkedAccountId (String.t): The foreign account ID. For example the an Google Ads `linkedAccountId` has the following format XXX-XXX-XXXX. Defaults to `nil`.
  - remarketingAudienceId (String.t): Remarketing audience ID to which this linked foreign account belongs. Defaults to `nil`.
  - status (String.t): The status of this foreign account link. Defaults to `nil`.
  - type (String.t): The type of the foreign account. For example, `ADWORDS_LINKS`, `DBM_LINKS`, `MCC_LINKS` or `OPTIMIZE`. Defaults to `nil`.
  - webPropertyId (String.t): Web property ID of the form UA-XXXXX-YY to which this linked foreign account belongs. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accountId => String.t(),
          :eligibleForSearch => boolean(),
          :id => String.t(),
          :internalWebPropertyId => String.t(),
          :kind => String.t(),
          :linkedAccountId => String.t(),
          :remarketingAudienceId => String.t(),
          :status => String.t(),
          :type => String.t(),
          :webPropertyId => String.t()
        }

  field(:accountId)
  field(:eligibleForSearch)
  field(:id)
  field(:internalWebPropertyId)
  field(:kind)
  field(:linkedAccountId)
  field(:remarketingAudienceId)
  field(:status)
  field(:type)
  field(:webPropertyId)
end

defimpl Poison.Decoder, for: GoogleApi.Analytics.V3.Model.LinkedForeignAccount do
  def decode(value, options) do
    GoogleApi.Analytics.V3.Model.LinkedForeignAccount.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Analytics.V3.Model.LinkedForeignAccount do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
