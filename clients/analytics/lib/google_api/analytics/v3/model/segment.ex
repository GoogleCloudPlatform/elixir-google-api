# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Analytics.V3.Model.Segment do
  @moduledoc """
  JSON template for an Analytics segment.

  ## Attributes

  - created (DateTime.t): Time the segment was created. Defaults to `nil`.
  - definition (String.t): Segment definition. Defaults to `nil`.
  - id (String.t): Segment ID. Defaults to `nil`.
  - kind (String.t): Resource type for Analytics segment. Defaults to `analytics#segment`.
  - name (String.t): Segment name. Defaults to `nil`.
  - segmentId (String.t): Segment ID. Can be used with the 'segment' parameter in Core Reporting API. Defaults to `nil`.
  - selfLink (String.t): Link for this segment. Defaults to `nil`.
  - type (String.t): Type for a segment. Possible values are "BUILT_IN" or "CUSTOM". Defaults to `nil`.
  - updated (DateTime.t): Time the segment was last modified. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :created => DateTime.t(),
          :definition => String.t(),
          :id => String.t(),
          :kind => String.t(),
          :name => String.t(),
          :segmentId => String.t(),
          :selfLink => String.t(),
          :type => String.t(),
          :updated => DateTime.t()
        }

  field(:created, as: DateTime)
  field(:definition)
  field(:id)
  field(:kind)
  field(:name)
  field(:segmentId)
  field(:selfLink)
  field(:type)
  field(:updated, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Analytics.V3.Model.Segment do
  def decode(value, options) do
    GoogleApi.Analytics.V3.Model.Segment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Analytics.V3.Model.Segment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
