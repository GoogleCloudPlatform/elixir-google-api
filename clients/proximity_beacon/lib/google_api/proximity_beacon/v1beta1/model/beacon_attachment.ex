# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ProximityBeacon.V1beta1.Model.BeaconAttachment do
  @moduledoc """
  Project-specific data associated with a beacon.

  ## Attributes

  - attachmentName (String.t): Resource name of this attachment. Attachment names have the format: &lt;code&gt;beacons/&lt;var&gt;beacon_id&lt;/var&gt;/attachments/&lt;var&gt;attachment_id&lt;/var&gt;&lt;/code&gt;. Leave this empty on creation. Defaults to: `null`.
  - creationTimeMs (DateTime.t): The UTC time when this attachment was created, in milliseconds since the UNIX epoch. Defaults to: `null`.
  - data (binary()): An opaque data container for client-provided data. Must be [base64](http://tools.ietf.org/html/rfc4648#section-4) encoded in HTTP requests, and will be so encoded (with padding) in responses. Required. Defaults to: `null`.
  - maxDistanceMeters (float()): The distance away from the beacon at which this attachment should be delivered to a mobile app.  Setting this to a value greater than zero indicates that the app should behave as if the beacon is \&quot;seen\&quot; when the mobile device is less than this distance away from the beacon.  Different attachments on the same beacon can have different max distances.  Note that even though this value is expressed with fractional meter precision, real-world behavior is likley to be much less precise than one meter, due to the nature of current Bluetooth radio technology.  Optional. When not set or zero, the attachment should be delivered at the beacon&#39;s outer limit of detection.  Negative values are invalid and return an error. Defaults to: `null`.
  - namespacedType (String.t): Specifies what kind of attachment this is. Tells a client how to interpret the &#x60;data&#x60; field. Format is &lt;var&gt;namespace/type&lt;/var&gt;. Namespace provides type separation between clients. Type describes the type of &#x60;data&#x60;, for use by the client when parsing the &#x60;data&#x60; field. Required. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attachmentName => any(),
          :creationTimeMs => DateTime.t(),
          :data => any(),
          :maxDistanceMeters => any(),
          :namespacedType => any()
        }

  field(:attachmentName)
  field(:creationTimeMs, as: DateTime)
  field(:data)
  field(:maxDistanceMeters)
  field(:namespacedType)
end

defimpl Poison.Decoder, for: GoogleApi.ProximityBeacon.V1beta1.Model.BeaconAttachment do
  def decode(value, options) do
    GoogleApi.ProximityBeacon.V1beta1.Model.BeaconAttachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ProximityBeacon.V1beta1.Model.BeaconAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
