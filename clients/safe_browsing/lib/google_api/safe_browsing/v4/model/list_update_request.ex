# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SafeBrowsing.V4.Model.ListUpdateRequest do
  @moduledoc """
  A single list update request.

  ## Attributes

  - constraints (Constraints): The constraints associated with this request. Defaults to: `null`.
  - platformType (String): The type of platform at risk by entries present in the list. Defaults to: `null`.
    - Enum - one of [PLATFORM_TYPE_UNSPECIFIED, WINDOWS, LINUX, ANDROID, OSX, IOS, ANY_PLATFORM, ALL_PLATFORMS, CHROME]
  - state (String): The current state of the client for the requested list (the encrypted client state that was received from the last successful list update). Defaults to: `null`.
  - threatEntryType (String): The types of entries present in the list. Defaults to: `null`.
    - Enum - one of [THREAT_ENTRY_TYPE_UNSPECIFIED, URL, EXECUTABLE, IP_RANGE, CHROME_EXTENSION, FILENAME, CERT]
  - threatType (String): The type of threat posed by entries present in the list. Defaults to: `null`.
    - Enum - one of [THREAT_TYPE_UNSPECIFIED, MALWARE, SOCIAL_ENGINEERING, UNWANTED_SOFTWARE, POTENTIALLY_HARMFUL_APPLICATION, SOCIAL_ENGINEERING_INTERNAL, API_ABUSE, MALICIOUS_BINARY, CSD_WHITELIST, CSD_DOWNLOAD_WHITELIST, CLIENT_INCIDENT, CLIENT_INCIDENT_WHITELIST, APK_MALWARE_OFFLINE, SUBRESOURCE_FILTER]
  """

  defstruct [
    :"constraints",
    :"platformType",
    :"state",
    :"threatEntryType",
    :"threatType"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.SafeBrowsing.V4.Model.ListUpdateRequest do
  import GoogleApi.SafeBrowsing.V4.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"constraints", :struct, GoogleApi.SafeBrowsing.V4.Model.Constraints, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SafeBrowsing.V4.Model.ListUpdateRequest do
  def encode(value, options) do
    GoogleApi.SafeBrowsing.V4.Deserializer.serialize_non_nil(value, options)
  end
end

