# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.SafeBrowsing.V4.Model.ThreatHit do
  @moduledoc """


  ## Attributes

  - clientInfo (GoogleApi.SafeBrowsing.V4.Model.ClientInfo.t): Client-reported identification. Defaults to `nil`.
  - entry (GoogleApi.SafeBrowsing.V4.Model.ThreatEntry.t): The threat entry responsible for the hit. Full hash should be reported for
  hash-based hits. Defaults to `nil`.
  - platformType (String.t): The platform type reported. Defaults to `nil`.
  - resources (list(GoogleApi.SafeBrowsing.V4.Model.ThreatSource.t)): The resources related to the threat hit. Defaults to `nil`.
  - threatType (String.t): The threat type reported. Defaults to `nil`.
  - userInfo (GoogleApi.SafeBrowsing.V4.Model.UserInfo.t): Details about the user that encountered the threat. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clientInfo => GoogleApi.SafeBrowsing.V4.Model.ClientInfo.t(),
          :entry => GoogleApi.SafeBrowsing.V4.Model.ThreatEntry.t(),
          :platformType => String.t(),
          :resources => list(GoogleApi.SafeBrowsing.V4.Model.ThreatSource.t()),
          :threatType => String.t(),
          :userInfo => GoogleApi.SafeBrowsing.V4.Model.UserInfo.t()
        }

  field(:clientInfo, as: GoogleApi.SafeBrowsing.V4.Model.ClientInfo)
  field(:entry, as: GoogleApi.SafeBrowsing.V4.Model.ThreatEntry)
  field(:platformType)
  field(:resources, as: GoogleApi.SafeBrowsing.V4.Model.ThreatSource, type: :list)
  field(:threatType)
  field(:userInfo, as: GoogleApi.SafeBrowsing.V4.Model.UserInfo)
end

defimpl Poison.Decoder, for: GoogleApi.SafeBrowsing.V4.Model.ThreatHit do
  def decode(value, options) do
    GoogleApi.SafeBrowsing.V4.Model.ThreatHit.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SafeBrowsing.V4.Model.ThreatHit do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
