# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Monitoring.V3.Model.UptimeCheckResult do
  @moduledoc """
  The result of a single uptime check execution. For group checks, this corresponds to one member of the group.

  ## Attributes

  *   `checkPassed` (*type:* `boolean()`, *default:* `nil`) - True if the resource passed the check.
  *   `contentMismatch` (*type:* `boolean()`, *default:* `nil`) - True if the response had content that did not match the check.
  *   `errorCode` (*type:* `String.t`, *default:* `nil`) - For HTTP checks, error, if any, that prevented contact with the resource (ex: DNS_NAME_UNKNOWN, INVALID_URL).
  *   `httpStatus` (*type:* `integer()`, *default:* `nil`) - For HTTP checks, HTTP response code returned by the resource.
  *   `monitoredResource` (*type:* `GoogleApi.Monitoring.V3.Model.MonitoredResource.t`, *default:* `nil`) - The monitored resource (https://cloud.google.com/monitoring/api/resources) for the Uptime check result.
  *   `requestLatency` (*type:* `String.t`, *default:* `nil`) - The request latency when executing the uptime check.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :checkPassed => boolean(),
          :contentMismatch => boolean(),
          :errorCode => String.t(),
          :httpStatus => integer(),
          :monitoredResource => GoogleApi.Monitoring.V3.Model.MonitoredResource.t(),
          :requestLatency => String.t()
        }

  field(:checkPassed)
  field(:contentMismatch)
  field(:errorCode)
  field(:httpStatus)
  field(:monitoredResource, as: GoogleApi.Monitoring.V3.Model.MonitoredResource)
  field(:requestLatency)
end

defimpl Poison.Decoder, for: GoogleApi.Monitoring.V3.Model.UptimeCheckResult do
  def decode(value, options) do
    GoogleApi.Monitoring.V3.Model.UptimeCheckResult.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Monitoring.V3.Model.UptimeCheckResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
