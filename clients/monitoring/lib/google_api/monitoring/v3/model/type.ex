# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Monitoring.V3.Model.Type do
  @moduledoc """
  A protocol buffer message type.

  ## Attributes

  - fields (list(GoogleApi.Monitoring.V3.Model.Field.t)): The list of fields. Defaults to `nil`.
  - name (String.t): The fully qualified message name. Defaults to `nil`.
  - oneofs (list(String.t)): The list of types appearing in oneof definitions in this type. Defaults to `nil`.
  - options (list(GoogleApi.Monitoring.V3.Model.Option.t)): The protocol buffer options. Defaults to `nil`.
  - sourceContext (GoogleApi.Monitoring.V3.Model.SourceContext.t): The source context. Defaults to `nil`.
  - syntax (String.t): The source syntax. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fields => list(GoogleApi.Monitoring.V3.Model.Field.t()),
          :name => String.t(),
          :oneofs => list(String.t()),
          :options => list(GoogleApi.Monitoring.V3.Model.Option.t()),
          :sourceContext => GoogleApi.Monitoring.V3.Model.SourceContext.t(),
          :syntax => String.t()
        }

  field(:fields, as: GoogleApi.Monitoring.V3.Model.Field, type: :list)
  field(:name)
  field(:oneofs, type: :list)
  field(:options, as: GoogleApi.Monitoring.V3.Model.Option, type: :list)
  field(:sourceContext, as: GoogleApi.Monitoring.V3.Model.SourceContext)
  field(:syntax)
end

defimpl Poison.Decoder, for: GoogleApi.Monitoring.V3.Model.Type do
  def decode(value, options) do
    GoogleApi.Monitoring.V3.Model.Type.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Monitoring.V3.Model.Type do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
