# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Monitoring.V3.Model.Service do
  @moduledoc """
  A Service is a discrete, autonomous, and network-accessible unit, designed to solve an individual concern (Wikipedia (https://en.wikipedia.org/wiki/Service-orientation)). In Cloud Monitoring, a Service acts as the root resource under which operational aspects of the service are accessible.

  ## Attributes

  *   `appEngine` (*type:* `GoogleApi.Monitoring.V3.Model.AppEngine.t`, *default:* `nil`) - Type used for App Engine services.
  *   `cloudEndpoints` (*type:* `GoogleApi.Monitoring.V3.Model.CloudEndpoints.t`, *default:* `nil`) - Type used for Cloud Endpoints services.
  *   `clusterIstio` (*type:* `GoogleApi.Monitoring.V3.Model.ClusterIstio.t`, *default:* `nil`) - Type used for Istio services that live in a Kubernetes cluster.
  *   `custom` (*type:* `GoogleApi.Monitoring.V3.Model.Custom.t`, *default:* `nil`) - Custom service type.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Name used for UI elements listing this Service.
  *   `meshIstio` (*type:* `GoogleApi.Monitoring.V3.Model.MeshIstio.t`, *default:* `nil`) - Type used for Istio services scoped to an Istio mesh.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Resource name for this Service. The format is:
      projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]

  *   `telemetry` (*type:* `GoogleApi.Monitoring.V3.Model.Telemetry.t`, *default:* `nil`) - Configuration for how to query telemetry on a Service.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appEngine => GoogleApi.Monitoring.V3.Model.AppEngine.t(),
          :cloudEndpoints => GoogleApi.Monitoring.V3.Model.CloudEndpoints.t(),
          :clusterIstio => GoogleApi.Monitoring.V3.Model.ClusterIstio.t(),
          :custom => GoogleApi.Monitoring.V3.Model.Custom.t(),
          :displayName => String.t(),
          :meshIstio => GoogleApi.Monitoring.V3.Model.MeshIstio.t(),
          :name => String.t(),
          :telemetry => GoogleApi.Monitoring.V3.Model.Telemetry.t()
        }

  field(:appEngine, as: GoogleApi.Monitoring.V3.Model.AppEngine)
  field(:cloudEndpoints, as: GoogleApi.Monitoring.V3.Model.CloudEndpoints)
  field(:clusterIstio, as: GoogleApi.Monitoring.V3.Model.ClusterIstio)
  field(:custom, as: GoogleApi.Monitoring.V3.Model.Custom)
  field(:displayName)
  field(:meshIstio, as: GoogleApi.Monitoring.V3.Model.MeshIstio)
  field(:name)
  field(:telemetry, as: GoogleApi.Monitoring.V3.Model.Telemetry)
end

defimpl Poison.Decoder, for: GoogleApi.Monitoring.V3.Model.Service do
  def decode(value, options) do
    GoogleApi.Monitoring.V3.Model.Service.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Monitoring.V3.Model.Service do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
