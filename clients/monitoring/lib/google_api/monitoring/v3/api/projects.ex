# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Monitoring.V3.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.Monitoring.V3.Connection
  import GoogleApi.Monitoring.V3.RequestBuilder


  @doc """
  Stackdriver Monitoring Agent only: Creates a new time series.&lt;aside class&#x3D;\&quot;caution\&quot;&gt;This method is only for use by the Stackdriver Monitoring Agent. Use projects.timeSeries.create instead.&lt;/aside&gt;

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project in which to create the time series. The format is \&quot;projects/PROJECT_ID_OR_NUMBER\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (CreateCollectdTimeSeriesRequest): 

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_collectd_time_series_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.Empty.t} | {:error, Tesla.Env.t}
  def monitoring_projects_collectd_time_series_create(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v3/projects/{projectsId}/collectdTimeSeries", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.Empty{})
  end

  @doc """
  Creates a new group.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project in which to create the group. The format is \&quot;projects/{project_id_or_number}\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :validate_only (Boolean): If true, validate this request but do not create the group.
    - :body (Group): 

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.Group{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_groups_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.Group.t} | {:error, Tesla.Env.t}
  def monitoring_projects_groups_create(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"validateOnly" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v3/projects/{projectsId}/groups", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.Group{})
  end

  @doc """
  Deletes an existing group.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The group to delete. The format is \&quot;projects/{project_id_or_number}/groups/{group_id}\&quot;.
  - groups_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_groups_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.Empty.t} | {:error, Tesla.Env.t}
  def monitoring_projects_groups_delete(connection, projects_id, groups_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v3/projects/{projectsId}/groups/{groupsId}", %{
         "projectsId" => URI.encode_www_form(projects_id),
         "groupsId" => URI.encode_www_form(groups_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.Empty{})
  end

  @doc """
  Gets a single group.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The group to retrieve. The format is \&quot;projects/{project_id_or_number}/groups/{group_id}\&quot;.
  - groups_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.Group{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_groups_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.Group.t} | {:error, Tesla.Env.t}
  def monitoring_projects_groups_get(connection, projects_id, groups_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/groups/{groupsId}", %{
         "projectsId" => URI.encode_www_form(projects_id),
         "groupsId" => URI.encode_www_form(groups_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.Group{})
  end

  @doc """
  Lists the existing groups.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project whose groups are to be listed. The format is \&quot;projects/{project_id_or_number}\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_size (Integer): A positive number that is the maximum number of results to return.
    - :ancestors_of_group (String): A group name: \&quot;projects/{project_id_or_number}/groups/{group_id}\&quot;. Returns groups that are ancestors of the specified group. The groups are returned in order, starting with the immediate parent and ending with the most distant ancestor. If the specified group has no immediate parent, the results are empty.
    - :children_of_group (String): A group name: \&quot;projects/{project_id_or_number}/groups/{group_id}\&quot;. Returns groups whose parentName field contains the group name. If no groups have this parent, the results are empty.
    - :descendants_of_group (String): A group name: \&quot;projects/{project_id_or_number}/groups/{group_id}\&quot;. Returns the descendants of the specified group. This is a superset of the results returned by the childrenOfGroup filter, and includes children-of-children, and so forth.
    - :page_token (String): If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.ListGroupsResponse{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_groups_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.ListGroupsResponse.t} | {:error, Tesla.Env.t}
  def monitoring_projects_groups_list(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"pageSize" => :query,
      :"ancestorsOfGroup" => :query,
      :"childrenOfGroup" => :query,
      :"descendantsOfGroup" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/groups", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.ListGroupsResponse{})
  end

  @doc """
  Lists the monitored resources that are members of a group.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The group whose members are listed. The format is \&quot;projects/{project_id_or_number}/groups/{group_id}\&quot;.
  - groups_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :filter (String): An optional list filter describing the members to be returned. The filter may reference the type, labels, and metadata of monitored resources that comprise the group. For example, to return only resources representing Compute Engine VM instances, use this filter: resource.type &#x3D; \&quot;gce_instance\&quot; 
    - :page_token (String): If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.
    - :interval/start_time (String): Optional. The beginning of the time interval. The default value for the start time is the end time. The start time must not be later than the end time.
    - :page_size (Integer): A positive number that is the maximum number of results to return.
    - :interval/end_time (String): Required. The end of the time interval.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.ListGroupMembersResponse{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_groups_members_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.ListGroupMembersResponse.t} | {:error, Tesla.Env.t}
  def monitoring_projects_groups_members_list(connection, projects_id, groups_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"filter" => :query,
      :"pageToken" => :query,
      :"interval.startTime" => :query,
      :"pageSize" => :query,
      :"interval.endTime" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/groups/{groupsId}/members", %{
         "projectsId" => URI.encode_www_form(projects_id),
         "groupsId" => URI.encode_www_form(groups_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.ListGroupMembersResponse{})
  end

  @doc """
  Updates an existing group. You can change any group attributes except name.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;group.name&#x60;. Output only. The name of this group. The format is \&quot;projects/{project_id_or_number}/groups/{group_id}\&quot;. When creating a group, this field is ignored and a new name is created consisting of the project specified in the call to CreateGroup and a unique {group_id} that is generated automatically.
  - groups_id (String): Part of &#x60;group.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :validate_only (Boolean): If true, validate this request but do not update the existing group.
    - :body (Group): 

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.Group{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_groups_update(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.Group.t} | {:error, Tesla.Env.t}
  def monitoring_projects_groups_update(connection, projects_id, groups_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"validateOnly" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/v3/projects/{projectsId}/groups/{groupsId}", %{
         "projectsId" => URI.encode_www_form(projects_id),
         "groupsId" => URI.encode_www_form(groups_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.Group{})
  end

  @doc """
  Creates a new metric descriptor. User-created metric descriptors define custom metrics.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project on which to execute the request. The format is \&quot;projects/{project_id_or_number}\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (MetricDescriptor): 

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.MetricDescriptor{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_metric_descriptors_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.MetricDescriptor.t} | {:error, Tesla.Env.t}
  def monitoring_projects_metric_descriptors_create(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v3/projects/{projectsId}/metricDescriptors", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.MetricDescriptor{})
  end

  @doc """
  Deletes a metric descriptor. Only user-created custom metrics can be deleted.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The metric descriptor on which to execute the request. The format is \&quot;projects/{project_id_or_number}/metricDescriptors/{metric_id}\&quot;. An example of {metric_id} is: \&quot;custom.googleapis.com/my_test_metric\&quot;.
  - metric_descriptors_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_metric_descriptors_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.Empty.t} | {:error, Tesla.Env.t}
  def monitoring_projects_metric_descriptors_delete(connection, projects_id, metric_descriptors_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v3/projects/{projectsId}/metricDescriptors/{metricDescriptorsId}", %{
         "projectsId" => URI.encode_www_form(projects_id),
         "metricDescriptorsId" => URI.encode_www_form(metric_descriptors_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.Empty{})
  end

  @doc """
  Gets a single metric descriptor. This method does not require a Stackdriver account.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The metric descriptor on which to execute the request. The format is \&quot;projects/{project_id_or_number}/metricDescriptors/{metric_id}\&quot;. An example value of {metric_id} is \&quot;compute.googleapis.com/instance/disk/read_bytes_count\&quot;.
  - metric_descriptors_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.MetricDescriptor{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_metric_descriptors_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.MetricDescriptor.t} | {:error, Tesla.Env.t}
  def monitoring_projects_metric_descriptors_get(connection, projects_id, metric_descriptors_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/metricDescriptors/{metricDescriptorsId}", %{
         "projectsId" => URI.encode_www_form(projects_id),
         "metricDescriptorsId" => URI.encode_www_form(metric_descriptors_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.MetricDescriptor{})
  end

  @doc """
  Lists metric descriptors that match a filter. This method does not require a Stackdriver account.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project on which to execute the request. The format is \&quot;projects/{project_id_or_number}\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_size (Integer): A positive number that is the maximum number of results to return.
    - :filter (String): If this field is empty, all custom and system-defined metric descriptors are returned. Otherwise, the filter specifies which metric descriptors are to be returned. For example, the following filter matches all custom metrics: metric.type &#x3D; starts_with(\&quot;custom.googleapis.com/\&quot;) 
    - :page_token (String): If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.ListMetricDescriptorsResponse{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_metric_descriptors_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.ListMetricDescriptorsResponse.t} | {:error, Tesla.Env.t}
  def monitoring_projects_metric_descriptors_list(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"pageSize" => :query,
      :"filter" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/metricDescriptors", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.ListMetricDescriptorsResponse{})
  end

  @doc """
  Gets a single monitored resource descriptor. This method does not require a Stackdriver account.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The monitored resource descriptor to get. The format is \&quot;projects/{project_id_or_number}/monitoredResourceDescriptors/{resource_type}\&quot;. The {resource_type} is a predefined type, such as cloudsql_database.
  - monitored_resource_descriptors_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.MonitoredResourceDescriptor{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_monitored_resource_descriptors_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.MonitoredResourceDescriptor.t} | {:error, Tesla.Env.t}
  def monitoring_projects_monitored_resource_descriptors_get(connection, projects_id, monitored_resource_descriptors_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/monitoredResourceDescriptors/{monitoredResourceDescriptorsId}", %{
         "projectsId" => URI.encode_www_form(projects_id),
         "monitoredResourceDescriptorsId" => URI.encode_www_form(monitored_resource_descriptors_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.MonitoredResourceDescriptor{})
  end

  @doc """
  Lists monitored resource descriptors that match a filter. This method does not require a Stackdriver account.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project on which to execute the request. The format is \&quot;projects/{project_id_or_number}\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_size (Integer): A positive number that is the maximum number of results to return.
    - :filter (String): An optional filter describing the descriptors to be returned. The filter can reference the descriptor&#39;s type and labels. For example, the following filter returns only Google Compute Engine descriptors that have an id label: resource.type &#x3D; starts_with(\&quot;gce_\&quot;) AND resource.label:id 
    - :page_token (String): If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.ListMonitoredResourceDescriptorsResponse{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_monitored_resource_descriptors_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.ListMonitoredResourceDescriptorsResponse.t} | {:error, Tesla.Env.t}
  def monitoring_projects_monitored_resource_descriptors_list(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"pageSize" => :query,
      :"filter" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/monitoredResourceDescriptors", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.ListMonitoredResourceDescriptorsResponse{})
  end

  @doc """
  Creates or adds data to one or more time series. The response is empty if all time series in the request were written. If any time series could not be written, a corresponding failure message is included in the error response.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project on which to execute the request. The format is \&quot;projects/{project_id_or_number}\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (CreateTimeSeriesRequest): 

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_time_series_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.Empty.t} | {:error, Tesla.Env.t}
  def monitoring_projects_time_series_create(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v3/projects/{projectsId}/timeSeries", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.Empty{})
  end

  @doc """
  Lists time series that match a filter. This method does not require a Stackdriver account.

  ## Parameters

  - connection (GoogleApi.Monitoring.V3.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The project on which to execute the request. The format is \&quot;projects/{project_id_or_number}\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :aggregation/group_by_fields (List[String]): The set of fields to preserve when crossSeriesReducer is specified. The groupByFields determine how the time series are partitioned into subsets prior to applying the aggregation function. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The crossSeriesReducer is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains resource.type. Fields not specified in groupByFields are aggregated away. If groupByFields is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If crossSeriesReducer is not defined, this field is ignored.
    - :interval/end_time (String): Required. The end of the time interval.
    - :aggregation/alignment_period (String): The alignment period for per-time series alignment. If present, alignmentPeriod must be at least 60 seconds. After per-time series alignment, each time series will contain data points only on the period boundaries. If perSeriesAligner is not specified or equals ALIGN_NONE, then this field is ignored. If perSeriesAligner is specified and does not equal ALIGN_NONE, then this field must be defined; otherwise an error is returned.
    - :page_size (Integer): A positive number that is the maximum number of results to return. When view field sets to FULL, it limits the number of Points server will return; if view field is HEADERS, it limits the number of TimeSeries server will return.
    - :order_by (String): Specifies the order in which the points of the time series should be returned. By default, results are not ordered. Currently, this field must be left blank.
    - :aggregation/cross_series_reducer (String): The approach to be used to combine time series. Not all reducer functions may be applied to all time series, depending on the metric type and the value type of the original time series. Reduction may change the metric type of value type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If crossSeriesReducer is specified, then perSeriesAligner must be specified and not equal ALIGN_NONE and alignmentPeriod must be specified; otherwise, an error is returned.
    - :filter (String): A monitoring filter that specifies which time series should be returned. The filter must specify a single metric type, and can additionally specify metric labels and other information. For example: metric.type &#x3D; \&quot;compute.googleapis.com/instance/cpu/usage_time\&quot; AND     metric.label.instance_name &#x3D; \&quot;my-instance-name\&quot; 
    - :aggregation/per_series_aligner (String): The approach to be used to align individual time series. Not all alignment functions may be applied to all time series, depending on the metric type and value type of the original time series. Alignment may change the metric type or the value type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If crossSeriesReducer is specified, then perSeriesAligner must be specified and not equal ALIGN_NONE and alignmentPeriod must be specified; otherwise, an error is returned.
    - :page_token (String): If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.
    - :interval/start_time (String): Optional. The beginning of the time interval. The default value for the start time is the end time. The start time must not be later than the end time.
    - :view (String): Specifies which information is returned about the time series.

  ## Returns

  {:ok, %GoogleApi.Monitoring.V3.Model.ListTimeSeriesResponse{}} on success
  {:error, info} on failure
  """
  @spec monitoring_projects_time_series_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.Monitoring.V3.Model.ListTimeSeriesResponse.t} | {:error, Tesla.Env.t}
  def monitoring_projects_time_series_list(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"aggregation.groupByFields" => :query,
      :"interval.endTime" => :query,
      :"aggregation.alignmentPeriod" => :query,
      :"pageSize" => :query,
      :"orderBy" => :query,
      :"aggregation.crossSeriesReducer" => :query,
      :"filter" => :query,
      :"aggregation.perSeriesAligner" => :query,
      :"pageToken" => :query,
      :"interval.startTime" => :query,
      :"view" => :query
    }
    %{}
    |> method(:get)
    |> url("/v3/projects/{projectsId}/timeSeries", %{
         "projectsId" => URI.encode_www_form(projects_id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Monitoring.V3.Model.ListTimeSeriesResponse{})
  end
end
