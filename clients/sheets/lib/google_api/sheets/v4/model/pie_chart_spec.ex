# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.PieChartSpec do
  @moduledoc """
  A <a href="/chart/interactive/docs/gallery/piechart">pie chart</a>.

  ## Attributes

  - domain (GoogleApi.Sheets.V4.Model.ChartData.t): The data that covers the domain of the pie chart. Defaults to `nil`.
  - legendPosition (String.t): Where the legend of the pie chart should be drawn. Defaults to `nil`.
  - pieHole (float()): The size of the hole in the pie chart. Defaults to `nil`.
  - series (GoogleApi.Sheets.V4.Model.ChartData.t): The data that covers the one and only series of the pie chart. Defaults to `nil`.
  - threeDimensional (boolean()): True if the pie is three dimensional. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :domain => GoogleApi.Sheets.V4.Model.ChartData.t(),
          :legendPosition => String.t(),
          :pieHole => float(),
          :series => GoogleApi.Sheets.V4.Model.ChartData.t(),
          :threeDimensional => boolean()
        }

  field(:domain, as: GoogleApi.Sheets.V4.Model.ChartData)
  field(:legendPosition)
  field(:pieHole)
  field(:series, as: GoogleApi.Sheets.V4.Model.ChartData)
  field(:threeDimensional)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.PieChartSpec do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.PieChartSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.PieChartSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
