# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.Slicer do
  @moduledoc """
  A slicer in a sheet.

  ## Attributes

  *   `position` (*type:* `GoogleApi.Sheets.V4.Model.EmbeddedObjectPosition.t`, *default:* `nil`) - The position of the slicer. Note that slicer can be positioned only on existing sheet. Also, width and height of slicer can be automatically adjusted to keep it within permitted limits.
  *   `slicerId` (*type:* `integer()`, *default:* `nil`) - The ID of the slicer.
  *   `spec` (*type:* `GoogleApi.Sheets.V4.Model.SlicerSpec.t`, *default:* `nil`) - The specification of the slicer.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :position => GoogleApi.Sheets.V4.Model.EmbeddedObjectPosition.t(),
          :slicerId => integer(),
          :spec => GoogleApi.Sheets.V4.Model.SlicerSpec.t()
        }

  field(:position, as: GoogleApi.Sheets.V4.Model.EmbeddedObjectPosition)
  field(:slicerId)
  field(:spec, as: GoogleApi.Sheets.V4.Model.SlicerSpec)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.Slicer do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.Slicer.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.Slicer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
