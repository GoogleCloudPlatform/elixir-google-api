# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.UpdateValuesResponse do
  @moduledoc """
  The response when updating a range of values in a spreadsheet.

  ## Attributes

  - spreadsheetId (String.t): The spreadsheet the updates were applied to. Defaults to `nil`.
  - updatedCells (integer()): The number of cells updated. Defaults to `nil`.
  - updatedColumns (integer()): The number of columns where at least one cell in the column was updated. Defaults to `nil`.
  - updatedData (GoogleApi.Sheets.V4.Model.ValueRange.t): The values of the cells after updates were applied.
  This is only included if the request's `includeValuesInResponse` field
  was `true`. Defaults to `nil`.
  - updatedRange (String.t): The range (in A1 notation) that updates were applied to. Defaults to `nil`.
  - updatedRows (integer()): The number of rows where at least one cell in the row was updated. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :spreadsheetId => String.t(),
          :updatedCells => integer(),
          :updatedColumns => integer(),
          :updatedData => GoogleApi.Sheets.V4.Model.ValueRange.t(),
          :updatedRange => String.t(),
          :updatedRows => integer()
        }

  field(:spreadsheetId)
  field(:updatedCells)
  field(:updatedColumns)
  field(:updatedData, as: GoogleApi.Sheets.V4.Model.ValueRange)
  field(:updatedRange)
  field(:updatedRows)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.UpdateValuesResponse do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.UpdateValuesResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.UpdateValuesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
