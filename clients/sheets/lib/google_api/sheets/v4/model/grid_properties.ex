# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.GridProperties do
  @moduledoc """
  Properties of a grid.

  ## Attributes

  - columnCount (integer()): The number of columns in the grid. Defaults to `nil`.
  - columnGroupControlAfter (boolean()): True if the column grouping control toggle is shown after the group. Defaults to `nil`.
  - frozenColumnCount (integer()): The number of columns that are frozen in the grid. Defaults to `nil`.
  - frozenRowCount (integer()): The number of rows that are frozen in the grid. Defaults to `nil`.
  - hideGridlines (boolean()): True if the grid isn't showing gridlines in the UI. Defaults to `nil`.
  - rowCount (integer()): The number of rows in the grid. Defaults to `nil`.
  - rowGroupControlAfter (boolean()): True if the row grouping control toggle is shown after the group. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columnCount => integer(),
          :columnGroupControlAfter => boolean(),
          :frozenColumnCount => integer(),
          :frozenRowCount => integer(),
          :hideGridlines => boolean(),
          :rowCount => integer(),
          :rowGroupControlAfter => boolean()
        }

  field(:columnCount)
  field(:columnGroupControlAfter)
  field(:frozenColumnCount)
  field(:frozenRowCount)
  field(:hideGridlines)
  field(:rowCount)
  field(:rowGroupControlAfter)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.GridProperties do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.GridProperties.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.GridProperties do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
