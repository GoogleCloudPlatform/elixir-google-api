# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.DataLabel do
  @moduledoc """
  Settings for one set of data labels. Data labels are annotations that appear next to a set of data, such as the points on a line chart, and provide additional information about what the data represents, such as a text representation of the value behind that point on the graph.

  ## Attributes

  *   `customLabelData` (*type:* `GoogleApi.Sheets.V4.Model.ChartData.t`, *default:* `nil`) - Data to use for custom labels. Only used if type is set to CUSTOM. This data must be the same length as the series or other element this data label is applied to. In addition, if the series is split into multiple source ranges, this source data must come from the next column in the source data. For example, if the series is B2:B4,E6:E8 then this data must come from C2:C4,F6:F8.
  *   `placement` (*type:* `String.t`, *default:* `nil`) - The placement of the data label relative to the labeled data.
  *   `textFormat` (*type:* `GoogleApi.Sheets.V4.Model.TextFormat.t`, *default:* `nil`) - The text format used for the data label.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of the data label.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :customLabelData => GoogleApi.Sheets.V4.Model.ChartData.t(),
          :placement => String.t(),
          :textFormat => GoogleApi.Sheets.V4.Model.TextFormat.t(),
          :type => String.t()
        }

  field(:customLabelData, as: GoogleApi.Sheets.V4.Model.ChartData)
  field(:placement)
  field(:textFormat, as: GoogleApi.Sheets.V4.Model.TextFormat)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.DataLabel do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.DataLabel.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.DataLabel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
