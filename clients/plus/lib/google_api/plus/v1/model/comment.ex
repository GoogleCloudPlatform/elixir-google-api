# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Plus.V1.Model.Comment do
  @moduledoc """
  

  ## Attributes

  - actor (CommentActor):  Defaults to: `null`.
  - etag (String): ETag of this response for caching purposes. Defaults to: `null`.
  - id (String): The ID of this comment. Defaults to: `null`.
  - inReplyTo (List[CommentInReplyTo]): The activity this comment replied to. Defaults to: `null`.
  - kind (String): Identifies this resource as a comment. Value: \&quot;plus#comment\&quot;. Defaults to: `null`.
  - object (CommentObject):  Defaults to: `null`.
  - plusoners (CommentPlusoners):  Defaults to: `null`.
  - published (DateTime): The time at which this comment was initially published. Formatted as an RFC 3339 timestamp. Defaults to: `null`.
  - selfLink (String): Link to this comment resource. Defaults to: `null`.
  - updated (DateTime): The time at which this comment was last updated. Formatted as an RFC 3339 timestamp. Defaults to: `null`.
  - verb (String): This comment&#39;s verb, indicating what action was performed. Possible values are:   - \&quot;post\&quot; - Publish content to the stream. Defaults to: `null`.
  """

  defstruct [
    :"actor",
    :"etag",
    :"id",
    :"inReplyTo",
    :"kind",
    :"object",
    :"plusoners",
    :"published",
    :"selfLink",
    :"updated",
    :"verb"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Plus.V1.Model.Comment do
  import GoogleApi.Plus.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"actor", :struct, GoogleApi.Plus.V1.Model.CommentActor, options)
    |> deserialize(:"inReplyTo", :list, GoogleApi.Plus.V1.Model.CommentInReplyTo, options)
    |> deserialize(:"object", :struct, GoogleApi.Plus.V1.Model.CommentObject, options)
    |> deserialize(:"plusoners", :struct, GoogleApi.Plus.V1.Model.CommentPlusoners, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Plus.V1.Model.Comment do
  def encode(value, options) do
    GoogleApi.Plus.V1.Deserializer.serialize_non_nil(value, options)
  end
end

