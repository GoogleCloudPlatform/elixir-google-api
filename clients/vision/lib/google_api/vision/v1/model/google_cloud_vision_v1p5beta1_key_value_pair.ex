# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1KeyValuePair do
  @moduledoc """
  Proto for a key value pair.

  ## Attributes

  *   `key` (*type:* `String.t`, *default:* `nil`) - The key string value.
  *   `keyBlock` (*type:* `GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1Block.t`, *default:* `nil`) - Key block of the pair containing the normalized bounding box and key text.
  *   `normalizedKey` (*type:* `String.t`, *default:* `nil`) - Optional. The translation of key text if the text is not in English.
  *   `valueBlock` (*type:* `GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1Block.t`, *default:* `nil`) - Value block of the pair containing the normalized bounding box and value
      text, including potentially deeper structures within the value text.
  *   `valueType` (*type:* `String.t`, *default:* `nil`) - Type of the value. Valid strings are the following:

       "generic" - For generic text that is mapped to a value.
       "number" - for numeric types
       "id" - for generic identifiers.
       "currency" - for currency values.
       "date" - for dates.
       "time" - for time and duration values.
       "date_range" - for date ranges.
       "address" - for address values (can be long).
       "person" - for names of people or other personal identifiers.
       "phone" - for phone numbers.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :key => String.t(),
          :keyBlock => GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1Block.t(),
          :normalizedKey => String.t(),
          :valueBlock => GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1Block.t(),
          :valueType => String.t()
        }

  field(:key)
  field(:keyBlock, as: GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1Block)
  field(:normalizedKey)
  field(:valueBlock, as: GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1Block)
  field(:valueType)
end

defimpl Poison.Decoder, for: GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1KeyValuePair do
  def decode(value, options) do
    GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1KeyValuePair.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Vision.V1.Model.GoogleCloudVisionV1p5beta1KeyValuePair do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
