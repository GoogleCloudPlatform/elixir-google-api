# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.OAuth2.V2.Model.Tokeninfo do
  @moduledoc """
  

  ## Attributes

  - access_type (String): The access type granted with this token. It can be offline or online. Defaults to: `null`.
  - audience (String): Who is the intended audience for this token. In general the same as issued_to. Defaults to: `null`.
  - email (String): The email address of the user. Present only if the email scope is present in the request. Defaults to: `null`.
  - expires_in (Integer): The expiry time of the token, as number of seconds left until expiry. Defaults to: `null`.
  - issued_to (String): To whom was the token issued to. In general the same as audience. Defaults to: `null`.
  - scope (String): The space separated list of scopes granted to this token. Defaults to: `null`.
  - token_handle (String): The token handle associated with this token. Defaults to: `null`.
  - user_id (String): The obfuscated user id. Defaults to: `null`.
  - verified_email (Boolean): Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request. Defaults to: `null`.
  """

  defstruct [
    :"access_type",
    :"audience",
    :"email",
    :"expires_in",
    :"issued_to",
    :"scope",
    :"token_handle",
    :"user_id",
    :"verified_email"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.OAuth2.V2.Model.Tokeninfo do
  def decode(value, _options) do
    value
  end
end

defimpl Poison.Encoder, for: GoogleApi.OAuth2.V2.Model.Tokeninfo do
  def encode(value, options) do
    GoogleApi.OAuth2.V2.Deserializer.serialize_non_nil(value, options)
  end
end

