# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.StreetViewPublish.V1.Model.Pose do
  @moduledoc """
  Raw pose measurement for an entity.

  ## Attributes

  - accuracyMeters (number()): The estimated horizontal accuracy of this pose in meters with 68%
  confidence (one standard deviation). For example, on Android, this value is
  available from this method:
  https://developer.android.com/reference/android/location/Location#getAccuracy().
  Other platforms have different methods of obtaining similar accuracy
  estimations. Defaults to `nil`.
  - altitude (float()): Altitude of the pose in meters above WGS84 ellipsoid.
  NaN indicates an unmeasured quantity. Defaults to `nil`.
  - heading (float()): Compass heading, measured at the center of the photo in degrees clockwise
  from North. Value must be >=0 and <360.
  NaN indicates an unmeasured quantity. Defaults to `nil`.
  - latLngPair (GoogleApi.StreetViewPublish.V1.Model.LatLng.t): Latitude and longitude pair of the pose, as explained here:
  https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
  When creating a Photo, if the
  latitude and longitude pair are not provided, the geolocation from the
  exif header is used. A latitude and longitude pair not provided in the
  photo or exif header causes the photo process to fail. Defaults to `nil`.
  - level (GoogleApi.StreetViewPublish.V1.Model.Level.t): Level (the floor in a building) used to configure vertical navigation. Defaults to `nil`.
  - pitch (float()): Pitch, measured at the center of the photo in degrees. Value must be >=-90
  and <= 90. A value of -90 means looking directly down, and a value of 90
  means looking directly up.
  NaN indicates an unmeasured quantity. Defaults to `nil`.
  - roll (float()): Roll, measured in degrees. Value must be >= 0 and <360. A value of 0
  means level with the horizon.
  NaN indicates an unmeasured quantity. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accuracyMeters => number(),
          :altitude => float(),
          :heading => float(),
          :latLngPair => GoogleApi.StreetViewPublish.V1.Model.LatLng.t(),
          :level => GoogleApi.StreetViewPublish.V1.Model.Level.t(),
          :pitch => float(),
          :roll => float()
        }

  field(:accuracyMeters)
  field(:altitude)
  field(:heading)
  field(:latLngPair, as: GoogleApi.StreetViewPublish.V1.Model.LatLng)
  field(:level, as: GoogleApi.StreetViewPublish.V1.Model.Level)
  field(:pitch)
  field(:roll)
end

defimpl Poison.Decoder, for: GoogleApi.StreetViewPublish.V1.Model.Pose do
  def decode(value, options) do
    GoogleApi.StreetViewPublish.V1.Model.Pose.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.StreetViewPublish.V1.Model.Pose do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
