# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Calendar.V3.Model.AclRule do
  @moduledoc """


  ## Attributes

  - etag (String.t): ETag of the resource. Defaults to `nil`.
  - id (String.t): Identifier of the ACL rule. Defaults to `nil`.
  - kind (String.t): Type of the resource ("calendar#aclRule"). Defaults to `calendar#aclRule`.
  - role (String.t): The role assigned to the scope. Possible values are:  
  - "none" - Provides no access. 
  - "freeBusyReader" - Provides read access to free/busy information. 
  - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
  - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
  - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. Defaults to `nil`.
  - scope (GoogleApi.Calendar.V3.Model.AclRuleScope.t): The scope of the rule. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :etag => String.t(),
          :id => String.t(),
          :kind => String.t(),
          :role => String.t(),
          :scope => GoogleApi.Calendar.V3.Model.AclRuleScope.t()
        }

  field(:etag)
  field(:id)
  field(:kind)
  field(:role)
  field(:scope, as: GoogleApi.Calendar.V3.Model.AclRuleScope)
end

defimpl Poison.Decoder, for: GoogleApi.Calendar.V3.Model.AclRule do
  def decode(value, options) do
    GoogleApi.Calendar.V3.Model.AclRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Calendar.V3.Model.AclRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
