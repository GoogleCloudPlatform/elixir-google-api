# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Calendar.V3.Model.EventGadget do
  @moduledoc """
  A gadget that extends this event.

  ## Attributes

  - display (String.t): The gadget's display mode. Optional. Possible values are:  
  - "icon" - The gadget displays next to the event's title in the calendar view. 
  - "chip" - The gadget displays when the event is clicked. Defaults to `nil`.
  - height (integer()): The gadget's height in pixels. The height must be an integer greater than 0. Optional. Defaults to `nil`.
  - iconLink (String.t): The gadget's icon URL. The URL scheme must be HTTPS. Defaults to `nil`.
  - link (String.t): The gadget's URL. The URL scheme must be HTTPS. Defaults to `nil`.
  - preferences (map()): Preferences. Defaults to `nil`.
  - title (String.t): The gadget's title. Defaults to `nil`.
  - type (String.t): The gadget's type. Defaults to `nil`.
  - width (integer()): The gadget's width in pixels. The width must be an integer greater than 0. Optional. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :display => String.t(),
          :height => integer(),
          :iconLink => String.t(),
          :link => String.t(),
          :preferences => map(),
          :title => String.t(),
          :type => String.t(),
          :width => integer()
        }

  field(:display)
  field(:height)
  field(:iconLink)
  field(:link)
  field(:preferences, type: :map)
  field(:title)
  field(:type)
  field(:width)
end

defimpl Poison.Decoder, for: GoogleApi.Calendar.V3.Model.EventGadget do
  def decode(value, options) do
    GoogleApi.Calendar.V3.Model.EventGadget.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Calendar.V3.Model.EventGadget do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
