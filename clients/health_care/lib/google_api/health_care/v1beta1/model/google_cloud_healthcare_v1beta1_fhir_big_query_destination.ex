# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.GoogleCloudHealthcareV1beta1FhirBigQueryDestination do
  @moduledoc """
  The configuration for exporting to BigQuery.

  ## Attributes

  *   `datasetUri` (*type:* `String.t`, *default:* `nil`) - BigQuery URI to a dataset, up to 2000 characters long, in the format
      `bq://projectId.bqDatasetId`
  *   `force` (*type:* `boolean()`, *default:* `nil`) - This flag is being replaced by write_disposition which provides additional
      options. force=false is equivalent to WRITE_EMPTY and force=true is
      equivalent to WRITE_TRUNCATE.
  *   `schemaConfig` (*type:* `GoogleApi.HealthCare.V1beta1.Model.SchemaConfig.t`, *default:* `nil`) - The configuration for the exported BigQuery schema.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :datasetUri => String.t(),
          :force => boolean(),
          :schemaConfig => GoogleApi.HealthCare.V1beta1.Model.SchemaConfig.t()
        }

  field(:datasetUri)
  field(:force)
  field(:schemaConfig, as: GoogleApi.HealthCare.V1beta1.Model.SchemaConfig)
end

defimpl Poison.Decoder,
  for: GoogleApi.HealthCare.V1beta1.Model.GoogleCloudHealthcareV1beta1FhirBigQueryDestination do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.GoogleCloudHealthcareV1beta1FhirBigQueryDestination.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.HealthCare.V1beta1.Model.GoogleCloudHealthcareV1beta1FhirBigQueryDestination do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
