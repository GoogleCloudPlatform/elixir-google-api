# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.Field do
  @moduledoc """
  A (sub) field of a type.

  ## Attributes

  *   `maxOccurs` (*type:* `integer()`, *default:* `nil`) - The maximum number of times this field can be repeated. 0 or -1 means
      unbounded.
  *   `minOccurs` (*type:* `integer()`, *default:* `nil`) - The minimum number of times this field must be present/repeated.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the field. For example, "PID-1" or just "1".
  *   `table` (*type:* `String.t`, *default:* `nil`) - The HL7v2 table this field refers to. For example, PID-15 (Patient's
      Primary Language) usually refers to table "0296".
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of this field. A Type with this name must be defined in an
      Hl7TypesConfig.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxOccurs => integer(),
          :minOccurs => integer(),
          :name => String.t(),
          :table => String.t(),
          :type => String.t()
        }

  field(:maxOccurs)
  field(:minOccurs)
  field(:name)
  field(:table)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.Field do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.Field.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.Field do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
