# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.EvaluateAnnotationStoreResponse do
  @moduledoc """
  Response for successful Annotation store evaluation operations. This structure is included in the response upon operation completion.

  ## Attributes

  *   `evalStore` (*type:* `String.t`, *default:* `nil`) - The evaluated Annotation store, in the format of `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
  *   `goldenCount` (*type:* `String.t`, *default:* `nil`) - The number of Annotations in the ground truth Annotation store successfully processed.
  *   `goldenStore` (*type:* `String.t`, *default:* `nil`) - The ground truth Annotation store, in the format of `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
  *   `matchedCount` (*type:* `String.t`, *default:* `nil`) - The number of Annotations in the eval store that match with corresponding annotations in the ground truth Annotation store. Two matched annotations both annotate the same resource defined in AnnotationSource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :evalStore => String.t(),
          :goldenCount => String.t(),
          :goldenStore => String.t(),
          :matchedCount => String.t()
        }

  field(:evalStore)
  field(:goldenCount)
  field(:goldenStore)
  field(:matchedCount)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.EvaluateAnnotationStoreResponse do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.EvaluateAnnotationStoreResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.EvaluateAnnotationStoreResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
