# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.BigQuery.V2.Api.Jobs do
  @moduledoc """
  API calls for all endpoints tagged `Jobs`.
  """

  alias GoogleApi.BigQuery.V2.Connection
  import GoogleApi.BigQuery.V2.RequestBuilder


  @doc """
  Requests that a job be cancelled. This call will return immediately, and the client will need to poll for the job status to see if the cancel completed successfully. Cancelled jobs may still incur costs.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): [Required] Project ID of the job to cancel
  - job_id (String): [Required] Job ID of the job to cancel
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.BigQuery.V2.Model.JobCancelResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_cancel(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.BigQuery.V2.Model.JobCancelResponse.t} | {:error, Tesla.Env.t}
  def bigquery_jobs_cancel(connection, project_id, job_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/bigquery/v2/projects/#{project_id}/jobs/#{job_id}/cancel")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQuery.V2.Model.JobCancelResponse{})
  end

  @doc """
  Returns information about a specific job. Job information is available for a six month period after creation. Requires that you&#39;re the person who ran the job, or have the Is Owner project role.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): [Required] Project ID of the requested job
  - job_id (String): [Required] Job ID of the requested job
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.BigQuery.V2.Model.Job{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.BigQuery.V2.Model.Job.t} | {:error, Tesla.Env.t}
  def bigquery_jobs_get(connection, project_id, job_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/bigquery/v2/projects/#{project_id}/jobs/#{job_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQuery.V2.Model.Job{})
  end

  @doc """
  Retrieves the results of a query job.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): [Required] Project ID of the query job
  - job_id (String): [Required] Job ID of the query job
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :max_results (Integer): Maximum number of results to read
    - :page_token (String): Page token, returned by a previous call, to request the next page of results
    - :start_index (String): Zero-based index of the starting row
    - :timeout_ms (Integer): How long to wait for the query to complete, in milliseconds, before returning. Default is 10 seconds. If the timeout passes before the job completes, the &#39;jobComplete&#39; field in the response will be false

  ## Returns

  {:ok, %GoogleApi.BigQuery.V2.Model.GetQueryResultsResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_get_query_results(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.BigQuery.V2.Model.GetQueryResultsResponse.t} | {:error, Tesla.Env.t}
  def bigquery_jobs_get_query_results(connection, project_id, job_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"maxResults" => :query,
      :"pageToken" => :query,
      :"startIndex" => :query,
      :"timeoutMs" => :query
    }
    %{}
    |> method(:get)
    |> url("/bigquery/v2/projects/#{project_id}/queries/#{job_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQuery.V2.Model.GetQueryResultsResponse{})
  end

  @doc """
  Starts a new asynchronous job. Requires the Can View project role.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): Project ID of the project that will be billed for the job
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Job): 

  ## Returns

  {:ok, %GoogleApi.BigQuery.V2.Model.Job{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_insert(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQuery.V2.Model.Job.t} | {:error, Tesla.Env.t}
  def bigquery_jobs_insert(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/bigquery/v2/projects/#{project_id}/jobs")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQuery.V2.Model.Job{})
  end

  @doc """
  Starts a new asynchronous job. Requires the Can View project role.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): Project ID of the project that will be billed for the job
  - upload_type (String): Upload type. Must be \&quot;resumable\&quot;.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Job): 

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_insert_resumable(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def bigquery_jobs_insert_resumable(connection, project_id, upload_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/resumable/upload/bigquery/v2/projects/#{project_id}/jobs")
    |> add_param(:query, :"uploadType", upload_type)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Starts a new asynchronous job. Requires the Can View project role.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): Project ID of the project that will be billed for the job
  - upload_type (String): Upload type. Must be \&quot;multipart\&quot;.
  - metadata (Job): Job metadata.
  - data (String): The file to upload.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.BigQuery.V2.Model.Job{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_insert_simple(Tesla.Env.client, String.t, String.t, GoogleApi.BigQuery.V2.Model.Job.t, String.t, keyword()) :: {:ok, GoogleApi.BigQuery.V2.Model.Job.t} | {:error, Tesla.Env.t}
  def bigquery_jobs_insert_simple(connection, project_id, upload_type, metadata, data, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:post)
    |> url("/upload/bigquery/v2/projects/#{project_id}/jobs")
    |> add_param(:query, :"uploadType", upload_type)
    |> add_param(:body, :"metadata", metadata)
    |> add_param(:file, :"data", data)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQuery.V2.Model.Job{})
  end

  @doc """
  Lists all jobs that you started in the specified project. Job information is available for a six month period after creation. The job list is sorted in reverse chronological order, by job creation time. Requires the Can View project role, or the Is Owner project role if you set the allUsers property.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): Project ID of the jobs to list
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :all_users (Boolean): Whether to display jobs owned by all users in the project. Default false
    - :max_results (Integer): Maximum number of results to return
    - :page_token (String): Page token, returned by a previous call, to request the next page of results
    - :projection (String): Restrict information returned to a set of selected fields
    - :state_filter (List[String]): Filter for job state

  ## Returns

  {:ok, %GoogleApi.BigQuery.V2.Model.JobList{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQuery.V2.Model.JobList.t} | {:error, Tesla.Env.t}
  def bigquery_jobs_list(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"allUsers" => :query,
      :"maxResults" => :query,
      :"pageToken" => :query,
      :"projection" => :query,
      :"stateFilter" => :query
    }
    %{}
    |> method(:get)
    |> url("/bigquery/v2/projects/#{project_id}/jobs")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQuery.V2.Model.JobList{})
  end

  @doc """
  Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.

  ## Parameters

  - connection (GoogleApi.BigQuery.V2.Connection): Connection to server
  - project_id (String): Project ID of the project billed for the query
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (QueryRequest): 

  ## Returns

  {:ok, %GoogleApi.BigQuery.V2.Model.QueryResponse{}} on success
  {:error, info} on failure
  """
  @spec bigquery_jobs_query(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.BigQuery.V2.Model.QueryResponse.t} | {:error, Tesla.Env.t}
  def bigquery_jobs_query(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/bigquery/v2/projects/#{project_id}/queries")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.BigQuery.V2.Model.QueryResponse{})
  end
end
