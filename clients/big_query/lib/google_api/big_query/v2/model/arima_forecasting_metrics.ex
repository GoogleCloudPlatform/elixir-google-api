# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.ArimaForecastingMetrics do
  @moduledoc """
  Model evaluation metrics for ARIMA forecasting models.

  ## Attributes

  *   `arimaFittingMetrics` (*type:* `list(GoogleApi.BigQuery.V2.Model.ArimaFittingMetrics.t)`, *default:* `nil`) - Arima model fitting metrics.
  *   `arimaSingleModelForecastingMetrics` (*type:* `list(GoogleApi.BigQuery.V2.Model.ArimaSingleModelForecastingMetrics.t)`, *default:* `nil`) - Repeated as there can be many metric sets (one for each model) in auto-arima and the large-scale case.
  *   `hasDrift` (*type:* `list(boolean())`, *default:* `nil`) - Whether Arima model fitted with drift or not. It is always false when d is not 1.
  *   `nonSeasonalOrder` (*type:* `list(GoogleApi.BigQuery.V2.Model.ArimaOrder.t)`, *default:* `nil`) - Non-seasonal order.
  *   `seasonalPeriods` (*type:* `list(String.t)`, *default:* `nil`) - Seasonal periods. Repeated because multiple periods are supported for one time series.
  *   `timeSeriesId` (*type:* `list(String.t)`, *default:* `nil`) - Id to differentiate different time series for the large-scale case.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :arimaFittingMetrics => list(GoogleApi.BigQuery.V2.Model.ArimaFittingMetrics.t()) | nil,
          :arimaSingleModelForecastingMetrics =>
            list(GoogleApi.BigQuery.V2.Model.ArimaSingleModelForecastingMetrics.t()) | nil,
          :hasDrift => list(boolean()) | nil,
          :nonSeasonalOrder => list(GoogleApi.BigQuery.V2.Model.ArimaOrder.t()) | nil,
          :seasonalPeriods => list(String.t()) | nil,
          :timeSeriesId => list(String.t()) | nil
        }

  field(:arimaFittingMetrics, as: GoogleApi.BigQuery.V2.Model.ArimaFittingMetrics, type: :list)

  field(:arimaSingleModelForecastingMetrics,
    as: GoogleApi.BigQuery.V2.Model.ArimaSingleModelForecastingMetrics,
    type: :list
  )

  field(:hasDrift, type: :list)
  field(:nonSeasonalOrder, as: GoogleApi.BigQuery.V2.Model.ArimaOrder, type: :list)
  field(:seasonalPeriods, type: :list)
  field(:timeSeriesId, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.ArimaForecastingMetrics do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.ArimaForecastingMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.ArimaForecastingMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
