# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.BigQuery.V2.Model.TrainingOptions do
  @moduledoc """


  ## Attributes

  - dataSplitColumn (String.t): The column to split data with. This column won't be used as a
  feature.
  1. When data_split_method is CUSTOM, the corresponding column should
  be boolean. The rows with true value tag are eval data, and the false
  are training data.
  2. When data_split_method is SEQ, the first DATA_SPLIT_EVAL_FRACTION
  rows (from smallest to largest) in the corresponding column are used
  as training data, and the rest are eval data. It respects the order
  in Orderable data types:
  https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#data-type-properties Defaults to `nil`.
  - dataSplitEvalFraction (float()): The fraction of evaluation data over the whole input data. The rest
  of data will be used as training data. The format should be double.
  Accurate to two decimal places.
  Default value is 0.2. Defaults to `nil`.
  - dataSplitMethod (String.t): The data split type for training and evaluation, e.g. RANDOM. Defaults to `nil`.
  - distanceType (String.t): [Beta] Distance type for clustering models. Defaults to `nil`.
  - earlyStop (boolean()): Whether to stop early when the loss doesn't improve significantly
  any more (compared to min_relative_progress). Used only for iterative
  training algorithms. Defaults to `nil`.
  - initialLearnRate (float()): Specifies the initial learning rate for the line search learn rate
  strategy. Defaults to `nil`.
  - inputLabelColumns (list(String.t)): Name of input label columns in training data. Defaults to `nil`.
  - l1Regularization (float()): L1 regularization coefficient. Defaults to `nil`.
  - l2Regularization (float()): L2 regularization coefficient. Defaults to `nil`.
  - labelClassWeights (map()): Weights associated with each label class, for rebalancing the
  training data. Only applicable for classification models. Defaults to `nil`.
  - learnRate (float()): Learning rate in training. Used only for iterative training algorithms. Defaults to `nil`.
  - learnRateStrategy (String.t): The strategy to determine learn rate for the current iteration. Defaults to `nil`.
  - lossType (String.t): Type of loss function used during training run. Defaults to `nil`.
  - maxIterations (String.t): The maximum number of iterations in training. Used only for iterative
  training algorithms. Defaults to `nil`.
  - minRelativeProgress (float()): When early_stop is true, stops training when accuracy improvement is
  less than 'min_relative_progress'. Used only for iterative training
  algorithms. Defaults to `nil`.
  - modelUri (String.t): [Beta] Google Cloud Storage URI from which the model was imported. Only
  applicable for imported models. Defaults to `nil`.
  - numClusters (String.t): [Beta] Number of clusters for clustering models. Defaults to `nil`.
  - optimizationStrategy (String.t): Optimization strategy for training linear regression models. Defaults to `nil`.
  - warmStart (boolean()): Whether to train a model from the last checkpoint. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataSplitColumn => String.t(),
          :dataSplitEvalFraction => float(),
          :dataSplitMethod => String.t(),
          :distanceType => String.t(),
          :earlyStop => boolean(),
          :initialLearnRate => float(),
          :inputLabelColumns => list(String.t()),
          :l1Regularization => float(),
          :l2Regularization => float(),
          :labelClassWeights => map(),
          :learnRate => float(),
          :learnRateStrategy => String.t(),
          :lossType => String.t(),
          :maxIterations => String.t(),
          :minRelativeProgress => float(),
          :modelUri => String.t(),
          :numClusters => String.t(),
          :optimizationStrategy => String.t(),
          :warmStart => boolean()
        }

  field(:dataSplitColumn)
  field(:dataSplitEvalFraction)
  field(:dataSplitMethod)
  field(:distanceType)
  field(:earlyStop)
  field(:initialLearnRate)
  field(:inputLabelColumns, type: :list)
  field(:l1Regularization)
  field(:l2Regularization)
  field(:labelClassWeights, type: :map)
  field(:learnRate)
  field(:learnRateStrategy)
  field(:lossType)
  field(:maxIterations)
  field(:minRelativeProgress)
  field(:modelUri)
  field(:numClusters)
  field(:optimizationStrategy)
  field(:warmStart)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.TrainingOptions do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.TrainingOptions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.TrainingOptions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
