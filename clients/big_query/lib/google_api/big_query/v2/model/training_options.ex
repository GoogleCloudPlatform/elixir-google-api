# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.BigQuery.V2.Model.TrainingOptions do
  @moduledoc """


  ## Attributes

  - dataSplitColumn (String.t): The column to split data with. This column won&#39;t be used as a feature. 1. When data_split_method is CUSTOM, the corresponding column should be boolean. The rows with true value tag are eval data, and the false are training data. 2. When data_split_method is SEQ, the first DATA_SPLIT_EVAL_FRACTION rows (from smallest to largest) in the corresponding column are used as training data, and the rest are eval data. It respects the order in Orderable data types: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#data-type-properties Defaults to: `null`.
  - dataSplitEvalFraction (float()): The fraction of evaluation data over the whole input data. The rest of data will be used as training data. The format should be double. Accurate to two decimal places. Default value is 0.2. Defaults to: `null`.
  - dataSplitMethod (String.t): The data split type for training and evaluation, e.g. RANDOM. Defaults to: `null`.
    - Enum - one of [DATA_SPLIT_METHOD_UNSPECIFIED, RANDOM, CUSTOM, SEQUENTIAL, NO_SPLIT, AUTO_SPLIT]
  - distanceType (String.t): [Beta] Distance type for clustering models. Defaults to: `null`.
    - Enum - one of [DISTANCE_TYPE_UNSPECIFIED, EUCLIDEAN, COSINE]
  - earlyStop (boolean()): Whether to stop early when the loss doesn&#39;t improve significantly any more (compared to min_relative_progress). Defaults to: `null`.
  - initialLearnRate (float()): Specifies the initial learning rate for line search to start at. Defaults to: `null`.
  - inputLabelColumns ([String.t]): Name of input label columns in training data. Defaults to: `null`.
  - l1Regularization (float()): L1 regularization coefficient. Defaults to: `null`.
  - l2Regularization (float()): L2 regularization coefficient. Defaults to: `null`.
  - labelClassWeights (%{optional(String.t) &#x3D;&gt; float()}): Weights associated with each label class, for rebalancing the training data. Defaults to: `null`.
  - learnRate (float()): Learning rate in training. Defaults to: `null`.
  - learnRateStrategy (String.t): The strategy to determine learning rate. Defaults to: `null`.
    - Enum - one of [LEARN_RATE_STRATEGY_UNSPECIFIED, LINE_SEARCH, CONSTANT]
  - lossType (String.t): Type of loss function used during training run. Defaults to: `null`.
    - Enum - one of [LOSS_TYPE_UNSPECIFIED, MEAN_SQUARED_LOSS, MEAN_LOG_LOSS]
  - maxIterations (String.t): The maximum number of iterations in training. Defaults to: `null`.
  - minRelativeProgress (float()): When early_stop is true, stops training when accuracy improvement is less than &#39;min_relative_progress&#39;. Defaults to: `null`.
  - numClusters (String.t): [Beta] Number of clusters for clustering models. Defaults to: `null`.
  - warmStart (boolean()): Whether to train a model from the last checkpoint. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataSplitColumn => any(),
          :dataSplitEvalFraction => any(),
          :dataSplitMethod => any(),
          :distanceType => any(),
          :earlyStop => any(),
          :initialLearnRate => any(),
          :inputLabelColumns => list(any()),
          :l1Regularization => any(),
          :l2Regularization => any(),
          :labelClassWeights => map(),
          :learnRate => any(),
          :learnRateStrategy => any(),
          :lossType => any(),
          :maxIterations => any(),
          :minRelativeProgress => any(),
          :numClusters => any(),
          :warmStart => any()
        }

  field(:dataSplitColumn)
  field(:dataSplitEvalFraction)
  field(:dataSplitMethod)
  field(:distanceType)
  field(:earlyStop)
  field(:initialLearnRate)
  field(:inputLabelColumns, type: :list)
  field(:l1Regularization)
  field(:l2Regularization)
  field(:labelClassWeights, type: :map)
  field(:learnRate)
  field(:learnRateStrategy)
  field(:lossType)
  field(:maxIterations)
  field(:minRelativeProgress)
  field(:numClusters)
  field(:warmStart)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.TrainingOptions do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.TrainingOptions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.TrainingOptions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
