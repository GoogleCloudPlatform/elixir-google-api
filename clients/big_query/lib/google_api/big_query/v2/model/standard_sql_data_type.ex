# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.BigQuery.V2.Model.StandardSqlDataType do
  @moduledoc """
  The type of a variable, e.g., a function argument. Examples: INT64: {type_kind&#x3D;\&quot;INT64\&quot;} ARRAY&lt;STRING&gt;: {type_kind&#x3D;\&quot;ARRAY\&quot;, array_element_type&#x3D;\&quot;STRING\&quot;} STRUCT&lt;x STRING, y ARRAY&lt;DATE&gt;&gt;:   {type_kind&#x3D;\&quot;STRUCT\&quot;,    struct_type&#x3D;{fields&#x3D;[      {name&#x3D;\&quot;x\&quot;, type&#x3D;{type_kind&#x3D;\&quot;STRING\&quot;}},      {name&#x3D;\&quot;y\&quot;, type&#x3D;{type_kind&#x3D;\&quot;ARRAY\&quot;, array_element_type&#x3D;\&quot;DATE\&quot;}}    ]}}

  ## Attributes

  - arrayElementType (StandardSqlDataType): The type of the array&#39;s elements, if type_kind &#x3D; \&quot;ARRAY\&quot;. Defaults to: `null`.
  - structType (StandardSqlStructType): The fields of this struct, in order, if type_kind &#x3D; \&quot;STRUCT\&quot;. Defaults to: `null`.
  - typeKind (String.t): Required. The top level type of this field. Can be any standard SQL data type (e.g., \&quot;INT64\&quot;, \&quot;DATE\&quot;, \&quot;ARRAY\&quot;). Defaults to: `null`.
    - Enum - one of [TYPE_KIND_UNSPECIFIED, INT64, BOOL, FLOAT64, STRING, BYTES, TIMESTAMP, DATE, TIME, DATETIME, GEOGRAPHY, NUMERIC, ARRAY, STRUCT]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :arrayElementType => GoogleApi.BigQuery.V2.Model.StandardSqlDataType.t(),
          :structType => GoogleApi.BigQuery.V2.Model.StandardSqlStructType.t(),
          :typeKind => any()
        }

  field(:arrayElementType, as: GoogleApi.BigQuery.V2.Model.StandardSqlDataType)
  field(:structType, as: GoogleApi.BigQuery.V2.Model.StandardSqlStructType)
  field(:typeKind)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.StandardSqlDataType do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.StandardSqlDataType.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.StandardSqlDataType do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
