# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.BigQuery.V2.Model.TableListTables do
  @moduledoc """
  

  ## Attributes

  - friendlyName (String.t): The user-friendly name for this table. Defaults to: `null`.
  - id (String.t): An opaque ID of the table Defaults to: `null`.
  - kind (String.t): The resource type. Defaults to: `null`.
  - labels (%{optional(String.t) &#x3D;&gt; String.t}): [Experimental] The labels associated with this table. You can use these to organize and group your tables. Defaults to: `null`.
  - tableReference (TableReference): A reference uniquely identifying the table. Defaults to: `null`.
  - timePartitioning (TimePartitioning): [Experimental] The time-based partitioning for this table. Defaults to: `null`.
  - type (String.t): The type of table. Possible values are: TABLE, VIEW. Defaults to: `null`.
  - view (TableListView):  Defaults to: `null`.
  """

  defstruct [
    :"friendlyName",
    :"id",
    :"kind",
    :"labels",
    :"tableReference",
    :"timePartitioning",
    :"type",
    :"view"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.TableListTables do
  import GoogleApi.BigQuery.V2.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"tableReference", :struct, GoogleApi.BigQuery.V2.Model.TableReference, options)
    |> deserialize(:"timePartitioning", :struct, GoogleApi.BigQuery.V2.Model.TimePartitioning, options)
    |> deserialize(:"view", :struct, GoogleApi.BigQuery.V2.Model.TableListView, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.TableListTables do
  def encode(value, options) do
    GoogleApi.BigQuery.V2.Deserializer.serialize_non_nil(value, options)
  end
end

