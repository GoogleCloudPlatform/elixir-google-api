# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.ArimaSingleModelForecastingMetrics do
  @moduledoc """
  Model evaluation metrics for a single ARIMA forecasting model.

  ## Attributes

  *   `arimaFittingMetrics` (*type:* `GoogleApi.BigQuery.V2.Model.ArimaFittingMetrics.t`, *default:* `nil`) - Arima fitting metrics.
  *   `hasDrift` (*type:* `boolean()`, *default:* `nil`) - Is arima model fitted with drift or not. It is always false when d is not 1.
  *   `nonSeasonalOrder` (*type:* `GoogleApi.BigQuery.V2.Model.ArimaOrder.t`, *default:* `nil`) - Non-seasonal order.
  *   `seasonalPeriods` (*type:* `list(String.t)`, *default:* `nil`) - Seasonal periods. Repeated because multiple periods are supported for one time series.
  *   `timeSeriesId` (*type:* `String.t`, *default:* `nil`) - The time_series_id value for this time series. It will be one of the unique values from the time_series_id_column specified during ARIMA model training. Only present when time_series_id_column training option was used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :arimaFittingMetrics => GoogleApi.BigQuery.V2.Model.ArimaFittingMetrics.t(),
          :hasDrift => boolean(),
          :nonSeasonalOrder => GoogleApi.BigQuery.V2.Model.ArimaOrder.t(),
          :seasonalPeriods => list(String.t()),
          :timeSeriesId => String.t()
        }

  field(:arimaFittingMetrics, as: GoogleApi.BigQuery.V2.Model.ArimaFittingMetrics)
  field(:hasDrift)
  field(:nonSeasonalOrder, as: GoogleApi.BigQuery.V2.Model.ArimaOrder)
  field(:seasonalPeriods, type: :list)
  field(:timeSeriesId)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.ArimaSingleModelForecastingMetrics do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.ArimaSingleModelForecastingMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.ArimaSingleModelForecastingMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
