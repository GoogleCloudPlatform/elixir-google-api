# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.BigQuery.V2.Model.Argument do
  @moduledoc """
  Input/output argument of a function or a stored procedure.

  ## Attributes

  - argumentKind (String.t): Optional. Defaults to FIXED_TYPE. Defaults to `nil`.
  - dataType (GoogleApi.BigQuery.V2.Model.StandardSqlDataType.t): Required unless argument_kind = ANY_TYPE. Defaults to `nil`.
  - mode (String.t): Optional. Specifies whether the argument is input or output.
  Can be set for procedures only. Defaults to `nil`.
  - name (String.t): Optional. The name of this argument. Can be absent for function return
  argument. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :argumentKind => String.t(),
          :dataType => GoogleApi.BigQuery.V2.Model.StandardSqlDataType.t(),
          :mode => String.t(),
          :name => String.t()
        }

  field(:argumentKind)
  field(:dataType, as: GoogleApi.BigQuery.V2.Model.StandardSqlDataType)
  field(:mode)
  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.Argument do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.Argument.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.Argument do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
