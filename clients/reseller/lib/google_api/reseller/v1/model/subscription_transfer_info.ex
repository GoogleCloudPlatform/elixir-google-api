# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Reseller.V1.Model.SubscriptionTransferInfo do
  @moduledoc """
  Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer.

  ## Attributes

  - minimumTransferableSeats (integer()): When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats. Defaults to: `null`.
  - transferabilityExpirationTime (String.t): The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :minimumTransferableSeats => any(),
          :transferabilityExpirationTime => any()
        }

  field(:minimumTransferableSeats)
  field(:transferabilityExpirationTime)
end

defimpl Poison.Decoder, for: GoogleApi.Reseller.V1.Model.SubscriptionTransferInfo do
  def decode(value, options) do
    GoogleApi.Reseller.V1.Model.SubscriptionTransferInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Reseller.V1.Model.SubscriptionTransferInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
