# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceNetworking.V1.Model.Subnetwork do
  @moduledoc """
  Represents a subnet that was created or discovered by a private access management service.

  ## Attributes

  *   `ipCidrRange` (*type:* `String.t`, *default:* `nil`) - Subnetwork CIDR range in `10.x.x.x/y` format.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Subnetwork name. See https://cloud.google.com/compute/docs/vpc/
  *   `network` (*type:* `String.t`, *default:* `nil`) - In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`
  *   `outsideAllocation` (*type:* `boolean()`, *default:* `nil`) - This is a discovered subnet that is not within the current consumer allocated ranges.
  *   `region` (*type:* `String.t`, *default:* `nil`) - GCP region where the subnetwork is located.
  *   `secondaryIpRanges` (*type:* `list(GoogleApi.ServiceNetworking.V1.Model.SecondaryIpRange.t)`, *default:* `nil`) - List of secondary IP ranges in this subnetwork.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ipCidrRange => String.t() | nil,
          :name => String.t() | nil,
          :network => String.t() | nil,
          :outsideAllocation => boolean() | nil,
          :region => String.t() | nil,
          :secondaryIpRanges =>
            list(GoogleApi.ServiceNetworking.V1.Model.SecondaryIpRange.t()) | nil
        }

  field(:ipCidrRange)
  field(:name)
  field(:network)
  field(:outsideAllocation)
  field(:region)

  field(:secondaryIpRanges, as: GoogleApi.ServiceNetworking.V1.Model.SecondaryIpRange, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceNetworking.V1.Model.Subnetwork do
  def decode(value, options) do
    GoogleApi.ServiceNetworking.V1.Model.Subnetwork.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceNetworking.V1.Model.Subnetwork do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
