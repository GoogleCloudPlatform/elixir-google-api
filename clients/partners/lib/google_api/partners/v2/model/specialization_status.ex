# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Partners.V2.Model.SpecializationStatus do
  @moduledoc """
  Agency specialization status

  ## Attributes

  - badgeSpecialization (String.t): The specialization this status is for. Defaults to: `null`.
    - Enum - one of [BADGE_SPECIALIZATION_UNKNOWN, BADGE_SPECIALIZATION_ADWORDS_SEARCH, BADGE_SPECIALIZATION_ADWORDS_DISPLAY, BADGE_SPECIALIZATION_ADWORDS_MOBILE, BADGE_SPECIALIZATION_ADWORDS_VIDEO, BADGE_SPECIALIZATION_ADWORDS_SHOPPING]
  - badgeSpecializationState (String.t): State of agency specialization. Defaults to: `null`.
    - Enum - one of [BADGE_SPECIALIZATION_STATE_UNKNOWN, BADGE_SPECIALIZATION_STATE_PASSED, BADGE_SPECIALIZATION_STATE_NOT_PASSED, BADGE_SPECIALIZATION_STATE_IN_GRACE]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :badgeSpecialization => any(),
          :badgeSpecializationState => any()
        }

  field(:badgeSpecialization)
  field(:badgeSpecializationState)
end

defimpl Poison.Decoder, for: GoogleApi.Partners.V2.Model.SpecializationStatus do
  def decode(value, options) do
    GoogleApi.Partners.V2.Model.SpecializationStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Partners.V2.Model.SpecializationStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
