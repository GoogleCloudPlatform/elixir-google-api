# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AppState.V1.Api.States do
  @moduledoc """
  API calls for all endpoints tagged `States`.
  """

  alias GoogleApi.AppState.V1.Connection
  import GoogleApi.AppState.V1.RequestBuilder


  @doc """
  Clears (sets to empty) the data for the passed key if and only if the passed version matches the currently stored version. This method results in a conflict error on version mismatch.

  ## Parameters

  - connection (GoogleApi.AppState.V1.Connection): Connection to server
  - state_key (Integer): The key for the data to be retrieved.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :current_data_version (String): The version of the data to be cleared. Version strings are returned by the server.

  ## Returns

  {:ok, %GoogleApi.AppState.V1.Model.WriteResult{}} on success
  {:error, info} on failure
  """
  @spec appstate_states_clear(Tesla.Env.client, Integer.t, keyword()) :: {:ok, GoogleApi.AppState.V1.Model.WriteResult.t} | {:error, Tesla.Env.t}
  def appstate_states_clear(connection, state_key, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"currentDataVersion" => :query
    }
    %{}
    |> method(:post)
    |> url("/states/{stateKey}/clear", %{
         "stateKey" => URI.encode_www_form(state_key)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppState.V1.Model.WriteResult{})
  end

  @doc """
  Deletes a key and the data associated with it. The key is removed and no longer counts against the key quota. Note that since this method is not safe in the face of concurrent modifications, it should only be used for development and testing purposes. Invoking this method in shipping code can result in data loss and data corruption.

  ## Parameters

  - connection (GoogleApi.AppState.V1.Connection): Connection to server
  - state_key (Integer): The key for the data to be retrieved.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec appstate_states_delete(Tesla.Env.client, Integer.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def appstate_states_delete(connection, state_key, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/states/{stateKey}", %{
         "stateKey" => URI.encode_www_form(state_key)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Retrieves the data corresponding to the passed key. If the key does not exist on the server, an HTTP 404 will be returned.

  ## Parameters

  - connection (GoogleApi.AppState.V1.Connection): Connection to server
  - state_key (Integer): The key for the data to be retrieved.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AppState.V1.Model.GetResponse{}} on success
  {:error, info} on failure
  """
  @spec appstate_states_get(Tesla.Env.client, Integer.t, keyword()) :: {:ok, GoogleApi.AppState.V1.Model.GetResponse.t} | {:error, Tesla.Env.t}
  def appstate_states_get(connection, state_key, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/states/{stateKey}", %{
         "stateKey" => URI.encode_www_form(state_key)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppState.V1.Model.GetResponse{})
  end

  @doc """
  Lists all the states keys, and optionally the state data.

  ## Parameters

  - connection (GoogleApi.AppState.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :include_data (Boolean): Whether to include the full data in addition to the version number

  ## Returns

  {:ok, %GoogleApi.AppState.V1.Model.ListResponse{}} on success
  {:error, info} on failure
  """
  @spec appstate_states_list(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.AppState.V1.Model.ListResponse.t} | {:error, Tesla.Env.t}
  def appstate_states_list(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"includeData" => :query
    }
    %{}
    |> method(:get)
    |> url("/states")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppState.V1.Model.ListResponse{})
  end

  @doc """
  Update the data associated with the input key if and only if the passed version matches the currently stored version. This method is safe in the face of concurrent writes. Maximum per-key size is 128KB.

  ## Parameters

  - connection (GoogleApi.AppState.V1.Connection): Connection to server
  - state_key (Integer): The key for the data to be retrieved.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :current_state_version (String): The version of the app state your application is attempting to update. If this does not match the current version, this method will return a conflict error. If there is no data stored on the server for this key, the update will succeed irrespective of the value of this parameter.
    - :body (UpdateRequest): 

  ## Returns

  {:ok, %GoogleApi.AppState.V1.Model.WriteResult{}} on success
  {:error, info} on failure
  """
  @spec appstate_states_update(Tesla.Env.client, Integer.t, keyword()) :: {:ok, GoogleApi.AppState.V1.Model.WriteResult.t} | {:error, Tesla.Env.t}
  def appstate_states_update(connection, state_key, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"currentStateVersion" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/states/{stateKey}", %{
         "stateKey" => URI.encode_www_form(state_key)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AppState.V1.Model.WriteResult{})
  end
end
