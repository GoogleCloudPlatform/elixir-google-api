# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1ParameterSpec do
  @moduledoc """
  Represents a single hyperparameter to optimize.

  ## Attributes

  - categoricalValues ([String.t]): Required if type is &#x60;CATEGORICAL&#x60;. The list of possible categories. Defaults to: `null`.
  - discreteValues ([float()]): Required if type is &#x60;DISCRETE&#x60;. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values. Defaults to: `null`.
  - maxValue (float()): Required if type is &#x60;DOUBLE&#x60; or &#x60;INTEGER&#x60;. This field should be unset if type is &#x60;CATEGORICAL&#x60;. This value should be integers if type is &#x60;INTEGER&#x60;. Defaults to: `null`.
  - minValue (float()): Required if type is &#x60;DOUBLE&#x60; or &#x60;INTEGER&#x60;. This field should be unset if type is &#x60;CATEGORICAL&#x60;. This value should be integers if type is INTEGER. Defaults to: `null`.
  - parameterName (String.t): Required. The parameter name must be unique amongst all ParameterConfigs in a HyperparameterSpec message. E.g., \&quot;learning_rate\&quot;. Defaults to: `null`.
  - scaleType (String.t): Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., &#x60;UNIT_LINEAR_SCALE&#x60;). Defaults to: `null`.
    - Enum - one of [NONE, UNIT_LINEAR_SCALE, UNIT_LOG_SCALE, UNIT_REVERSE_LOG_SCALE]
  - type (String.t): Required. The type of the parameter. Defaults to: `null`.
    - Enum - one of [PARAMETER_TYPE_UNSPECIFIED, DOUBLE, INTEGER, CATEGORICAL, DISCRETE]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :categoricalValues => list(any()),
          :discreteValues => list(any()),
          :maxValue => any(),
          :minValue => any(),
          :parameterName => any(),
          :scaleType => any(),
          :type => any()
        }

  field(:categoricalValues, type: :list)
  field(:discreteValues, type: :list)
  field(:maxValue)
  field(:minValue)
  field(:parameterName)
  field(:scaleType)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1ParameterSpec do
  def decode(value, options) do
    GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1ParameterSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1ParameterSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
