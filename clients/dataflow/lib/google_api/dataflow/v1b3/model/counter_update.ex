# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Dataflow.V1b3.Model.CounterUpdate do
  @moduledoc """
  An update to a Counter sent from a worker.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"boolean",
    :"cumulative",
    :"distribution",
    :"floatingPoint",
    :"floatingPointList",
    :"floatingPointMean",
    :"integer",
    :"integerList",
    :"integerMean",
    :"nameAndKind",
    :"shortId",
    :"stringList",
    :"structuredNameAndMetadata"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.CounterUpdate do
  import GoogleApi.Dataflow.V1b3.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"distribution", :struct, GoogleApi.Dataflow.V1b3.Model.DistributionUpdate, options)
    |> deserialize(:"floatingPointList", :struct, GoogleApi.Dataflow.V1b3.Model.FloatingPointList, options)
    |> deserialize(:"floatingPointMean", :struct, GoogleApi.Dataflow.V1b3.Model.FloatingPointMean, options)
    |> deserialize(:"integer", :struct, GoogleApi.Dataflow.V1b3.Model.SplitInt64, options)
    |> deserialize(:"integerList", :struct, GoogleApi.Dataflow.V1b3.Model.IntegerList, options)
    |> deserialize(:"integerMean", :struct, GoogleApi.Dataflow.V1b3.Model.IntegerMean, options)
    |> deserialize(:"nameAndKind", :struct, GoogleApi.Dataflow.V1b3.Model.NameAndKind, options)
    |> deserialize(:"stringList", :struct, GoogleApi.Dataflow.V1b3.Model.StringList, options)
    |> deserialize(:"structuredNameAndMetadata", :struct, GoogleApi.Dataflow.V1b3.Model.CounterStructuredNameAndMetadata, options)
  end
end

