# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Dataflow.V1b3.Model.WorkerMessage do
  @moduledoc """
  WorkerMessage provides information to the backend about a worker.

  ## Attributes

  - labels (Map[String, String]): Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { \&quot;JOB_ID\&quot;: \&quot;2015-04-22\&quot;,   \&quot;WORKER_ID\&quot;: \&quot;wordcount-vm-2015â€¦\&quot;   \&quot;CONTAINER_TYPE\&quot;: \&quot;worker\&quot;,   \&quot;CONTAINER_ID\&quot;: \&quot;ac1234def\&quot;} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here. Defaults to: `null`.
  - time (String): The timestamp of the worker_message. Defaults to: `null`.
  - workerHealthReport (WorkerHealthReport): The health of a worker. Defaults to: `null`.
  - workerMessageCode (WorkerMessageCode): A worker message code. Defaults to: `null`.
  - workerMetrics (ResourceUtilizationReport): Resource metrics reported by workers. Defaults to: `null`.
  """

  defstruct [
    :"labels",
    :"time",
    :"workerHealthReport",
    :"workerMessageCode",
    :"workerMetrics"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.WorkerMessage do
  import GoogleApi.Dataflow.V1b3.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"workerHealthReport", :struct, GoogleApi.Dataflow.V1b3.Model.WorkerHealthReport, options)
    |> deserialize(:"workerMessageCode", :struct, GoogleApi.Dataflow.V1b3.Model.WorkerMessageCode, options)
    |> deserialize(:"workerMetrics", :struct, GoogleApi.Dataflow.V1b3.Model.ResourceUtilizationReport, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.WorkerMessage do
  def encode(value, options) do
    GoogleApi.Dataflow.V1b3.Deserializer.serialize_non_nil(value, options)
  end
end

