# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Dataflow.V1b3.Model.PubsubLocation do
  @moduledoc """
  Identifies a pubsub location to use for transferring data into or
  out of a streaming Dataflow job.

  ## Attributes

  - dropLateData (boolean()): Indicates whether the pipeline allows late-arriving data. Defaults to `nil`.
  - idLabel (String.t): If set, contains a pubsub label from which to extract record ids.
  If left empty, record deduplication will be strictly best effort. Defaults to `nil`.
  - subscription (String.t): A pubsub subscription, in the form of
  "pubsub.googleapis.com/subscriptions/<project-id>/<subscription-name>" Defaults to `nil`.
  - timestampLabel (String.t): If set, contains a pubsub label from which to extract record timestamps.
  If left empty, record timestamps will be generated upon arrival. Defaults to `nil`.
  - topic (String.t): A pubsub topic, in the form of
  "pubsub.googleapis.com/topics/<project-id>/<topic-name>" Defaults to `nil`.
  - trackingSubscription (String.t): If set, specifies the pubsub subscription that will be used for tracking
  custom time timestamps for watermark estimation. Defaults to `nil`.
  - withAttributes (boolean()): If true, then the client has requested to get pubsub attributes. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dropLateData => boolean(),
          :idLabel => String.t(),
          :subscription => String.t(),
          :timestampLabel => String.t(),
          :topic => String.t(),
          :trackingSubscription => String.t(),
          :withAttributes => boolean()
        }

  field(:dropLateData)
  field(:idLabel)
  field(:subscription)
  field(:timestampLabel)
  field(:topic)
  field(:trackingSubscription)
  field(:withAttributes)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.PubsubLocation do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.PubsubLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.PubsubLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
