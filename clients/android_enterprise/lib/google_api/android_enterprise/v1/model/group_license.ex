# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidEnterprise.V1.Model.GroupLicense do
  @moduledoc """
  Group license objects allow you to keep track of licenses (called
  <a href="/android/work/play/emm-api/v1/entitlements">entitlements</a>)
  for both free and paid apps. For a free app, a group license is created when
  an enterprise admin first approves the product in Google Play or when the
  first entitlement for the product is created for a user via the API. For a
  paid app, a group license object is only created when an enterprise admin
  purchases the product in Google Play for the first time.

  Use the API to query group licenses. A <code>Grouplicenses</code> resource
  includes the total number of licenses purchased (paid apps only) and the
  total number of licenses currently in use. In other words, the total number
  of <code>Entitlements</code> that exist for the product.

  Only one group license object is created per product and group license
  objects are never deleted. If a product is unapproved, its group license
  remains. This allows enterprise admins to keep track of any remaining
  entitlements for the product.

  ## Attributes

  *   `acquisitionKind` (*type:* `String.t`, *default:* `nil`) - How this group license was acquired. <code>&quot;bulkPurchase&quot;</code>
      means that this Grouplicenses resource was created because the enterprise
      purchased licenses for this product; otherwise, the value is
      <code>&quot;free&quot;</code> (for free products).
  *   `approval` (*type:* `String.t`, *default:* `nil`) - Whether the product to which this group license relates is currently
      approved by the enterprise. Products are approved when a group license is
      first created, but this approval may be revoked by an enterprise admin via
      Google Play. Unapproved products will not be visible to end users in
      collections, and new entitlements to them should not normally be created.
  *   `numProvisioned` (*type:* `integer()`, *default:* `nil`) - The total number of provisioned licenses for this product.
      Returned by read operations, but ignored in write operations.
  *   `numPurchased` (*type:* `integer()`, *default:* `nil`) - The number of purchased licenses (possibly in multiple purchases).
      If this field is omitted, then there is no limit on the number of licenses
      that can be provisioned (for example, if the acquisition kind is
      <code>&quot;free&quot;</code>).
  *   `permissions` (*type:* `String.t`, *default:* `nil`) - The permission approval status of the product. This field
      is only set if the product is approved. Possible states are:<ul>
      <li>"<code>currentApproved</code>", the current set
      of permissions is approved, but additional permissions will require the
      administrator to reapprove the product (If the product was approved
      without specifying the approved permissions setting, then this is the
      default behavior.),</li>
      <li>"<code>needsReapproval</code>", the product has unapproved permissions.
      No additional product licenses can be assigned until the product is
      reapproved,</li>
      <li>"<code>allCurrentAndFutureApproved</code>",
      the current permissions are approved and any future permission updates
      will be automatically approved without administrator review.</li></ul>
  *   `productId` (*type:* `String.t`, *default:* `nil`) - The ID of the product that the license is for. For example,
      <code>&quot;app:com.google.android.gm&quot;</code>.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :acquisitionKind => String.t(),
          :approval => String.t(),
          :numProvisioned => integer(),
          :numPurchased => integer(),
          :permissions => String.t(),
          :productId => String.t()
        }

  field(:acquisitionKind)
  field(:approval)
  field(:numProvisioned)
  field(:numPurchased)
  field(:permissions)
  field(:productId)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidEnterprise.V1.Model.GroupLicense do
  def decode(value, options) do
    GoogleApi.AndroidEnterprise.V1.Model.GroupLicense.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidEnterprise.V1.Model.GroupLicense do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
