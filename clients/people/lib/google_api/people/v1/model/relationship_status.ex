# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.People.V1.Model.RelationshipStatus do
  @moduledoc """
  A person's read-only relationship status.

  ## Attributes

  - formattedValue (String.t): The read-only value of the relationship status translated and formatted in
  the viewer's account locale or the `Accept-Language` HTTP header locale. Defaults to `nil`.
  - metadata (GoogleApi.People.V1.Model.FieldMetadata.t): Metadata about the relationship status. Defaults to `nil`.
  - value (String.t): The relationship status. The value can be custom or one of these
  predefined values:

  * `single`
  * `inARelationship`
  * `engaged`
  * `married`
  * `itsComplicated`
  * `openRelationship`
  * `widowed`
  * `inDomesticPartnership`
  * `inCivilUnion` Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :formattedValue => String.t(),
          :metadata => GoogleApi.People.V1.Model.FieldMetadata.t(),
          :value => String.t()
        }

  field(:formattedValue)
  field(:metadata, as: GoogleApi.People.V1.Model.FieldMetadata)
  field(:value)
end

defimpl Poison.Decoder, for: GoogleApi.People.V1.Model.RelationshipStatus do
  def decode(value, options) do
    GoogleApi.People.V1.Model.RelationshipStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.People.V1.Model.RelationshipStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
