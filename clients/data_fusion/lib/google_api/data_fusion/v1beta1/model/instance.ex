# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataFusion.V1beta1.Model.Instance do
  @moduledoc """
  Represents a Data Fusion instance.

  ## Attributes

  *   `apiEndpoint` (*type:* `String.t`, *default:* `nil`) - Output only. Endpoint on which the REST APIs is accessible.
  *   `availableVersion` (*type:* `list(GoogleApi.DataFusion.V1beta1.Model.Version.t)`, *default:* `nil`) - Available versions that the instance can be upgraded to using
      UpdateInstanceRequest.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time the instance was created.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this instance.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Display name for an instance.
  *   `enableStackdriverLogging` (*type:* `boolean()`, *default:* `nil`) - Option to enable Stackdriver Logging.
  *   `enableStackdriverMonitoring` (*type:* `boolean()`, *default:* `nil`) - Option to enable Stackdriver Monitoring.
  *   `gcsBucket` (*type:* `String.t`, *default:* `nil`) - Output only. Cloud Storage bucket generated by Data Fusion in the customer
      project.
  *   `labels` (*type:* `map()`, *default:* `nil`) - The resource labels for instance to use to annotate any related underlying
      resources such as Compute Engine VMs. The character '=' is not allowed to
      be used within the labels.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The name of this instance is in the form of
      projects/{project}/locations/{location}/instances/{instance}.
  *   `networkConfig` (*type:* `GoogleApi.DataFusion.V1beta1.Model.NetworkConfig.t`, *default:* `nil`) - Network configuration options. These are required when a private Data
      Fusion instance is to be created.
  *   `options` (*type:* `map()`, *default:* `nil`) - Map of additional options used to configure the behavior of
      Data Fusion instance.
  *   `privateInstance` (*type:* `boolean()`, *default:* `nil`) - Specifies whether the Data Fusion instance should be private. If set to
      true, all Data Fusion nodes will have private IP addresses and will not be
      able to access the public internet.
  *   `serviceAccount` (*type:* `String.t`, *default:* `nil`) - Output only. Service account which will be used to access resources in
      the customer project."
  *   `serviceEndpoint` (*type:* `String.t`, *default:* `nil`) - Output only. Endpoint on which the Data Fusion UI is accessible.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The current state of this Data Fusion instance.
  *   `stateMessage` (*type:* `String.t`, *default:* `nil`) - Output only. Additional information about the current state of this Data
      Fusion instance if available.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. Instance type.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time the instance was last updated.
  *   `version` (*type:* `String.t`, *default:* `nil`) - Current version of Data Fusion.
  *   `zone` (*type:* `String.t`, *default:* `nil`) - Name of the zone in which the Data Fusion instance will be created.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiEndpoint => String.t(),
          :availableVersion => list(GoogleApi.DataFusion.V1beta1.Model.Version.t()),
          :createTime => DateTime.t(),
          :description => String.t(),
          :displayName => String.t(),
          :enableStackdriverLogging => boolean(),
          :enableStackdriverMonitoring => boolean(),
          :gcsBucket => String.t(),
          :labels => map(),
          :name => String.t(),
          :networkConfig => GoogleApi.DataFusion.V1beta1.Model.NetworkConfig.t(),
          :options => map(),
          :privateInstance => boolean(),
          :serviceAccount => String.t(),
          :serviceEndpoint => String.t(),
          :state => String.t(),
          :stateMessage => String.t(),
          :type => String.t(),
          :updateTime => DateTime.t(),
          :version => String.t(),
          :zone => String.t()
        }

  field(:apiEndpoint)
  field(:availableVersion, as: GoogleApi.DataFusion.V1beta1.Model.Version, type: :list)
  field(:createTime, as: DateTime)
  field(:description)
  field(:displayName)
  field(:enableStackdriverLogging)
  field(:enableStackdriverMonitoring)
  field(:gcsBucket)
  field(:labels, type: :map)
  field(:name)
  field(:networkConfig, as: GoogleApi.DataFusion.V1beta1.Model.NetworkConfig)
  field(:options, type: :map)
  field(:privateInstance)
  field(:serviceAccount)
  field(:serviceEndpoint)
  field(:state)
  field(:stateMessage)
  field(:type)
  field(:updateTime, as: DateTime)
  field(:version)
  field(:zone)
end

defimpl Poison.Decoder, for: GoogleApi.DataFusion.V1beta1.Model.Instance do
  def decode(value, options) do
    GoogleApi.DataFusion.V1beta1.Model.Instance.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataFusion.V1beta1.Model.Instance do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
