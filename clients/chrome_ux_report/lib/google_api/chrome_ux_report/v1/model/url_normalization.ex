# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeUXReport.V1.Model.UrlNormalization do
  @moduledoc """
  Object representing the normalization actions taken to normalize a url to achieve a higher chance of successful lookup. These are simple automated changes that are taken when looking up the provided `url_patten` would be known to fail. Complex actions like following redirects are not handled.

  ## Attributes

  *   `normalizedUrl` (*type:* `String.t`, *default:* `nil`) - The URL after any normalization actions. This is a valid user experience URL that could reasonably be looked up.
  *   `originalUrl` (*type:* `String.t`, *default:* `nil`) - The original requested URL prior to any normalization actions.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :normalizedUrl => String.t() | nil,
          :originalUrl => String.t() | nil
        }

  field(:normalizedUrl)
  field(:originalUrl)
end

defimpl Poison.Decoder, for: GoogleApi.ChromeUXReport.V1.Model.UrlNormalization do
  def decode(value, options) do
    GoogleApi.ChromeUXReport.V1.Model.UrlNormalization.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ChromeUXReport.V1.Model.UrlNormalization do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
