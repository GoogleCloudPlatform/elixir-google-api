# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CharacterMaskConfig do
  @moduledoc """
  Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we&#39;ll attempt to preserve the original data&#39;s type. (This allows you to take a long like 123 and modify it to a string like **3.

  ## Attributes

  - charactersToIgnore ([GooglePrivacyDlpV2CharsToIgnore]): When masking a string, items in this list will be skipped when replacing. For example, if your string is 555-555-5555 and you ask us to skip &#x60;-&#x60; and mask 5 chars with * we would produce ***-*55-5555. Defaults to: `null`.
  - maskingCharacter (String.t): Character to mask the sensitive values&amp;mdash;for example, \&quot;*\&quot; for an alphabetic string such as name, or \&quot;0\&quot; for a numeric string such as ZIP code or credit card number. String must have length 1. If not supplied, we will default to \&quot;*\&quot; for strings, 0 for digits. Defaults to: `null`.
  - numberToMask (integer()): Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally. Defaults to: `null`.
  - reverseOrder (boolean()): Mask characters in reverse order. For example, if &#x60;masking_character&#x60; is &#39;0&#39;, number_to_mask is 14, and &#x60;reverse_order&#x60; is false, then 1234-5678-9012-3456 -&gt; 00000000000000-3456 If &#x60;masking_character&#x60; is &#39;*&#39;, &#x60;number_to_mask&#x60; is 3, and &#x60;reverse_order&#x60; is true, then 12345 -&gt; 12*** Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :charactersToIgnore => list(GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CharsToIgnore.t()),
          :maskingCharacter => any(),
          :numberToMask => any(),
          :reverseOrder => any()
        }

  field(
    :charactersToIgnore,
    as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CharsToIgnore,
    type: :list
  )

  field(:maskingCharacter)
  field(:numberToMask)
  field(:reverseOrder)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CharacterMaskConfig do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CharacterMaskConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CharacterMaskConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
