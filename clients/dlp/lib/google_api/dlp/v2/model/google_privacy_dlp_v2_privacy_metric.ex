# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PrivacyMetric do
  @moduledoc """
  Privacy metric to compute for reidentification risk analysis.

  ## Attributes

  - categoricalStatsConfig (GooglePrivacyDlpV2CategoricalStatsConfig):  Defaults to: `null`.
  - deltaPresenceEstimationConfig (GooglePrivacyDlpV2DeltaPresenceEstimationConfig):  Defaults to: `null`.
  - kAnonymityConfig (GooglePrivacyDlpV2KAnonymityConfig):  Defaults to: `null`.
  - kMapEstimationConfig (GooglePrivacyDlpV2KMapEstimationConfig):  Defaults to: `null`.
  - lDiversityConfig (GooglePrivacyDlpV2LDiversityConfig):  Defaults to: `null`.
  - numericalStatsConfig (GooglePrivacyDlpV2NumericalStatsConfig):  Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :categoricalStatsConfig =>
            GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CategoricalStatsConfig.t(),
          :deltaPresenceEstimationConfig =>
            GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2DeltaPresenceEstimationConfig.t(),
          :kAnonymityConfig => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KAnonymityConfig.t(),
          :kMapEstimationConfig =>
            GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationConfig.t(),
          :lDiversityConfig => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2LDiversityConfig.t(),
          :numericalStatsConfig =>
            GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2NumericalStatsConfig.t()
        }

  field(
    :categoricalStatsConfig,
    as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2CategoricalStatsConfig
  )

  field(
    :deltaPresenceEstimationConfig,
    as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2DeltaPresenceEstimationConfig
  )

  field(:kAnonymityConfig, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KAnonymityConfig)
  field(:kMapEstimationConfig, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationConfig)
  field(:lDiversityConfig, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2LDiversityConfig)
  field(:numericalStatsConfig, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2NumericalStatsConfig)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PrivacyMetric do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PrivacyMetric.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PrivacyMetric do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
