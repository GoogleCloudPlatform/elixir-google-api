# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2beta1.Model.GooglePrivacyDlpV2beta1InspectConfig do
  @moduledoc """
  Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.

  ## Attributes

  - excludeTypes (Boolean): When true, excludes type information of the findings. Defaults to: `null`.
  - includeQuote (Boolean): When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. Defaults to: `null`.
  - infoTypeLimits (List[GooglePrivacyDlpV2beta1InfoTypeLimit]): Configuration of findings limit given for specified info types. Defaults to: `null`.
  - infoTypes (List[GooglePrivacyDlpV2beta1InfoType]): Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or found in documentation. Empty info_types runs all enabled detectors. Defaults to: `null`.
  - maxFindings (Integer): Limits the number of findings per content item or long running operation. Defaults to: `null`.
  - minLikelihood (String): Only returns findings equal or above this threshold. Defaults to: `null`.
    - Enum - one of [LIKELIHOOD_UNSPECIFIED, VERY_UNLIKELY, UNLIKELY, POSSIBLE, LIKELY, VERY_LIKELY]
  """

  defstruct [
    :"excludeTypes",
    :"includeQuote",
    :"infoTypeLimits",
    :"infoTypes",
    :"maxFindings",
    :"minLikelihood"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2beta1.Model.GooglePrivacyDlpV2beta1InspectConfig do
  import GoogleApi.DLP.V2beta1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"infoTypeLimits", :list, GoogleApi.DLP.V2beta1.Model.GooglePrivacyDlpV2beta1InfoTypeLimit, options)
    |> deserialize(:"infoTypes", :list, GoogleApi.DLP.V2beta1.Model.GooglePrivacyDlpV2beta1InfoType, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2beta1.Model.GooglePrivacyDlpV2beta1InspectConfig do
  def encode(value, options) do
    GoogleApi.DLP.V2beta1.Deserializer.serialize_non_nil(value, options)
  end
end

