# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudResourceManager.V1.Model.ListConstraint do
  @moduledoc """
  A &#x60;Constraint&#x60; that allows or disallows a list of string values, which are configured by an Organization&#39;s policy administrator with a &#x60;Policy&#x60;.

  ## Attributes

  - suggestedValue (String.t): Optional. The Google Cloud Console will try to default to a configuration that matches the value specified in this &#x60;Constraint&#x60;. Defaults to: `null`.
  - supportsUnder (boolean()): Indicates whether subtrees of Cloud Resource Manager resource hierarchy can be used in &#x60;Policy.allowed_values&#x60; and &#x60;Policy.denied_values&#x60;. For example, &#x60;\&quot;under:folders/123\&quot;&#x60; would match any resource under the &#39;folders/123&#39; folder. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :suggestedValue => any(),
          :supportsUnder => any()
        }

  field(:suggestedValue)
  field(:supportsUnder)
end

defimpl Poison.Decoder, for: GoogleApi.CloudResourceManager.V1.Model.ListConstraint do
  def decode(value, options) do
    GoogleApi.CloudResourceManager.V1.Model.ListConstraint.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudResourceManager.V1.Model.ListConstraint do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
