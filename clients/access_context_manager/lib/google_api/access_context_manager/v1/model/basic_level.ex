# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AccessContextManager.V1.Model.BasicLevel do
  @moduledoc """
  `BasicLevel` is an `AccessLevel` using a set of recommended features.

  ## Attributes

  *   `combiningFunction` (*type:* `String.t`, *default:* `nil`) - How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.
  *   `conditions` (*type:* `list(GoogleApi.AccessContextManager.V1.Model.Condition.t)`, *default:* `nil`) - Required. A list of requirements for the `AccessLevel` to be granted.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :combiningFunction => String.t() | nil,
          :conditions => list(GoogleApi.AccessContextManager.V1.Model.Condition.t()) | nil
        }

  field(:combiningFunction)
  field(:conditions, as: GoogleApi.AccessContextManager.V1.Model.Condition, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.AccessContextManager.V1.Model.BasicLevel do
  def decode(value, options) do
    GoogleApi.AccessContextManager.V1.Model.BasicLevel.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AccessContextManager.V1.Model.BasicLevel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
