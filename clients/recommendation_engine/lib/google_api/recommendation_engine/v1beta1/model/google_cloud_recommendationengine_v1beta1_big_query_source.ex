# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RecommendationEngine.V1beta1.Model.GoogleCloudRecommendationengineV1beta1BigQuerySource do
  @moduledoc """
  BigQuery source import data from.

  ## Attributes

  *   `dataSchema` (*type:* `String.t`, *default:* `nil`) - Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: "catalog_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: "catalog_merchant_center" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user event imports: 1: "user_events_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. "user_events_ga360" using https://support.google.com/analytics/answer/3437719?hl=en
  *   `datasetId` (*type:* `String.t`, *default:* `nil`) - Required. The BigQuery data set to copy the data from.
  *   `gcsStagingDir` (*type:* `String.t`, *default:* `nil`) - Optional. Intermediate Cloud Storage directory used for the import. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - Optional. The project id (can be project # or id) that the BigQuery source is in. If not specified, inherits the project id from the parent request.
  *   `tableId` (*type:* `String.t`, *default:* `nil`) - Required. The BigQuery table to copy the data from.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dataSchema => String.t() | nil,
          :datasetId => String.t() | nil,
          :gcsStagingDir => String.t() | nil,
          :projectId => String.t() | nil,
          :tableId => String.t() | nil
        }

  field(:dataSchema)
  field(:datasetId)
  field(:gcsStagingDir)
  field(:projectId)
  field(:tableId)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.RecommendationEngine.V1beta1.Model.GoogleCloudRecommendationengineV1beta1BigQuerySource do
  def decode(value, options) do
    GoogleApi.RecommendationEngine.V1beta1.Model.GoogleCloudRecommendationengineV1beta1BigQuerySource.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.RecommendationEngine.V1beta1.Model.GoogleCloudRecommendationengineV1beta1BigQuerySource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
