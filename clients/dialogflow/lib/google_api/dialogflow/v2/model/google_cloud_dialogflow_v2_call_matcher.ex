# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2CallMatcher do
  @moduledoc """
  Represents a call matcher that describes criteria for matching incoming SIP calls to a conversation. When Dialogflow get a SIP call from a third-party carrier, Dialogflow matches the call to an existing conversation by either: * Extracting the conversation id from the [Call-Info header](https://tools.ietf.org/html/rfc3261#section-20.9), e.g. `Call-Info: ;purpose=Goog-ContactCenter-Conversation`. * Or, if that doesn't work, matching incoming [SIP headers](https://tools.ietf.org/html/rfc3261#section-7.3) against any CallMatcher for the conversation. If an incoming SIP call without valid `Call-Info` header matches to zero or multiple conversations with `CallMatcher`, we reject it. A call matcher contains equality conditions for SIP headers that all have to be fulfilled in order for a SIP call to match. The matched SIP headers consist of well-known headers (`To`, `From`, `Call-ID`) and custom headers. A CallMatcher is only valid if it specifies: * At least 1 custom header, * or at least 2 well-known headers.

  ## Attributes

  *   `callIdHeader` (*type:* `String.t`, *default:* `nil`) - Value of the [`Call-ID` header](https://tools.ietf.org/html/rfc3261#section-8.1.1.4) to match. If empty or unspecified, we don't match to the [`Call-ID` header](https://tools.ietf.org/html/rfc3261#section-8.1.1.4).
  *   `customHeaders` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2CallMatcherCustomHeaders.t`, *default:* `nil`) - Custom SIP headers that must match.
  *   `fromHeader` (*type:* `String.t`, *default:* `nil`) - Value of the [`From` header](https://tools.ietf.org/html/rfc3261#section-8.1.1.3) to match. If empty or unspecified, we don't match to the [`From` header](https://tools.ietf.org/html/rfc3261#section-8.1.1.3).
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The unique identifier of this call matcher. Format: `projects//locations//conversations//callMatchers/`.
  *   `toHeader` (*type:* `String.t`, *default:* `nil`) - Value of the [`To` header](https://tools.ietf.org/html/rfc3261#section-8.1.1.2) to match. If empty or unspecified, we don't match to the [`To` header](https://tools.ietf.org/html/rfc3261#section-8.1.1.2).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :callIdHeader => String.t() | nil,
          :customHeaders =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2CallMatcherCustomHeaders.t()
            | nil,
          :fromHeader => String.t() | nil,
          :name => String.t() | nil,
          :toHeader => String.t() | nil
        }

  field(:callIdHeader)

  field(:customHeaders,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2CallMatcherCustomHeaders
  )

  field(:fromHeader)
  field(:name)
  field(:toHeader)
end

defimpl Poison.Decoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2CallMatcher do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2CallMatcher.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2CallMatcher do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
