# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.GcRule do
  @moduledoc """
  Rule for determining which cells to delete during garbage collection.

  ## Attributes

  *   `intersection` (*type:* `GoogleApi.BigtableAdmin.V2.Model.Intersection.t`, *default:* `nil`) - Delete cells that would be deleted by every nested rule.
  *   `maxAge` (*type:* `String.t`, *default:* `nil`) - Delete cells in a column older than the given age.
      Values must be at least one millisecond, and will be truncated to
      microsecond granularity.
  *   `maxNumVersions` (*type:* `integer()`, *default:* `nil`) - Delete all cells in a column except the most recent N.
  *   `union` (*type:* `GoogleApi.BigtableAdmin.V2.Model.Union.t`, *default:* `nil`) - Delete cells that would be deleted by any nested rule.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :intersection => GoogleApi.BigtableAdmin.V2.Model.Intersection.t(),
          :maxAge => String.t(),
          :maxNumVersions => integer(),
          :union => GoogleApi.BigtableAdmin.V2.Model.Union.t()
        }

  field(:intersection, as: GoogleApi.BigtableAdmin.V2.Model.Intersection)
  field(:maxAge)
  field(:maxNumVersions)
  field(:union, as: GoogleApi.BigtableAdmin.V2.Model.Union)
end

defimpl Poison.Decoder, for: GoogleApi.BigtableAdmin.V2.Model.GcRule do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.GcRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigtableAdmin.V2.Model.GcRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
