# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.ListInstancesResponse do
  @moduledoc """
  Response message for BigtableInstanceAdmin.ListInstances.

  ## Attributes

  *   `failedLocations` (*type:* `list(String.t)`, *default:* `nil`) - Locations from which Instance information could not be retrieved, due to an outage or some other transient condition. Instances whose Clusters are all in one of the failed locations may be missing from `instances`, and Instances with at least one Cluster in a failed location may only have partial information returned. Values are of the form `projects//locations/`
  *   `instances` (*type:* `list(GoogleApi.BigtableAdmin.V2.Model.Instance.t)`, *default:* `nil`) - The list of requested instances.
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - DEPRECATED: This field is unused and ignored.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :failedLocations => list(String.t()) | nil,
          :instances => list(GoogleApi.BigtableAdmin.V2.Model.Instance.t()) | nil,
          :nextPageToken => String.t() | nil
        }

  field(:failedLocations, type: :list)
  field(:instances, as: GoogleApi.BigtableAdmin.V2.Model.Instance, type: :list)
  field(:nextPageToken)
end

defimpl Poison.Decoder, for: GoogleApi.BigtableAdmin.V2.Model.ListInstancesResponse do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.ListInstancesResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigtableAdmin.V2.Model.ListInstancesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
