# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.SingleClusterRouting do
  @moduledoc """
  Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.

  ## Attributes

  *   `allowTransactionalWrites` (*type:* `boolean()`, *default:* `nil`) - Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.
  *   `clusterId` (*type:* `String.t`, *default:* `nil`) - The cluster to which read/write requests should be routed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowTransactionalWrites => boolean() | nil,
          :clusterId => String.t() | nil
        }

  field(:allowTransactionalWrites)
  field(:clusterId)
end

defimpl Poison.Decoder, for: GoogleApi.BigtableAdmin.V2.Model.SingleClusterRouting do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.SingleClusterRouting.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigtableAdmin.V2.Model.SingleClusterRouting do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
