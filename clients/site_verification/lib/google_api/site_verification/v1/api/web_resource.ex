# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SiteVerification.V1.Api.WebResource do
  @moduledoc """
  API calls for all endpoints tagged `WebResource`.
  """

  alias GoogleApi.SiteVerification.V1.Connection
  import GoogleApi.SiteVerification.V1.RequestBuilder


  @doc """
  Relinquish ownership of a website or domain.

  ## Parameters

  - connection (GoogleApi.SiteVerification.V1.Connection): Connection to server
  - id (String): The id of a verified site or domain.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec site_verification_web_resource_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def site_verification_web_resource_delete(connection, id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:delete)
    |> url("/webResource/{id}", %{
         "id" => URI.encode_www_form(id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Get the most current data for a website or domain.

  ## Parameters

  - connection (GoogleApi.SiteVerification.V1.Connection): Connection to server
  - id (String): The id of a verified site or domain.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{}} on success
  {:error, info} on failure
  """
  @spec site_verification_web_resource_get(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource.t} | {:error, Tesla.Env.t}
  def site_verification_web_resource_get(connection, id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/webResource/{id}", %{
         "id" => URI.encode_www_form(id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{})
  end

  @doc """
  Get a verification token for placing on a website or domain.

  ## Parameters

  - connection (GoogleApi.SiteVerification.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (SiteVerificationWebResourceGettokenRequest): 

  ## Returns

  {:ok, %GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceGettokenResponse{}} on success
  {:error, info} on failure
  """
  @spec site_verification_web_resource_get_token(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceGettokenResponse.t} | {:error, Tesla.Env.t}
  def site_verification_web_resource_get_token(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/token")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceGettokenResponse{})
  end

  @doc """
  Attempt verification of a website or domain.

  ## Parameters

  - connection (GoogleApi.SiteVerification.V1.Connection): Connection to server
  - verification_method (String): The method to use for verifying a site or domain.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (SiteVerificationWebResourceResource): 

  ## Returns

  {:ok, %GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{}} on success
  {:error, info} on failure
  """
  @spec site_verification_web_resource_insert(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource.t} | {:error, Tesla.Env.t}
  def site_verification_web_resource_insert(connection, verification_method, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/webResource")
    |> add_param(:query, :"verificationMethod", verification_method)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{})
  end

  @doc """
  Get the list of your verified websites and domains.

  ## Parameters

  - connection (GoogleApi.SiteVerification.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceListResponse{}} on success
  {:error, info} on failure
  """
  @spec site_verification_web_resource_list(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceListResponse.t} | {:error, Tesla.Env.t}
  def site_verification_web_resource_list(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/webResource")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceListResponse{})
  end

  @doc """
  Modify the list of owners for your website or domain. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.SiteVerification.V1.Connection): Connection to server
  - id (String): The id of a verified site or domain.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (SiteVerificationWebResourceResource): 

  ## Returns

  {:ok, %GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{}} on success
  {:error, info} on failure
  """
  @spec site_verification_web_resource_patch(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource.t} | {:error, Tesla.Env.t}
  def site_verification_web_resource_patch(connection, id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/webResource/{id}", %{
         "id" => URI.encode_www_form(id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{})
  end

  @doc """
  Modify the list of owners for your website or domain.

  ## Parameters

  - connection (GoogleApi.SiteVerification.V1.Connection): Connection to server
  - id (String): The id of a verified site or domain.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (SiteVerificationWebResourceResource): 

  ## Returns

  {:ok, %GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{}} on success
  {:error, info} on failure
  """
  @spec site_verification_web_resource_update(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource.t} | {:error, Tesla.Env.t}
  def site_verification_web_resource_update(connection, id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/webResource/{id}", %{
         "id" => URI.encode_www_form(id)
       })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.SiteVerification.V1.Model.SiteVerificationWebResourceResource{})
  end
end
