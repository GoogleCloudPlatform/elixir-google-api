# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Storage.V1.Model.Bucket do
  @moduledoc """
  A bucket.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"acl",
    :"billing",
    :"cors",
    :"defaultObjectAcl",
    :"encryption",
    :"etag",
    :"id",
    :"kind",
    :"labels",
    :"lifecycle",
    :"location",
    :"logging",
    :"metageneration",
    :"name",
    :"owner",
    :"projectNumber",
    :"selfLink",
    :"storageClass",
    :"timeCreated",
    :"updated",
    :"versioning",
    :"website"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Storage.V1.Model.Bucket do
  import GoogleApi.Storage.V1.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"acl", :list, GoogleApi.Storage.V1.Model.BucketAccessControl, options)
    |> deserialize(:"billing", :struct, GoogleApi.Storage.V1.Model.Bucket_billing, options)
    |> deserialize(:"cors", :list, GoogleApi.Storage.V1.Model.Bucket_cors, options)
    |> deserialize(:"defaultObjectAcl", :list, GoogleApi.Storage.V1.Model.ObjectAccessControl, options)
    |> deserialize(:"encryption", :struct, GoogleApi.Storage.V1.Model.Bucket_encryption, options)
    |> deserialize(:"lifecycle", :struct, GoogleApi.Storage.V1.Model.Bucket_lifecycle, options)
    |> deserialize(:"logging", :struct, GoogleApi.Storage.V1.Model.Bucket_logging, options)
    |> deserialize(:"owner", :struct, GoogleApi.Storage.V1.Model.Bucket_owner, options)
    |> deserialize(:"versioning", :struct, GoogleApi.Storage.V1.Model.Bucket_versioning, options)
    |> deserialize(:"website", :struct, GoogleApi.Storage.V1.Model.Bucket_website, options)
  end
end

