# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Storage.V1.Model.Bucket do
  @moduledoc """
  A bucket.

  ## Attributes

  - acl ([BucketAccessControl]): Access controls on the bucket. Defaults to: `null`.
  - billing (BucketBilling):  Defaults to: `null`.
  - cors ([BucketCors]): The bucket&#39;s Cross-Origin Resource Sharing (CORS) configuration. Defaults to: `null`.
  - defaultEventBasedHold (boolean()): Defines the default value for Event-Based hold on newly created objects in this bucket. Event-Based hold is a way to retain objects indefinitely until an event occurs, signified by the hold&#39;s release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here bucket-level retention is 3 years and the event is loan being paid in full. In this example these objects will be held intact for any number of years until the event has occurred (hold is released) and then 3 more years after that. Objects under Event-Based hold cannot be deleted, overwritten or archived until the hold is removed. Defaults to: `null`.
  - defaultObjectAcl ([ObjectAccessControl]): Default access controls to apply to new objects when no ACL is provided. Defaults to: `null`.
  - encryption (BucketEncryption):  Defaults to: `null`.
  - etag (String.t): HTTP 1.1 Entity tag for the bucket. Defaults to: `null`.
  - id (String.t): The ID of the bucket. For buckets, the id and name properties are the same. Defaults to: `null`.
  - kind (String.t): The kind of item this is. For buckets, this is always storage#bucket. Defaults to: `null`.
  - labels (%{optional(String.t) &#x3D;&gt; String.t}): User-provided labels, in key/value pairs. Defaults to: `null`.
  - lifecycle (BucketLifecycle):  Defaults to: `null`.
  - location (String.t): The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer&#39;s guide for the authoritative list. Defaults to: `null`.
  - logging (BucketLogging):  Defaults to: `null`.
  - metageneration (String.t): The metadata generation of this bucket. Defaults to: `null`.
  - name (String.t): The name of the bucket. Defaults to: `null`.
  - owner (BucketOwner):  Defaults to: `null`.
  - projectNumber (String.t): The project number of the project the bucket belongs to. Defaults to: `null`.
  - retentionPolicy (BucketRetentionPolicy):  Defaults to: `null`.
  - selfLink (String.t): The URI of this bucket. Defaults to: `null`.
  - storageClass (String.t): The bucket&#39;s default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes. Defaults to: `null`.
  - timeCreated (DateTime.t): The creation time of the bucket in RFC 3339 format. Defaults to: `null`.
  - updated (DateTime.t): The modification time of the bucket in RFC 3339 format. Defaults to: `null`.
  - versioning (BucketVersioning):  Defaults to: `null`.
  - website (BucketWebsite):  Defaults to: `null`.
  """

  defstruct [
    :acl,
    :billing,
    :cors,
    :defaultEventBasedHold,
    :defaultObjectAcl,
    :encryption,
    :etag,
    :id,
    :kind,
    :labels,
    :lifecycle,
    :location,
    :logging,
    :metageneration,
    :name,
    :owner,
    :projectNumber,
    :retentionPolicy,
    :selfLink,
    :storageClass,
    :timeCreated,
    :updated,
    :versioning,
    :website
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Storage.V1.Model.Bucket do
  import GoogleApi.Storage.V1.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:acl, :list, GoogleApi.Storage.V1.Model.BucketAccessControl, options)
    |> deserialize(:billing, :struct, GoogleApi.Storage.V1.Model.BucketBilling, options)
    |> deserialize(:cors, :list, GoogleApi.Storage.V1.Model.BucketCors, options)
    |> deserialize(
      :defaultObjectAcl,
      :list,
      GoogleApi.Storage.V1.Model.ObjectAccessControl,
      options
    )
    |> deserialize(:encryption, :struct, GoogleApi.Storage.V1.Model.BucketEncryption, options)
    |> deserialize(:lifecycle, :struct, GoogleApi.Storage.V1.Model.BucketLifecycle, options)
    |> deserialize(:logging, :struct, GoogleApi.Storage.V1.Model.BucketLogging, options)
    |> deserialize(:owner, :struct, GoogleApi.Storage.V1.Model.BucketOwner, options)
    |> deserialize(
      :retentionPolicy,
      :struct,
      GoogleApi.Storage.V1.Model.BucketRetentionPolicy,
      options
    )
    |> deserialize(:timeCreated, :date, nil, options)
    |> deserialize(:updated, :date, nil, options)
    |> deserialize(:versioning, :struct, GoogleApi.Storage.V1.Model.BucketVersioning, options)
    |> deserialize(:website, :struct, GoogleApi.Storage.V1.Model.BucketWebsite, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Storage.V1.Model.Bucket do
  def encode(value, options) do
    GoogleApi.Storage.V1.Deserializer.serialize_non_nil(value, options)
  end
end
