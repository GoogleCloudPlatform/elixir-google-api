# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spectrum.V1explorer.Model.GeoSpectrumSchedule do
  @moduledoc """
  The schedule of spectrum profiles available at a particular geolocation.

  ## Attributes

  - location (GeoLocation): The geolocation identifies the location at which the spectrum schedule applies. It will always be present. Defaults to: `null`.
  - spectrumSchedules ([SpectrumSchedule]): A list of available spectrum profiles and associated times. It will always be present, and at least one schedule must be included (though it may be empty if there is no available spectrum). More than one schedule may be included to represent future changes to the available spectrum. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :location => GoogleApi.Spectrum.V1explorer.Model.GeoLocation.t(),
          :spectrumSchedules => list(GoogleApi.Spectrum.V1explorer.Model.SpectrumSchedule.t())
        }

  field(:location, as: GoogleApi.Spectrum.V1explorer.Model.GeoLocation)
  field(:spectrumSchedules, as: GoogleApi.Spectrum.V1explorer.Model.SpectrumSchedule, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Spectrum.V1explorer.Model.GeoSpectrumSchedule do
  def decode(value, options) do
    GoogleApi.Spectrum.V1explorer.Model.GeoSpectrumSchedule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spectrum.V1explorer.Model.GeoSpectrumSchedule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
