# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceDirectory.V1beta1.Model.ResolveServiceRequest do
  @moduledoc """
  The request message for LookupService.ResolveService.
  Looks up a service by its name, returns the service and its endpoints.

  ## Attributes

  *   `endpointFilter` (*type:* `String.t`, *default:* `nil`) - Optional. The filter applied to the endpoints of the resolved service.

      General filter string syntax:
      <field> <operator> <value> (<logical connector>)
      <field> can be "name" or "metadata.<key>" for map field.
      <operator> can be "<, >, <=, >=, !=, =, :". Of which ":" means HAS and is
      roughly the same as "=".
      <value> must be the same data type as the field.
      <logical connector> can be "AND, OR, NOT".

      Examples of valid filters:
      * "metadata.owner" returns Endpoints that have a label with the
        key "owner", this is the same as "metadata:owner"
      * "metadata.protocol=gRPC" returns Endpoints that have key/value
        "protocol=gRPC"
      * "metadata.owner!=sd AND metadata.foo=bar" returns
        Endpoints that have "owner" field in metadata with a value that is not
        "sd" AND have the key/value foo=bar.
  *   `maxEndpoints` (*type:* `integer()`, *default:* `nil`) - Optional. The maximum number of endpoints to return. Defaults to 25. Maximum is 100.
      If a value less than one is specified, the Default is used.
      If a value greater than the Maximum is specified, the Maximum is used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endpointFilter => String.t(),
          :maxEndpoints => integer()
        }

  field(:endpointFilter)
  field(:maxEndpoints)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceDirectory.V1beta1.Model.ResolveServiceRequest do
  def decode(value, options) do
    GoogleApi.ServiceDirectory.V1beta1.Model.ResolveServiceRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceDirectory.V1beta1.Model.ResolveServiceRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
