# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Directory.Directory_v1.Api.Chromeosdevices do
  @moduledoc """
  API calls for all endpoints tagged `Chromeosdevices`.
  """

  alias GoogleApi.Directory.Directory_v1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @library_version Mix.Project.config() |> Keyword.get(:version, "")

  
  @doc """
  Take action on Chrome OS Device

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Directory.Directory_v1.Connection.t`) - Connection to server
  *   `customer_id` (*type:* `String.t`) - Immutable ID of the G Suite account
  *   `resource_id` (*type:* `String.t`) - Immutable ID of Chrome OS Device
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:alt` (*type:* `String.t`) - Data format for the response.
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      *   `:userIp` (*type:* `String.t`) - Deprecated. Please use quotaUser instead.
      *   `:body` (*type:* `GoogleApi.Directory.Directory_v1.Model.ChromeOsDeviceAction.t`) - 
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %{}}` on success
  *   `{:error, info}` on failure
  """
  @spec directory_chromeosdevices_action(Tesla.Env.client(), String.t, String.t, keyword(), keyword()) :: {:ok, nil} | {:ok, Tesla.Env.t()} | {:error, Tesla.Env.t()}
  def directory_chromeosdevices_action(connection, customer_id, resource_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
    
      :"alt" => :"query",
    
      :"fields" => :"query",
    
      :"key" => :"query",
    
      :"oauth_token" => :"query",
    
      :"prettyPrint" => :"query",
    
      :"quotaUser" => :"query",
    
      :"userIp" => :"query",
    
    
      :"body" => :"body",
    
    }

    request =
      Request.new()
      |> Request.method(:"post")
      |> Request.url("/customer/{customerId}/devices/chromeos/{resourceId}/action", %{
        "customerId" => URI.encode(customer_id, &URI.char_unreserved?/1),
      
        "resourceId" => URI.encode(resource_id, &URI.char_unreserved?/1),
      })
      
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end
  
  @doc """
  Retrieve Chrome OS Device

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Directory.Directory_v1.Connection.t`) - Connection to server
  *   `customer_id` (*type:* `String.t`) - Immutable ID of the G Suite account
  *   `device_id` (*type:* `String.t`) - Immutable ID of Chrome OS Device
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:alt` (*type:* `String.t`) - Data format for the response.
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      *   `:userIp` (*type:* `String.t`) - Deprecated. Please use quotaUser instead.
      *   `:projection` (*type:* `String.t`) - Restrict information returned to a set of selected fields.
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice{}}` on success
  *   `{:error, info}` on failure
  """
  @spec directory_chromeosdevices_get(Tesla.Env.client(), String.t, String.t, keyword(), keyword()) :: {:ok, GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice.t} | {:ok, Tesla.Env.t()} | {:error, Tesla.Env.t()}
  def directory_chromeosdevices_get(connection, customer_id, device_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
    
      :"alt" => :"query",
    
      :"fields" => :"query",
    
      :"key" => :"query",
    
      :"oauth_token" => :"query",
    
      :"prettyPrint" => :"query",
    
      :"quotaUser" => :"query",
    
      :"userIp" => :"query",
    
    
      :"projection" => :"query",
    
    }

    request =
      Request.new()
      |> Request.method(:"get")
      |> Request.url("/customer/{customerId}/devices/chromeos/{deviceId}", %{
        "customerId" => URI.encode(customer_id, &URI.char_unreserved?/1),
      
        "deviceId" => URI.encode(device_id, &URI.char_unreserved?/1),
      })
      
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice{}])
  end
  
  @doc """
  Retrieve all Chrome OS Devices of a customer (paginated)

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Directory.Directory_v1.Connection.t`) - Connection to server
  *   `customer_id` (*type:* `String.t`) - Immutable ID of the G Suite account
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:alt` (*type:* `String.t`) - Data format for the response.
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      *   `:userIp` (*type:* `String.t`) - Deprecated. Please use quotaUser instead.
      *   `:maxResults` (*type:* `integer()`) - Maximum number of results to return. Max allowed value is 200.
      *   `:orderBy` (*type:* `String.t`) - Column to use for sorting results
      *   `:orgUnitPath` (*type:* `String.t`) - Full path of the organizational unit or its ID
      *   `:pageToken` (*type:* `String.t`) - Token to specify next page in the list
      *   `:projection` (*type:* `String.t`) - Restrict information returned to a set of selected fields.
      *   `:query` (*type:* `String.t`) - Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?answer=1698333
      *   `:sortOrder` (*type:* `String.t`) - Whether to return results in ascending or descending order. Only of use when orderBy is also used
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevices{}}` on success
  *   `{:error, info}` on failure
  """
  @spec directory_chromeosdevices_list(Tesla.Env.client(), String.t, keyword(), keyword()) :: {:ok, GoogleApi.Directory.Directory_v1.Model.ChromeOsDevices.t} | {:ok, Tesla.Env.t()} | {:error, Tesla.Env.t()}
  def directory_chromeosdevices_list(connection, customer_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
    
      :"alt" => :"query",
    
      :"fields" => :"query",
    
      :"key" => :"query",
    
      :"oauth_token" => :"query",
    
      :"prettyPrint" => :"query",
    
      :"quotaUser" => :"query",
    
      :"userIp" => :"query",
    
    
      :"maxResults" => :"query",
    
      :"orderBy" => :"query",
    
      :"orgUnitPath" => :"query",
    
      :"pageToken" => :"query",
    
      :"projection" => :"query",
    
      :"query" => :"query",
    
      :"sortOrder" => :"query",
    
    }

    request =
      Request.new()
      |> Request.method(:"get")
      |> Request.url("/customer/{customerId}/devices/chromeos", %{
        "customerId" => URI.encode(customer_id, &URI.char_unreserved?/1),
      })
      
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevices{}])
  end
  
  @doc """
  Move or insert multiple Chrome OS Devices to organizational unit

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Directory.Directory_v1.Connection.t`) - Connection to server
  *   `customer_id` (*type:* `String.t`) - Immutable ID of the G Suite account
  *   `org_unit_path` (*type:* `String.t`) - Full path of the target organizational unit or its ID
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:alt` (*type:* `String.t`) - Data format for the response.
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      *   `:userIp` (*type:* `String.t`) - Deprecated. Please use quotaUser instead.
      *   `:body` (*type:* `GoogleApi.Directory.Directory_v1.Model.ChromeOsMoveDevicesToOu.t`) - 
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %{}}` on success
  *   `{:error, info}` on failure
  """
  @spec directory_chromeosdevices_move_devices_to_ou(Tesla.Env.client(), String.t, String.t, keyword(), keyword()) :: {:ok, nil} | {:ok, Tesla.Env.t()} | {:error, Tesla.Env.t()}
  def directory_chromeosdevices_move_devices_to_ou(connection, customer_id, org_unit_path, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
    
      :"alt" => :"query",
    
      :"fields" => :"query",
    
      :"key" => :"query",
    
      :"oauth_token" => :"query",
    
      :"prettyPrint" => :"query",
    
      :"quotaUser" => :"query",
    
      :"userIp" => :"query",
    
    
      :"body" => :"body",
    
    }

    request =
      Request.new()
      |> Request.method(:"post")
      |> Request.url("/customer/{customerId}/devices/chromeos/moveDevicesToOu", %{
        "customerId" => URI.encode(customer_id, &URI.char_unreserved?/1),
      })
      
      |> Request.add_param(:"query", :"orgUnitPath", org_unit_path)
      
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end
  
  @doc """
  Update Chrome OS Device. This method supports patch semantics.

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Directory.Directory_v1.Connection.t`) - Connection to server
  *   `customer_id` (*type:* `String.t`) - Immutable ID of the G Suite account
  *   `device_id` (*type:* `String.t`) - Immutable ID of Chrome OS Device
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:alt` (*type:* `String.t`) - Data format for the response.
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      *   `:userIp` (*type:* `String.t`) - Deprecated. Please use quotaUser instead.
      *   `:projection` (*type:* `String.t`) - Restrict information returned to a set of selected fields.
      *   `:body` (*type:* `GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice.t`) - 
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice{}}` on success
  *   `{:error, info}` on failure
  """
  @spec directory_chromeosdevices_patch(Tesla.Env.client(), String.t, String.t, keyword(), keyword()) :: {:ok, GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice.t} | {:ok, Tesla.Env.t()} | {:error, Tesla.Env.t()}
  def directory_chromeosdevices_patch(connection, customer_id, device_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
    
      :"alt" => :"query",
    
      :"fields" => :"query",
    
      :"key" => :"query",
    
      :"oauth_token" => :"query",
    
      :"prettyPrint" => :"query",
    
      :"quotaUser" => :"query",
    
      :"userIp" => :"query",
    
    
      :"projection" => :"query",
    
      :"body" => :"body",
    
    }

    request =
      Request.new()
      |> Request.method(:"patch")
      |> Request.url("/customer/{customerId}/devices/chromeos/{deviceId}", %{
        "customerId" => URI.encode(customer_id, &URI.char_unreserved?/1),
      
        "deviceId" => URI.encode(device_id, &URI.char_unreserved?/1),
      })
      
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice{}])
  end
  
  @doc """
  Update Chrome OS Device

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Directory.Directory_v1.Connection.t`) - Connection to server
  *   `customer_id` (*type:* `String.t`) - Immutable ID of the G Suite account
  *   `device_id` (*type:* `String.t`) - Immutable ID of Chrome OS Device
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:alt` (*type:* `String.t`) - Data format for the response.
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      *   `:userIp` (*type:* `String.t`) - Deprecated. Please use quotaUser instead.
      *   `:projection` (*type:* `String.t`) - Restrict information returned to a set of selected fields.
      *   `:body` (*type:* `GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice.t`) - 
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice{}}` on success
  *   `{:error, info}` on failure
  """
  @spec directory_chromeosdevices_update(Tesla.Env.client(), String.t, String.t, keyword(), keyword()) :: {:ok, GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice.t} | {:ok, Tesla.Env.t()} | {:error, Tesla.Env.t()}
  def directory_chromeosdevices_update(connection, customer_id, device_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
    
      :"alt" => :"query",
    
      :"fields" => :"query",
    
      :"key" => :"query",
    
      :"oauth_token" => :"query",
    
      :"prettyPrint" => :"query",
    
      :"quotaUser" => :"query",
    
      :"userIp" => :"query",
    
    
      :"projection" => :"query",
    
      :"body" => :"body",
    
    }

    request =
      Request.new()
      |> Request.method(:"put")
      |> Request.url("/customer/{customerId}/devices/chromeos/{deviceId}", %{
        "customerId" => URI.encode(customer_id, &URI.char_unreserved?/1),
      
        "deviceId" => URI.encode(device_id, &URI.char_unreserved?/1),
      })
      
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Directory.Directory_v1.Model.ChromeOsDevice{}])
  end
  
end
